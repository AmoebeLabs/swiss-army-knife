{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Swiss Army Knife custom card for Home Assistant documenation \u00b6 This card is not yet released. Documentation is for testing purposes!","title":"Home"},{"location":"#welcome-to-the-swiss-army-knife-custom-card-for-home-assistant-documenation","text":"This card is not yet released. Documentation is for testing purposes!","title":"Welcome to the Swiss Army Knife custom card for Home Assistant documenation"},{"location":"a-page/","text":"Testing my first chapter! \u00b6 Look if this is gonna work for me. Who knows? It seems to rebuild indeed on save. Almost instant! Still have to learn a bit of MD, but that will come as I copy stuff from other sites. Does this do it?","title":"A page"},{"location":"a-page/#testing-my-first-chapter","text":"Look if this is gonna work for me. Who knows? It seems to rebuild indeed on save. Almost instant! Still have to learn a bit of MD, but that will come as I copy stuff from other sites. Does this do it?","title":"Testing my first chapter!"},{"location":"second-page/","text":"Testing my first chapter! \u00b6 Look if this is gonna work for me. Who knows? It seems to rebuild indeed on save. Almost instant! Still have to learn a bit of MD, but that will come as I copy stuff from other sites. Does this do it?","title":"Second page"},{"location":"second-page/#testing-my-first-chapter","text":"Look if this is gonna work for me. Who knows? It seems to rebuild indeed on save. Almost instant! Still have to learn a bit of MD, but that will come as I copy stuff from other sites. Does this do it?","title":"Testing my first chapter!"},{"location":"animations/colorstops/","text":"Using colorstops do change the color of a tool \u00b6 One way to style the color of a tool is using colorstops where the state of the entity is used to choose a color to fill the tool. 1 2 3 4 5 - type : 'custom:swiss-army-knife-card' entities : - entity : sensor.u_s_air_quality_index name : 'Air quality' area : 'Tha Moon' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 entity_index : 0 # First entity is index 0 show : style : 'colorstops' # Format using colorstops colorstops : fill : true # Use the fill property (or stroke) colors : 0 : '#A8E05F' # Good (0..50) - Green 51 : '#FDD74B' # Moderate (51..100) - Yellow 101 : '#FE9B57' # Unhealthy for sensitive groups - Orange 151 : '#FE6A69' # Unhealthy (101..150) - Red 201 : '#A97ABC' # Very Unhealthy (201..300) - Purple 301 : '#A87383' # Hazardous (300 and up) - Brown styles : circle : transition : fill 0.5s # Take 0.5s to change color Animate a circle using an animation operators \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 entity_index : 0 animations : - state : '50' # Good (0..50) - Green operator : <= styles : circle : fill : '#A8E05F' - state : '100' # Moderate (51..100) - Yellow operator : <= styles : circle : fill : '#FDD74B' - state : '150' # Unhealthy for sensitive groups - Orange operator : <= styles : circle : fill : '#FE9B57' - state : '200' # Unhealthy (101..150) - Red operator : <= styles : circle : fill : '#FE6A69' - state : '300' # Very Unhealthy (201..300) - Purple operator : <= styles : circle : fill : '#A97ABC' - state : '9999' # Hazardous (300 and up) - Brown operator : <= styles : circle : fill : '#A87383' CSS Classes can be used to get uniform styling over multiple cards with minimal work. More than one class can be enabled to be used for a tool. 1 2 3 4 5 6 7 8 - type : 'circle' position : cx : 50 cy : 50 radius : 25 classes : circle : # Class definitions for circle my-red-circle : true # User defined CSS class css definition in user-css-definitions.yaml 1 2 3 4 5 6 - descr : My red circle definition content : > .my-red-circle { stroke: red; fill: red; } Styling using CSS inline Styles \u00b6 The same can be accomplished using styles. 1 2 3 4 5 6 7 8 9 - type : 'circle' position : cx : 50 cy : 50 radius : 25 styles : circle : stroke : red fill : red Styling using CSS classes and overriding inline Styles \u00b6 The next definition results in a circle with red stroke and blue fill. The stroke comes from the Class definition, and the fill from the class definition is overwritten by the style definition. 1 2 3 4 5 6 7 8 9 10 11 - type : 'circle' position : cx : 50 cy : 50 radius : 25 classes : circle : my-red-circle : true styles : circle : fill : blue","title":"Colorstops"},{"location":"animations/colorstops/#using-colorstops-do-change-the-color-of-a-tool","text":"One way to style the color of a tool is using colorstops where the state of the entity is used to choose a color to fill the tool. 1 2 3 4 5 - type : 'custom:swiss-army-knife-card' entities : - entity : sensor.u_s_air_quality_index name : 'Air quality' area : 'Tha Moon' 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 entity_index : 0 # First entity is index 0 show : style : 'colorstops' # Format using colorstops colorstops : fill : true # Use the fill property (or stroke) colors : 0 : '#A8E05F' # Good (0..50) - Green 51 : '#FDD74B' # Moderate (51..100) - Yellow 101 : '#FE9B57' # Unhealthy for sensitive groups - Orange 151 : '#FE6A69' # Unhealthy (101..150) - Red 201 : '#A97ABC' # Very Unhealthy (201..300) - Purple 301 : '#A87383' # Hazardous (300 and up) - Brown styles : circle : transition : fill 0.5s # Take 0.5s to change color","title":"Using colorstops do change the color of a tool"},{"location":"animations/colorstops/#animate-a-circle-using-an-animation-operators","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 entity_index : 0 animations : - state : '50' # Good (0..50) - Green operator : <= styles : circle : fill : '#A8E05F' - state : '100' # Moderate (51..100) - Yellow operator : <= styles : circle : fill : '#FDD74B' - state : '150' # Unhealthy for sensitive groups - Orange operator : <= styles : circle : fill : '#FE9B57' - state : '200' # Unhealthy (101..150) - Red operator : <= styles : circle : fill : '#FE6A69' - state : '300' # Very Unhealthy (201..300) - Purple operator : <= styles : circle : fill : '#A97ABC' - state : '9999' # Hazardous (300 and up) - Brown operator : <= styles : circle : fill : '#A87383' CSS Classes can be used to get uniform styling over multiple cards with minimal work. More than one class can be enabled to be used for a tool. 1 2 3 4 5 6 7 8 - type : 'circle' position : cx : 50 cy : 50 radius : 25 classes : circle : # Class definitions for circle my-red-circle : true # User defined CSS class css definition in user-css-definitions.yaml 1 2 3 4 5 6 - descr : My red circle definition content : > .my-red-circle { stroke: red; fill: red; }","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Animate a circle using an animation operators"},{"location":"animations/colorstops/#styling-using-css-inline-styles","text":"The same can be accomplished using styles. 1 2 3 4 5 6 7 8 9 - type : 'circle' position : cx : 50 cy : 50 radius : 25 styles : circle : stroke : red fill : red","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Styling using CSS inline Styles"},{"location":"animations/colorstops/#styling-using-css-classes-and-overriding-inline-styles","text":"The next definition results in a circle with red stroke and blue fill. The stroke comes from the Class definition, and the fill from the class definition is overwritten by the style definition. 1 2 3 4 5 6 7 8 9 10 11 - type : 'circle' position : cx : 50 cy : 50 radius : 25 classes : circle : my-red-circle : true styles : circle : fill : blue","title":"Styling using CSS classes and overriding inline Styles"},{"location":"examples/example-1/","text":"A single card displaying data from Airvisual, the current weather and a 5 day weather forecast. Visualization \u00b6 This visualization is divided into three major blocks: The top part shows the weathertype, temperature, humidity and AQI value. The weathertype is displayed using an external animated SVG Next are three segmented arc tools with dedicated colorstops and the state value and icon inside. The AQI icon is state dependant. The second / middle block shows pressure, wind and wind direction and sunset and sunrise The last block shows the 5 day weather forecast. The localized short day name using a bit of javascript in the YAML definition The expected weather type using (again) external animated SVG's The maximum expected temperature The minimum expected temperature The expected precipitation Data sources \u00b6 Met.no Weather integration Airvisual integration In total approx 50 entities are used to build this visualization. Configuration \u00b6 If you LOVE YAML If you DON'T love YAML It's your lucky day This is your go-to card: absolutely NO re-use, so no templates are used to define this card. It's a whopping 1.500 lines of YAML! It was my first card, made in a time where templates didn't exist yet! Skip this one for now Skip this example and look at the other examples first! Or start with this one, and learn how to read YAML the hard way... Lovelace view \u00b6 This example is in the view-sake1.yaml file in the /lovelace/views folder. File assets \u00b6 To display the weather type, you need the external animated SVG's which are located in the /local/images/weather folder Definitions used in the animations section to display the weather type icon images : - clear-night-night : /local/images/weather/clear-night.svg - cloudy-day : /local/images/weather/cloudy-day.svg - cloudy-night : /local/images/weather/cloudy-night.svg - fog-day : /local/images/weather/fog-day.svg - fog-night : /local/images/weather/fog-night.svg - hail-day : /local/images/weather/hail-day.svg - hail-night : /local/images/weather/hail-night.svg - lightning-day : /local/images/weather/lightning.svg - lightning-night : /local/images/weather/lightning.svg - partlycloudy-day : /local/images/weather/partlycloudy-day.svg - partlycloudy-night : /local/images/weather/partlycloudy-night.svg - pouring-day : /local/images/weather/pouring.svg - pouring-night : /local/images/weather/pouring-night.svg - rainy-day : /local/images/weather/rainy-day.svg - rainy-night : /local/images/weather/rainy-night.svg - snowy-day : /local/images/weather/snowy-day.svg - snowy-night : /local/images/weather/snowy-night.svg - snowy-rainy-day : /local/images/weather/snowy-rainy-day.svg - snowy-rainy-night : /local/images/weather/snowy-rainy-night.svg - sunny-day : /local/images/weather/sunny-day.svg - sunny-night : /local/images/weather/clear-night.svg - snowy-rainy-day : /local/images/weather/snowy-rainy-day.svg - snowy-rainy-night : /local/images/weather/snowy-rainy-night.svg - windy-day : /local/images/weather/windy-day.svg - windy-night : /local/images/weather/windy-night.svg - windy-variant-day : /local/images/weather/windy-variant.svg - windy-variant-night : /local/images/weather/windy-variant.svg animations : - state : '[[[ return (state); ]]]' image : > [[[ if (states[\"sun.sun\"].state == 'below_horizon') return (state + '-night'); return (state + '-day'); ]]] Interactions \u00b6 All tools support by default the \"more-info\" dialog once clicked. Remarks \u00b6 This view shows the dutch translation for \"Partly Cloudy \u2192 Gedeeltelijk bewolkt\" and the wind direction \"WSW \u2192 WZW\". Support for translations is possible using a YAML definition.","title":"1. Airvisual & Weather forecast"},{"location":"examples/example-1/#visualization","text":"This visualization is divided into three major blocks: The top part shows the weathertype, temperature, humidity and AQI value. The weathertype is displayed using an external animated SVG Next are three segmented arc tools with dedicated colorstops and the state value and icon inside. The AQI icon is state dependant. The second / middle block shows pressure, wind and wind direction and sunset and sunrise The last block shows the 5 day weather forecast. The localized short day name using a bit of javascript in the YAML definition The expected weather type using (again) external animated SVG's The maximum expected temperature The minimum expected temperature The expected precipitation","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Visualization"},{"location":"examples/example-1/#data-sources","text":"Met.no Weather integration Airvisual integration In total approx 50 entities are used to build this visualization.","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Data sources"},{"location":"examples/example-1/#configuration","text":"If you LOVE YAML If you DON'T love YAML It's your lucky day This is your go-to card: absolutely NO re-use, so no templates are used to define this card. It's a whopping 1.500 lines of YAML! It was my first card, made in a time where templates didn't exist yet! Skip this one for now Skip this example and look at the other examples first! Or start with this one, and learn how to read YAML the hard way...","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Configuration"},{"location":"examples/example-1/#lovelace-view","text":"This example is in the view-sake1.yaml file in the /lovelace/views folder.","title":"Lovelace view"},{"location":"examples/example-1/#file-assets","text":"To display the weather type, you need the external animated SVG's which are located in the /local/images/weather folder Definitions used in the animations section to display the weather type icon images : - clear-night-night : /local/images/weather/clear-night.svg - cloudy-day : /local/images/weather/cloudy-day.svg - cloudy-night : /local/images/weather/cloudy-night.svg - fog-day : /local/images/weather/fog-day.svg - fog-night : /local/images/weather/fog-night.svg - hail-day : /local/images/weather/hail-day.svg - hail-night : /local/images/weather/hail-night.svg - lightning-day : /local/images/weather/lightning.svg - lightning-night : /local/images/weather/lightning.svg - partlycloudy-day : /local/images/weather/partlycloudy-day.svg - partlycloudy-night : /local/images/weather/partlycloudy-night.svg - pouring-day : /local/images/weather/pouring.svg - pouring-night : /local/images/weather/pouring-night.svg - rainy-day : /local/images/weather/rainy-day.svg - rainy-night : /local/images/weather/rainy-night.svg - snowy-day : /local/images/weather/snowy-day.svg - snowy-night : /local/images/weather/snowy-night.svg - snowy-rainy-day : /local/images/weather/snowy-rainy-day.svg - snowy-rainy-night : /local/images/weather/snowy-rainy-night.svg - sunny-day : /local/images/weather/sunny-day.svg - sunny-night : /local/images/weather/clear-night.svg - snowy-rainy-day : /local/images/weather/snowy-rainy-day.svg - snowy-rainy-night : /local/images/weather/snowy-rainy-night.svg - windy-day : /local/images/weather/windy-day.svg - windy-night : /local/images/weather/windy-night.svg - windy-variant-day : /local/images/weather/windy-variant.svg - windy-variant-night : /local/images/weather/windy-variant.svg animations : - state : '[[[ return (state); ]]]' image : > [[[ if (states[\"sun.sun\"].state == 'below_horizon') return (state + '-night'); return (state + '-day'); ]]]","title":"File assets"},{"location":"examples/example-1/#interactions","text":"All tools support by default the \"more-info\" dialog once clicked.","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Interactions"},{"location":"examples/example-1/#remarks","text":"This view shows the dutch translation for \"Partly Cloudy \u2192 Gedeeltelijk bewolkt\" and the wind direction \"WSW \u2192 WZW\". Support for translations is possible using a YAML definition.","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Remarks"},{"location":"examples/example-2/","text":"Visualization of lights and interaction to switch lights on and off and to control brightness using a slider for the first row. Visualization \u00b6 Tip This visualization shows some non-card alike aspects of the Swiss Army Knife: the horizontal divider lines, and the texts \"SCENES\", \"VERLICHTING (Lights)\" and \"WOONKAMER (Livingroom)\" are all made with SAK. The first lights row shows some cards with different experimental sliders and a segmented arc to display the brightness. The other rows show a standard light card. The light switch (all cards) The light switch is made out of 3 circles and an icon: the 1 st (bottom) circle is used to get the Neumorphic effect: a button that 'rises' out of the background. It also servers as the edge of the light button. the second circle is used to display the activation ring; orange if 'on' and light grey if 'off'. the third (top) circle is used to display the inset shadow effect as if the button is \"pressed\". last but not least: the light icon is displayed on top of all those circles. First card The first card shows a \"more-info\" button in the top left, the ligh button, the name of the light, and a slider with the actual percentage on the right side of the slider. The position of that value can be defined in the card. Second and third card The configurable position of the percentage is visible in the second and third card: apart from using a different styled slider, the percentage is shown in the circle where the segmented arc is also defined. The rest of the cards The other 4 - identical - cards show the light button, the area (Woonkamer = Livingroom), the name of the light, and if present: the brightness in the lower right corner. Brightness is only displayed if the light is on This is a change in Home Assistant some months ago. Data sources \u00b6 Ikea Tradfri Zigbee lights using zigbee2mqtt, ie the MQTT integration Dumb on/off lights using MQTT. Configuration \u00b6 Lovelace view \u00b6 This example is in the view-sake2.yaml file in the /lovelace/views folder. This example uses decluttering templates for all cards except for the first row of lights! Both SAK templates and Decluttering templates are used to display the cards. This view is therefore as compact and easy to read as possible and is a good example of re-use. Excerpt of the headers and dividers in this view... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 - type : custom:decluttering-card template : divider_template - type : custom:decluttering-card template : header_template variables : - content : 'Scenes' - type : custom:decluttering-card template : divider_template - type : custom:decluttering-card template : header_template variables : - content : 'Verlichting' - type : custom:decluttering-card template : header_template variables : - content : 'Woonkamer' - font_color : var(--secondary-text-color) - font_size : 3em And the excerpt of the lights on second and third row... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 - type : horizontal-stack cards : - type : custom:decluttering-card template : sak_light_button_template_nm_tpl variables : - entity : light.livingroom_light_gasheater_light - area : Woonkamer - name : Rode Lamp - icon : 'mdi:floor-lamp' - type : custom:decluttering-card template : sak_light_button_template_nm_tpl variables : - entity : light.livingroom_light_cupboard_light - area : Woonkamer - name : Boekenkast - icon : 'mdi:book-open-outline' SAK templates \u00b6 The following templates are defined in the /lovelace/sak_templates/sak-templates.yaml file: The toolset_light_button_nm is the template used for the standard lights (second and third row of cards). The toolset_light_button_slider_nm for the first card on the first row. The toolset_light_button_slider3_nm for the second card on the first row. The toolset_light_button_slider2_nm for the third card on the first row. Excerpt of the sak-templates.yaml file... 1 2 3 4 5 6 7 8 9 10 11 toolset_light_button_nm : !include toolset-light-button-nm-template.yaml toolset_light_button_slider_nm : !include toolset-light-button-slider-nm-template.yaml toolset_light_button_slider2_nm : !include toolset-light-button-slider2-nm-template.yaml toolset_light_button_slider3_nm : !include toolset-light-button-slider3-nm-template.yaml Decluttering templates \u00b6 Decluttering templates are used extensively in this view except for the cards on the first row. The following templates are defined in /lovelace/decluttering_templates/decluttering_templates.yaml file: The header_template is used for displaying the header sak card The divider_template is used for displaying the divider line sak card The sak_button_template_nm_tpl is used for displaying the light card Excerpt of the decluttering_templates.yaml file... 1 2 3 4 5 6 7 header_template : !include sak-header-template-mw.yaml divider_template : !include sak-divider-template-mw.yaml sak_light_button_template_nm_tpl : !include sak-light-button-nm-tpl.yaml Interactions \u00b6 Sliders \u2192 Experimental First row The first row has an explicit \"more-info\" menu button and sliders for brightness The menu in the upper left corner calls the \"more-info\" popup for the light. Clicking the light icon toggles the state of the light Clicking on the slider will set the brightness to the percentage. Dragging the slider will set the brightness and update the lights brightness semi-realtime 4 times a second. Menu in upper left corner can be difficult to touch/click The SVG Icon has no real \"touch/click\" area attached (yet). Therefore it is difficult to activate the menu as SVG Icons can only be touched/clicked on the foreground part of the icon. The slider has a touch/click attached, so is perfectly to use Except for a little bug where the thumb is pulled to the edge of the touch/click area or the brightness is set to 100%, and cannot be controlled anymore. In this case clicking/touching the slider makes the thumb accessible again. The thumb of the slider of the first card is not positioned correctly The slider expects to be in the center of the card, which this slider is not. As a result the thumb is positioned more to the left than it should be. Will be fixed of course . Other rows All cards displayed toggle the light by clicking on the light icon All cards displayed show the \"more-info\" dialog if name or brightness percentage is clicked. Remarks \u00b6 Home Assistant sends a brightness value between 0..255. A little piece of javascript in the card converts this to 0..100% as a derived state, including a unit of measurement definition of \"%\". This means that the value and the uom can be styled as if it is an existing state.","title":"2. Lights"},{"location":"examples/example-2/#visualization","text":"Tip This visualization shows some non-card alike aspects of the Swiss Army Knife: the horizontal divider lines, and the texts \"SCENES\", \"VERLICHTING (Lights)\" and \"WOONKAMER (Livingroom)\" are all made with SAK. The first lights row shows some cards with different experimental sliders and a segmented arc to display the brightness. The other rows show a standard light card. The light switch (all cards) The light switch is made out of 3 circles and an icon: the 1 st (bottom) circle is used to get the Neumorphic effect: a button that 'rises' out of the background. It also servers as the edge of the light button. the second circle is used to display the activation ring; orange if 'on' and light grey if 'off'. the third (top) circle is used to display the inset shadow effect as if the button is \"pressed\". last but not least: the light icon is displayed on top of all those circles. First card The first card shows a \"more-info\" button in the top left, the ligh button, the name of the light, and a slider with the actual percentage on the right side of the slider. The position of that value can be defined in the card. Second and third card The configurable position of the percentage is visible in the second and third card: apart from using a different styled slider, the percentage is shown in the circle where the segmented arc is also defined. The rest of the cards The other 4 - identical - cards show the light button, the area (Woonkamer = Livingroom), the name of the light, and if present: the brightness in the lower right corner. Brightness is only displayed if the light is on This is a change in Home Assistant some months ago.","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Visualization"},{"location":"examples/example-2/#data-sources","text":"Ikea Tradfri Zigbee lights using zigbee2mqtt, ie the MQTT integration Dumb on/off lights using MQTT.","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Data sources"},{"location":"examples/example-2/#configuration","text":"","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Configuration"},{"location":"examples/example-2/#lovelace-view","text":"This example is in the view-sake2.yaml file in the /lovelace/views folder. This example uses decluttering templates for all cards except for the first row of lights! Both SAK templates and Decluttering templates are used to display the cards. This view is therefore as compact and easy to read as possible and is a good example of re-use. Excerpt of the headers and dividers in this view... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 - type : custom:decluttering-card template : divider_template - type : custom:decluttering-card template : header_template variables : - content : 'Scenes' - type : custom:decluttering-card template : divider_template - type : custom:decluttering-card template : header_template variables : - content : 'Verlichting' - type : custom:decluttering-card template : header_template variables : - content : 'Woonkamer' - font_color : var(--secondary-text-color) - font_size : 3em And the excerpt of the lights on second and third row... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 - type : horizontal-stack cards : - type : custom:decluttering-card template : sak_light_button_template_nm_tpl variables : - entity : light.livingroom_light_gasheater_light - area : Woonkamer - name : Rode Lamp - icon : 'mdi:floor-lamp' - type : custom:decluttering-card template : sak_light_button_template_nm_tpl variables : - entity : light.livingroom_light_cupboard_light - area : Woonkamer - name : Boekenkast - icon : 'mdi:book-open-outline'","title":"Lovelace view"},{"location":"examples/example-2/#sak-templates","text":"The following templates are defined in the /lovelace/sak_templates/sak-templates.yaml file: The toolset_light_button_nm is the template used for the standard lights (second and third row of cards). The toolset_light_button_slider_nm for the first card on the first row. The toolset_light_button_slider3_nm for the second card on the first row. The toolset_light_button_slider2_nm for the third card on the first row. Excerpt of the sak-templates.yaml file... 1 2 3 4 5 6 7 8 9 10 11 toolset_light_button_nm : !include toolset-light-button-nm-template.yaml toolset_light_button_slider_nm : !include toolset-light-button-slider-nm-template.yaml toolset_light_button_slider2_nm : !include toolset-light-button-slider2-nm-template.yaml toolset_light_button_slider3_nm : !include toolset-light-button-slider3-nm-template.yaml","title":"SAK templates"},{"location":"examples/example-2/#decluttering-templates","text":"Decluttering templates are used extensively in this view except for the cards on the first row. The following templates are defined in /lovelace/decluttering_templates/decluttering_templates.yaml file: The header_template is used for displaying the header sak card The divider_template is used for displaying the divider line sak card The sak_button_template_nm_tpl is used for displaying the light card Excerpt of the decluttering_templates.yaml file... 1 2 3 4 5 6 7 header_template : !include sak-header-template-mw.yaml divider_template : !include sak-divider-template-mw.yaml sak_light_button_template_nm_tpl : !include sak-light-button-nm-tpl.yaml","title":"Decluttering templates"},{"location":"examples/example-2/#interactions","text":"Sliders \u2192 Experimental First row The first row has an explicit \"more-info\" menu button and sliders for brightness The menu in the upper left corner calls the \"more-info\" popup for the light. Clicking the light icon toggles the state of the light Clicking on the slider will set the brightness to the percentage. Dragging the slider will set the brightness and update the lights brightness semi-realtime 4 times a second. Menu in upper left corner can be difficult to touch/click The SVG Icon has no real \"touch/click\" area attached (yet). Therefore it is difficult to activate the menu as SVG Icons can only be touched/clicked on the foreground part of the icon. The slider has a touch/click attached, so is perfectly to use Except for a little bug where the thumb is pulled to the edge of the touch/click area or the brightness is set to 100%, and cannot be controlled anymore. In this case clicking/touching the slider makes the thumb accessible again. The thumb of the slider of the first card is not positioned correctly The slider expects to be in the center of the card, which this slider is not. As a result the thumb is positioned more to the left than it should be. Will be fixed of course . Other rows All cards displayed toggle the light by clicking on the light icon All cards displayed show the \"more-info\" dialog if name or brightness percentage is clicked.","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Interactions"},{"location":"examples/example-2/#remarks","text":"Home Assistant sends a brightness value between 0..255. A little piece of javascript in the card converts this to 0..100% as a derived state, including a unit of measurement definition of \"%\". This means that the value and the uom can be styled as if it is an existing state.","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Remarks"},{"location":"examples/example-3/","text":"","title":"3. Sensors"},{"location":"examples/example-4/","text":"","title":"4. More sensors"},{"location":"examples/example-5/","text":"","title":"5. Car dashboard alike"},{"location":"examples/example-6/","text":"","title":"6. Weather on SVG background"},{"location":"examples/example-7/","text":"","title":"7. Servers"},{"location":"examples/example-8/","text":"","title":"8. Homekit alike"},{"location":"examples/how-to/","text":"","title":"How to"},{"location":"examples/introduction/","text":"","title":"Introduction"},{"location":"styling/classes/","text":"","title":"Classes"},{"location":"styling/overview/","text":"","title":"An Overview"},{"location":"styling/styles/","text":"","title":"Styles"},{"location":"tools/circle-tool/","text":"The Circle tool \u00b6 Basic definition \u00b6 1 2 3 4 5 - type : 'circle' # tooltype is 'circle' position : # Position on (100x100) canvas cx : 50 # cx=50 is center position cy : 50 # cy=50 is center position radius : 25 # radius of circle. Width/height is 50 Styling \u00b6 The Circle tool has support for the following forms of styling: Method Support Description classes Using SAK or User defined class definitions styles Using inline CSS styles The Circle tool is composed of a single object: \"circle\" and this is the selector for styling: 1 2 3 4 5 6 7 8 9 10 11 - type : 'circle' position : cx : 50 cy : 50 radius : 25 classes : circle : # Circle selector <...> styles : circle : # Circle selector <...> Animations \u00b6 The Circle tool has support for the following forms of animations: Method Support Description colorstops Using a colorstops definition colorlists Using a colorlist definition animations Using operator based animations with class/style styling","title":"Circle"},{"location":"tools/circle-tool/#the-circle-tool","text":"","title":"The Circle tool"},{"location":"tools/circle-tool/#basic-definition","text":"1 2 3 4 5 - type : 'circle' # tooltype is 'circle' position : # Position on (100x100) canvas cx : 50 # cx=50 is center position cy : 50 # cy=50 is center position radius : 25 # radius of circle. Width/height is 50","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Basic definition"},{"location":"tools/circle-tool/#styling","text":"The Circle tool has support for the following forms of styling: Method Support Description classes Using SAK or User defined class definitions styles Using inline CSS styles The Circle tool is composed of a single object: \"circle\" and this is the selector for styling: 1 2 3 4 5 6 7 8 9 10 11 - type : 'circle' position : cx : 50 cy : 50 radius : 25 classes : circle : # Circle selector <...> styles : circle : # Circle selector <...>","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Styling"},{"location":"tools/circle-tool/#animations","text":"The Circle tool has support for the following forms of animations: Method Support Description colorstops Using a colorstops definition colorlists Using a colorlist definition animations Using operator based animations with class/style styling","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Animations"},{"location":"tools/line-tool/","text":"The Line tool \u00b6 The Line tool is based on the SVG basic shape <line> element Basic definition \u00b6 1 2 3 4 5 6 - type : 'line' # tooltype is 'line' position : # Position on (100x100) canvas cx : 50 # cx=50 is center position cy : 50 # cy=50 is center position length : 25 # length of line. orientation : 'vertical' # Vertical or horizontal The width of the line is set using a CSS style Use the stroke-width to set the width of the line in the styles section or using a class definition and enabling that class in the classes section. Use the rotate property of a toolset to make an oblique line The line definition will be extended in the future with (x1,y1) and (x2,y2) coordinates to make any angle possible. Styling \u00b6 The Line tool has support for the following forms of styling: Method Support Description classes Using SAK or User defined class definitions styles Using inline CSS styles The Line tool is composed of a single object: \"line\" and this is the selector for styling: 1 2 3 4 5 6 7 8 9 10 11 12 - type : 'line' position : cx : 50 cy : 50 length : 25 orientation : 'vertical' classes : line : # Line selector <...> styles : line : # Line selector <...> Animations \u00b6 The Line tool has support for the following forms of animations: Method Support Description colorstops Using a colorstops definition colorlists Using a colorlist definition animations Using operator based animations with class/style styling","title":"Line"},{"location":"tools/line-tool/#the-line-tool","text":"The Line tool is based on the SVG basic shape <line> element","title":"The Line tool"},{"location":"tools/line-tool/#basic-definition","text":"1 2 3 4 5 6 - type : 'line' # tooltype is 'line' position : # Position on (100x100) canvas cx : 50 # cx=50 is center position cy : 50 # cy=50 is center position length : 25 # length of line. orientation : 'vertical' # Vertical or horizontal The width of the line is set using a CSS style Use the stroke-width to set the width of the line in the styles section or using a class definition and enabling that class in the classes section. Use the rotate property of a toolset to make an oblique line The line definition will be extended in the future with (x1,y1) and (x2,y2) coordinates to make any angle possible.","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Basic definition"},{"location":"tools/line-tool/#styling","text":"The Line tool has support for the following forms of styling: Method Support Description classes Using SAK or User defined class definitions styles Using inline CSS styles The Line tool is composed of a single object: \"line\" and this is the selector for styling: 1 2 3 4 5 6 7 8 9 10 11 12 - type : 'line' position : cx : 50 cy : 50 length : 25 orientation : 'vertical' classes : line : # Line selector <...> styles : line : # Line selector <...>","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Styling"},{"location":"tools/line-tool/#animations","text":"The Line tool has support for the following forms of animations: Method Support Description colorstops Using a colorstops definition colorlists Using a colorlist definition animations Using operator based animations with class/style styling","title":"\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n\r\n Animations"}]}