{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"basics/card-structure/","title":"YAML Card Structure","text":"","tags":["YAML","Structure","Card"]},{"location":"basics/card-structure/#the-swiss-army-knife-yaml-structure","title":"The Swiss Army Knife YAML structure","text":"<p>The main aspects of a SAK Card are shown below using yellow lines.</p> <pre><code>  # Define the type of the card to use.\n#\n# This is normally part of a \"cards\" section from a horizontal or vertical Lovelace stack\n# -----\n- type: 'custom:swiss-army-knife-card'\n# Define the entities\nentities:\n- &lt;list of entities&gt;\n\n#\n# Define aspect ratio and size of card.\n# - In this case the card is square and has a size of 100x100\n# - A 2/1 ratio would have a size of 200x100\n# - etc.\n#\n# Odd values like 1/0.05 are also possible. Size is 100x5\n# This is used for instance to just draw a line/separator\n#\n# Specification:\n# - aspectratio (string)\n# -----\naspectratio: 1/1\n#\n# Display the card or not.\n# - default false. Card is displayed.\n# - use true to just draw header text or a separator.\n# -----\ndisable_card: false\n#\n# ***** card/layout section *****\n#\n# Specification:\n# - layout (map)\n# -----\nlayout:\n# ***** card/layout/styles section *****\n#\n# Overall styles for the card and toolsets. Mainly used for defining filters!\n#\n# Specification:\n# - styles (map)\n# -----\nstyles:\ncard:\ntoolsets:\n# Define Neumorphic filter over the full toolset.\nfilter: url(#sak-nm-default)\n\n# Define material shadow filter over the full toolset\n# filter: url(#ds-1)\n\n#\n# ***** card/layout/toolsets section *****\n#\n# Define the list of toolsets from here\n#\n# Specification:\n# - toolsets (list of toolset configs)\n# -----\ntoolsets:\n# define list of toolsets with its tools\n- toolset: background\n#\n# define list of tools within toolset\n#\n# Specification:\n# - tools (list of tool configs)\n#\ntools:\n#\n# define the tools\n#\n- type: 'usersvg'\n&lt;...etc...&gt;\n</code></pre>","tags":["YAML","Structure","Card"]},{"location":"basics/coordinate-system/","title":"Coordinate System","text":"<p>The Swiss Army Knife map uses a easy to understand coordinate system to simplify the design and placement of toolsets and tools on a card.</p>","tags":["Coordinate System","Design"]},{"location":"basics/coordinate-system/#basics","title":"Basics","text":"<p>The coordinate system of a SAK Card is based on the following characteristics:</p> <p>Card:</p> <ul> <li>A SAK Card has a configurable <code>aspectratio</code></li> <li>That aspect ratio determines the internal grid size: <code>aspect ratio * 100</code>.</li> </ul> <p>Toolset &amp; Tools:</p> <ul> <li>A Toolset has a default 100x100 grid size. It does NOT depend on the size of a card.</li> <li>The top-left is the origin (0,0)</li> <li>The center coordinates of a toolset are (50,50)</li> <li>All tool dimensions are relative to the default toolset grid size: a line with a length of 10 means 10% of this default grid.</li> </ul> <p>The next paragraph shows an example, and the paragraphs thereafter more details.</p>","tags":["Coordinate System","Design"]},{"location":"basics/coordinate-system/#an-example-toolset-and-tool-placement-work","title":"An example: Toolset and tool placement @ work","text":"<p>Now we know the basics, let's look at the example with a card size of 200x100 (2/1 aspect ratio) and two identical toolsets consisting of a <code>circle</code>, <code>icon</code>, and <code>state</code>. </p> <p>The tools are neatly configured around the center position (50,50) of the toolset grid:</p> <ul> <li>the <code>circle</code> is placed at (50,50) with its radius of 25,</li> <li>the <code>icon</code> is placed at (50,40) and</li> <li>the <code>state</code> is placed at (50,60).</li> </ul> <p>The first toolset is placed at (40,50) on the card, and the second toolset at (160,50) on the card. </p> <p>In a kind of 3D world, it looks like this: </p> <p>The YAML configuration is shown below. Here you see the toolsets (named set1 and set2) and the different tools: <code>circle</code>, <code>state</code> and <code>icon</code>. For brevity only the coordinates/sizes part is shown.</p> <pre><code>aspectratio: 2/1              # Gives a 200x100 canvas size\n\nlayout:\n# Circles with icon and state are placed at (40,50) and (160,50)\ntoolsets:\n- toolset: set1\nposition:\ncx: 40\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50            # Circle is centered on 100x100\ncy: 50\nradius: 25\n\n- type: state\nposition:\ncx: 50            # x centered\ncy: 60            # y a bit lower\n\n- type: icon\nposition:\ncx: 50            # x centered\ncy: 40            # y a bit higher\nalign: center\nicon_size: 15\n\n- toolset: set2\nposition:\ncx: 160\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50            # Circle is centered on 100x100\ncy: 50\nradius: 25\n\n- type: state\nposition:\ncx: 50            # x centered\ncy: 60            # y a bit lower\n\n- type: icon\nposition:\ncx: 50            # x centered\ncy: 40            # y a bit higher\nalign: center\nicon_size: 15\n</code></pre>","tags":["Coordinate System","Design"]},{"location":"basics/coordinate-system/#more-indepth-card-aspect-ratio-and-size","title":"More indepth: Card aspect ratio and size","text":"<p>Below you see the configuration of a 1/1 square card which equals a grid size of 100x100. <pre><code>- type: 'custom:swiss-army-knife-card'\naspectratio: 1/1        # Square 1/1 card with resulting 100x100 grid size\n</code></pre></p>","tags":["Coordinate System","Design"]},{"location":"basics/coordinate-system/#example-cards-with-different-aspect-ratios","title":"Example cards with different aspect ratio's","text":"<p>Some examples for aspect ratio's and (grid size) of: <code>0.5/1</code> (50x100), <code>1/1</code> (100x100), <code>2/1</code> (200x100) and <code>3/1</code> (300x100):</p> <p> </p> <p>You are not limited to these aspect ratio's. Any aspect ratio will work</p>","tags":["Coordinate System","Design"]},{"location":"basics/coordinate-system/#but-what-about-the-internal-grid-size-then","title":"But what about the internal grid size then?","text":"<p>If I would place three square cards in a <code>horizontal-stack</code> with different aspect ratio's, I get three equally sized cards. All cards scale to the same actual size in pixels, independently of their internal grid sizes of 100x100, 200x200 and 400x400.</p> <p> 1/1 2/2 4/4 </p> <p>The result of these different internal sizes can be seen in the following example: I \"designed\" a toolset with a single circle on a standard 100x100 canvas and placed the toolset for each card on the same position (50,50); The circle scales to the actual grid size of the card. Scalable Vector Graphics at work!  1/1 2/2 4/4 </p> <p>The 1/1, 2/1 and 3/1 are mostly used for mobile phones, and the much larger ones, say 4/4 for panels</p> <p>The tools on a 4/4 would be too small to read on a mobile phone, but are excellent on large displays.</p>","tags":["Coordinate System","Design"]},{"location":"basics/coordinate-system/#more-indepth-toolset-aspect-ratio-and-size","title":"More indepth: Toolset aspect ratio and size","text":"<p>As already mentioned, the position and dimensions of a tool always reference a default toolset grid size of 100x100:</p> <ul> <li>(0,0) is the upper left corner of the grid</li> <li>(100,100) is the lower right corner of the grid</li> <li>(50,50) is the center of the grid and servers as the 'anchor' used by the Toolset to position the tools on a card.</li> </ul> <p>Furthermore, all dimensions are relative to the grid:</p> <ul> <li>a line with a length of 10 takes 10% of the grid.</li> <li>a circle with radius of 50 fits exactly the grid.</li> </ul> <p>The size and position of tools are not limited by this grid size!</p> <p>So:</p> <ul> <li>a tool can be wider and higher</li> <li>a tool can be placed outside these default coordinates: so coordinates can be &lt; 0 or &gt; 100.</li> </ul> <p>This means that - without scaling - such a toolset does NOT fit a <code>1/1</code> card! Such toolsets are therefore designed for larger cards.</p> <p>Don't forget that toolsets can scale tools and are re-usable if defined as a template</p>","tags":["Coordinate System","Design"]},{"location":"basics/coordinate-system/#use-relative-sizes-for-styles-too-where-possible","title":"Use relative sizes for styles too, where possible","text":"<p>The dimensions of the tool are relative. Therefore, it is recommended to also use relative dimensions for styling. A simple example is the CSS <code>font-size</code> attribute: use <code>em</code> and not <code>px</code> to configure the size of a font, ie use <code>font-size: 12em</code>. </p> <p>SAK has set the default <code>font-size</code> for SAK cards to be about the same size as 1% of the grid: so <code>font-size: 10em</code> should equal 10% of the grid.</p>","tags":["Coordinate System","Design"]},{"location":"basics/entity-state-converters/","title":"Entity State Converters","text":"","tags":["Entities","Converters"]},{"location":"basics/entity-state-converters/#entity-state-converters","title":"Entity State Converters","text":"<p> 2.5.1 \u00b7  Experimental \u00b7  BREAKING CHANGE</p> <p>Version 2.5.1 adds some predefined converters for entities state, attribute or secondary info.</p> <p>Entity State converters replace SOME the previous Formatters!</p> <p>The previous <code>format</code> options did also change the state. The new <code>format</code> options are only for displaying. If you used the <code>format</code> option to for instance change to <code>brightness_pct</code>, use the <code>converter</code> option instead!</p> <p>Using <code>format: relative</code> for the <code>secondary_info</code> field remains unchanged.</p> <p>The derived entity converters should continue working!</p> <p>They change the state and unit, so should still work. In some cases the built-in converters can replace the <code>derived_entity</code> definitions, such as for <code>brightness/brightness_pct</code>.</p>","tags":["Entities","Converters"]},{"location":"basics/entity-state-converters/#state-converters","title":"State converters","text":"<p>State converters are built-in state conversions. Incoming states are converted before passed on to the tools to be used in animations, colorstops, etc.</p> <p>Without these predefined converters, you would have to use a <code>derived_entity</code> to do the job.</p>","tags":["Entities","Converters"]},{"location":"basics/entity-state-converters/#multiply-and-divide","title":"Multiply and Divide","text":"Converter Parameter Description multiply() <code>Number</code> Multiplies the entity state with the value defined between (). This must be a single number, ie `multiply(1000) to multiply the state by 1.000 divide() <code>Number</code> Divides the entity state with the value defined between ().  This must be a single number, ie `divide(100) to divide the state by 100 <p>The parameter must be a single number! You cannot use calculations.</p>","tags":["Entities","Converters"]},{"location":"basics/entity-state-converters/#light-brightness-and-colors","title":"Light brightness and colors","text":"<p> 2.5.1 \u00b7  BREAKING CHANGE</p> <p>For brightness, replace the <code>format: brightness</code> command with <code>convert: brightness_pct</code></p> <p>Nothing really 'breaks', as in crashes, but the tool will use the wrong state values, and thus behave differently than expected, if you don't do this change.</p> Converter Type Example brightness_pct <code>brightness</code> Converts the 0..255 brightness state to 0..100% brightness percentage. Used by for instance by a (circular) slider to control brightness percentage rgb_csv <code>rgb, hsl, colortemp, xy</code> 10,20,30 (meaning a string with comma separated r,g,b values!) rgb_hex <code>rgb, hsl, colortemp, xy</code> #0a141e (hex color coding!) <p>The rgb converters require the right attribute to be specified for the entity</p> <p>In most cases this will be <code>hs_color</code> for RGB lights and <code>color_temp</code> for lights with only temperature control.</p> <p>You must check the attributes in Home Assistant to be sure. Real rgb lights use <code>rgb_color</code> for instance. However, my RGBW Ledstrip uses <code>xy</code> mode for RGB and <code>color_temp</code> for the W mode.</p> <p>In both cases monitoring the <code>hs_color</code> attribute works!</p>","tags":["Entities","Converters"]},{"location":"basics/entity-state-converters/#example-usage","title":"Example Usage","text":"<p>Below some examples of the use of these converters.</p>","tags":["Entities","Converters"]},{"location":"basics/entity-state-converters/#light-brightness-slider","title":"Light brightness slider","text":"<p>When you use a slider to control the brightness of a light, you need the actual brightness percentage, not the value Home Assistant is using for the state of the brightness, which is 0..255.</p> <p>As of  2.5.1, the predefined converter <code>brightness_pct</code> does the job for you!</p> <pre><code>  - type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'CircSlider Test'\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit: \"%\"\nconvert: brightness_pct\n</code></pre> <p>Before  2.5.1, there where two options: the <code>format: brightness</code> field or a <code>derived_entity</code> with some JavaScript to convert to a brightness percentage.</p> Using format qualifier to convert<pre><code>  - type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'CircSlider Test'\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit: \"%\"\nformat: brightness\n</code></pre> Using derived_entity to convert<pre><code>  - type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'CircSlider Test'\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nlayout:\ntoolsets:\n# ===============================================================\n- toolset: slidertest3\nposition:\ncx: 50\ncy: 50\ntools:\n- type: slider\nentity_index: 1   # Use brightness entity\nderived_entity:\ninput : '[[[ return state ]]]'\nstate: &gt;\n[[[\nif (typeof(entity) === 'undefined') return;\nif (typeof(state) === 'undefined') return;\nif (state === 'undefined') return;\nvar bri = Math.round(state / 2.55);\nreturn (bri ? bri : '0');\n]]]\nunit: &gt;\n[[[\nif (typeof(state) === 'undefined') return undefined;\nreturn '%';\n]]]\n</code></pre>","tags":["Entities","Converters"]},{"location":"basics/entity-state-converters/#convert-kw-to-watt","title":"Convert kW to Watt","text":"<p>The DSMR Reader plugin reports power usage in kW. In some cases it is nicer to have this in Watts, so multiply the state's entity by 1000.</p> <p>Don't forget to adjust units and decimals if you use this converter</p> <pre><code>  - type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'Sensor #2-2'\nconvert: multiply(1000)\nunit: W\ndecimals: 0\n</code></pre>","tags":["Entities","Converters"]},{"location":"basics/entity-state-converters/#convert-mib-to-gib","title":"Convert MiB to GiB","text":"<p>When you monitor your server with the default Home Assistant monitor, you get your memory use/free reported in MiB. You can convert this to GiB by dividing it by 1024.</p> <p>Don't forget to adjust units and decimals if you use this converter</p> <pre><code>  - type: 'custom:swiss-army-knife-card'\nentities:\n# Memory\n- entity: sensor.memory_use_percent\ndecimals: 0\nicon: mdi:memory\n- entity: sensor.memory_use\nname: 'Used:'\nicon: mdi:memory\nconvert: divide(1024)       # MiB to GiB\nunit: 'GiB'                 # In GiB\ndecimals: 2                 # ..with 2 decimals precision\n- entity: sensor.memory_free\nname: 'Free:'\nicon: mdi:memory\nconvert: divide(1024)       # MiB to GiB\nunit: 'GiB'                 # In GiB\ndecimals: 2                 # ..with 2 decimals precision\n</code></pre>","tags":["Entities","Converters"]},{"location":"basics/entity-state-converters/#convert-to-rgb-for-color_temp-and-xy-mode-lights","title":"Convert to RGB for color_temp and xy mode lights","text":"<p>Most lights should have the <code>hs_color</code> attribute when switched <code>on</code>.</p> <p>This at least works for my Led strip.</p> <pre><code>  - type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_cupboard_light\nattribute: hs_color\nconvert: rgb_csv\n</code></pre> <p>With the following YAML definition of the tool: <pre><code>  # Circle as test for xy/color_temp and csv mode color conversion\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 22.5\nentity_index: 0\nanimations:\n- state: '[[[ return state; ]]]'\nstyles:\ncircle:\nfill: &gt;-\n[[[ if (typeof (state) === 'undefined') return 'none';\nreturn `rgb(${state})`; ]]]\n</code></pre></p>","tags":["Entities","Converters"]},{"location":"basics/entity-state-converters/#convert-to-color-temperature-mode-lights","title":"Convert to color temperature mode lights","text":"<p>This at least works for my Ikea Tradfri lights.</p> <pre><code>  - type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nattribute: color_temp\nconvert: rgb_hex\n</code></pre> <p>With the following YAML definition of the tool: <pre><code>  # Circle as test for color_temp and hexmode color conversion\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 22.5\nentity_index: 0\nanimations:\n- state: '[[[ return state; ]]]'\nstyles:\ncircle:\nfill: &gt;-\n[[[ if (typeof (state) === 'undefined') return 'none';\nreturn state; ]]]\n</code></pre></p>","tags":["Entities","Converters"]},{"location":"basics/entity-state-converters/#convert-for-other-color-modes","title":"Convert for other color modes","text":"<p>I don't have other lights, so can't give you a working example. I know rgb color lights, using the <code>rgb_color</code> attribute works, but other modes might, just might not work.</p>","tags":["Entities","Converters"]},{"location":"basics/entity-state-converters/#difference-between-converters-and-formatters","title":"Difference between Converters and Formatters","text":"<p>As of  2.5.1, there is a distinct difference between processing a state (the value coming from Home Assistant) and displaying a state using locale, formats and decimals.</p> What Description Converter Converting an incoming state to a different state, just as you would do with a <code>derived_entity</code>. The converted state is also the state <code>animations</code> and <code>colorstops</code> are using Formatter Formatting the current state for display on the screen (using localization and specified entity format)","tags":["Entities","Converters"]},{"location":"basics/haptics/","title":"Haptic Feedback","text":"<p>The Swiss Army Knife card supports haptics.</p> <p>Most tools support the default haptics through <code>tap_actions</code>. Each tool description contains the supported haptics.</p>","tags":["Interactions","Haptics","Feedback"]},{"location":"basics/haptics/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Interactions","Haptics","Feedback"]},{"location":"basics/localization-and-formatters/","title":"Localization and Formatters","text":"","tags":["Localization","Formatting"]},{"location":"basics/localization-and-formatters/#localization-and-entity-display-formatters","title":"Localization and Entity Display Formatters","text":"<p> 2.5.1 \u00b7  Experimental</p> <p>Version 2.5.1 adds extended and up-to-date support for localization and formatters.</p> <p>The Swiss Army Knife card uses the Profile settings in Home Assistant</p> <p>These settings are for the language, numbers, and date.</p>","tags":["Localization","Formatting"]},{"location":"basics/localization-and-formatters/#localization","title":"Localization","text":"<p>With version 2.5.1, localization is re-instated and updated with the current Home Assistant localization tags and features, meaning translation support for:</p> <ul> <li>Platforms (integrations, such as AirVisual)</li> <li>Device Classes (motion, power, energy, humidity, etc.)</li> <li>Domains (sensors, binary_sensors, etc.)</li> </ul> <p>On top of that, if the translation can't be found using these default translation tags, a specific manual <code>locale_tag</code> can be defined for a state.</p>","tags":["Localization","Formatting"]},{"location":"basics/localization-and-formatters/#example-locale_tag-usage","title":"Example locale_tag usage","text":"<p>The <code>met</code> integration contains the numerical wind direction in degrees. The derived_entity function translates the degrees to 16 named wind directions. The translation for these wind directions is not present in the <code>met</code> component translations, but is in the Home Assistant UI in the form of <code>ui.card.weather.cardinal_direction.&lt;cardinal direction&gt;</code></p> <p>The Swiss Army Knife adds the state to this <code>locale_tag</code> and calls the translation engine of Home Assistant to translate the string for display.</p> From (updated) view-sake1.yml<pre><code>      - type: state\nid: 3\nposition:\ncx: 78\ncy: 20\nentity_index: 46\nlocale_tag: 'ui.card.weather.cardinal_direction.'\ntext:\nbefore: '/ '\nderived_entity:\nstate: |\n[[[\nconst DIRECTION = [\"n\", \"nne\", \"ne\", \"ene\", \"e\", \"ese\", \"se\",\n\"sse\", \"s\", \"ssw\", \"sw\", \"wsw\", \"w\", \"wnw\", \"nw\", \"nnw\", ];\nconst dir = Math.floor((state / 22.5) + .5);\nreturn DIRECTION[(dir % 16)];\n]]]\n</code></pre>","tags":["Localization","Formatting"]},{"location":"basics/localization-and-formatters/#formatters","title":"Formatters","text":"<p>Formatters are an addition to the localization functions to translate a state to a specific - localized - format. Most formatters are about date, datetime and time formats.</p>","tags":["Localization","Formatting"]},{"location":"basics/localization-and-formatters/#example-usage","title":"Example usage","text":"From (updated) view-sake1.yml<pre><code>  - type: 'custom:swiss-army-knife-card'\nentities:\n# - entity: sensor.next_sunrise\n- entity: sun.sun\nattribute: next_rising\nunit: 'uur'\nicon: mdi:weather-sunset-up\nformat: time-24h\n</code></pre>","tags":["Localization","Formatting"]},{"location":"basics/localization-and-formatters/#general-formatters","title":"General formatters","text":"Formatter Type Example relative timestamp Displays the timestamp as a relative time, eg: '10 seconds ago'. The <code>last_changed</code> <code>secondary_info</code> part of the entity is a good example for this usage. brightness brightness_pct 0..255 Displays brightness as a value 0..100%Do NOT use this in combination with the state converter called <code>brightness/brightness_pct</code>, as you will end up with two conversions! duration seconds Formats the state as a duration in seconds","tags":["Localization","Formatting"]},{"location":"basics/localization-and-formatters/#datetime-formatters","title":"DateTime formatters","text":"Formatter Type Common US Style datetime timestamp 9 August 2021 at 8:23 August 9, 2021, 8:23 AM datetime_month-short timestamp 9 Aug 2021 at 8:23 Aug 9, 2021, 8:23 AM datetime-short timestamp 9 AUg 8:23 Aug 9, 8:23 AM datetime_seconds timestamp 9 August 2021 at 8:23:15 August 9, 2021, 8:23:15 AM datetime-numeric timestamp 8-9-2021 8:23 9/8/2021, 8:23 AM","tags":["Localization","Formatting"]},{"location":"basics/localization-and-formatters/#date-formatters","title":"Date formatters","text":"Formatter Type Common US Style date timestamp 16 January 2021 January 16, 2021 date_month timestamp January January date_month_year timestamp January 2021 January 2021 date-short timestamp 16 Jan Jan 16 date-numeric timestamp 16/01/202116-1-2021 01/16/2021 date_weekday timestamp Saturday Saturday date_weekday-short timestamp Sat Sat date_weekday_day timestamp Saturday 16 January Saturday, January 16","tags":["Localization","Formatting"]},{"location":"basics/localization-and-formatters/#time-formatters","title":"Time formatters","text":"Formatter Type Common US Style time timestamp 21:15 9:15 PM time-24h timestamp 21:15 21:15 time_weekday timestamp Tuesday 19:00 Tuesday 7:00 PM time_seconds timestamp 21:15:24 9:15:24 PM","tags":["Localization","Formatting"]},{"location":"basics/localization-and-formatters/#difference-between-converters-and-formatters","title":"Difference between Converters and Formatters","text":"<p>As of  2.5.1, there is a distinct difference between processing a state (the value coming from Home Assistant) and displaying a state using locale, formats and decimals.</p> What Description Converter Converting an incoming state to a different state, just as you would do with a <code>derived_entity</code>. The converted state is also the state <code>animations</code> and <code>colorstops</code> are using Formatter Formatting the current state for display on the screen (using localization and specified entity format)","tags":["Localization","Formatting"]},{"location":"basics/tools-and-entities/","title":"Tools and Entities","text":"<p>Tools and Entities have a strong relationship in most cases. The state of an entity determines what a tool displays, how it is displayed (styling) and how it interacts with the user.</p> <p>Up to  2.4.1, a tool could be connected to zero (none) or one (1) entity. As of  2.4.1, a tool can be connected to a list of entities.</p>","tags":["Tools","Entities"]},{"location":"basics/tools-and-entities/#standaloneunconnected-tools","title":"Standalone/Unconnected Tools","text":"<p>A tool that is not connected to an entity, that is it has no <code>entity_index: x</code> field is used solely for display purposes. This can be anyting, but circles, rectangles and lines are mostly used for that.</p> <p>Example: <pre><code>- type: 'circle'            # tooltype is 'circle'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nradius: 25              # radius of circle. Width/height is 50\n</code></pre></p>","tags":["Tools","Entities"]},{"location":"basics/tools-and-entities/#single-entityconnected-tools","title":"Single entity/Connected Tools","text":"<p>This is the most used combination: a tool is connected to a single entity to display its state and/or to have user interaction to for instance switch the entity on/off. The tool has an <code>entity_index: x</code> definition.</p> <p>Example: <pre><code>- type: 'circle'            # tooltype is 'circle'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nradius: 25              # radius of circle. Width/height is 50\nentity_index: 0           # connect to state of entity 0\n</code></pre></p>","tags":["Tools","Entities"]},{"location":"basics/tools-and-entities/#multi-entity-tools","title":"Multi-entity Tools","text":"<p> 2.4.1 In this case, the tool has an <code>entity_indexes</code> list definition instead of the <code>entity_index: x</code> definition:</p> <pre><code>  entity_indexes:\n- entity_index: 1     # Main / default entity index for this tool\n- entity_index: 0     # Additional entity #1\n- entity_index: 2     # Additional entity #2\n</code></pre> <p>These multiple indexes can be used in the animations section to control the state/styling of the tool using other entities.</p> <p>For instance, you want the tool to be hidden depending on the state of another entity: Hide/Display tool<pre><code>- type: 'circle'            # tooltype is 'circle'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nradius: 25              # radius of circle. Width/height is 50\nentity_indexes:\n- entity_index: 1     # Default entity\n- entity_index: 0     # On/Off switch will show/hide this tool\nanimations:\n- state: '50'\noperator: '&gt;='\nreuse: true\nstyles:\ntrack:\nopacity: 0.3\ntransition: opacity 1s ease\n- state: '50'\noperator: '&lt;'\nreuse: true\nstyles:\ntrack:\nopacity: 1\ntransition: opacity 1s ease\n\n- state: 'on'         # Show this tools state\nentity_index: 0     # If entity 0 is switched on\nreuse: true\nstyles:\ncircle:\nstroke: red\ntool:\ndisplay: initial\n- state: 'off'        # Hide this tools state\nentity_index: 0     # if entity 0 is switched off\nreuse: true\nstyles:\ntool:\ndisplay: none\n</code></pre></p>","tags":["Tools","Entities"]},{"location":"basics/tools-and-toolsets/","title":"Tools and Toolsets","text":"<p>Tools and Toolsets are the main ingredients of the Swiss Army Knife custom card. They provide the means to visualize Home Assistant data in a free and creative manner.</p> <p>The Swiss Army Knife uses SVG (Scalable Vector Graphics) as its sole basis to visualize the tools on a card.</p>","tags":["Tools","Toolsets"]},{"location":"basics/tools-and-toolsets/#tools-to-create-visualizations","title":"Tools to create visualizations","text":"<p>The Swiss Army Knife card offers a series of tools (currently 17) to create visualizations.</p> <p>The tools are:</p> tool type description circle basic A circle ellipse basic An ellipse line basic A vertical, horizontal or oblique line rectangle basic A rectangle with and w/o rounded corners rectex basic A more advanced rectangle with independent rounded corners regpoly basic A regular poly using the Schl\u00e4fli symbol math text basic A text display horseshoe advanced TBD segarc advanced A segmented arc: shows progress data in an arc slider advanced Slider input tool. Used for brightness for example switch advanced A basic on/off switch usersvg advanced For fetching user defined, external SVG files area HA specific Represents an Entity Area icon HA specific Represents an Entity Icon name HA specific Represents an Entity Name state HA specific Represents an Entity State &amp; Unit of Measurement bar HA specific Represents an simple state history (horizontal or vertical bars)","tags":["Tools","Toolsets"]},{"location":"basics/tools-and-toolsets/#toolsets-to-combine-and-control-tools","title":"Toolsets to combine and control tools","text":"<p>Toolsets provide extra functionality to tools.</p>","tags":["Tools","Toolsets"]},{"location":"basics/tools-and-toolsets/#grouping-of-tools","title":"Grouping of tools","text":"<p>Well, a 'set' already tells this: a Toolset is a container for a set of tools.</p>","tags":["Tools","Toolsets"]},{"location":"basics/tools-and-toolsets/#placement-on-card","title":"Placement on card","text":"<p>A Toolset provides a grid to place tools on, and can itself be placed on a card. This makes a Toolset separate the coordinates of a tool and a card on which it is placed.</p>","tags":["Tools","Toolsets"]},{"location":"basics/tools-and-toolsets/#scaling","title":"Scaling","text":"<p>Toolsets can scale the tools as a whole to 'fit' the card or required size.</p> <p>Server example (example 7) shows this scaling</p> <p>The discs with the arc, icon, and state use the same toolset (using a SAK template) and use a toolset scale factor to get the required size of the toolset.</p> <p></p> <p>Because of the scaling, tools need NOT to be designed to their final size on a card</p> <p>You can re-use the same toolset in different sizes, although they are designed on a 100x100 grid.</p> <p>Height and Width can be scaled independently if required. Scaling does not affect the center position.</p> <p>Example showing independent x/y scaling on the 3rd disc</p> <p></p>","tags":["Tools","Toolsets"]},{"location":"basics/tools-and-toolsets/#rotating","title":"Rotating","text":"<p>Toolsets can rotate the tools as a whole</p> <p>Rotation is in degrees and uses (again) the center of the toolset as the rotation anchor.</p> Example showing some rotating disc toolsets <p></p> <p>Rotating may yield different results depending on the browser</p>","tags":["Tools","Toolsets"]},{"location":"basics/tools-and-toolsets/#styling","title":"Styling","text":"","tags":["Tools","Toolsets"]},{"location":"basics/user-interactions/","title":"User Interactions","text":"<p>The Swiss Army Knife custom card supports user interactions. These interactions are NOT card-based but tool-based: in other words, every Swiss Army Knife Tool can function as a \"Button\" to perform actions.</p> <p>Each tool has its own <code>user_actions</code> section, independent of the definition of <code>entities</code>. It means that the same entity, but a different tool, can respond differently to a tap action by defining a list of <code>actions</code>:</p> <ul> <li>No interaction at all</li> <li>An action to toggle a light</li> <li>An action to get the more-info popup dialog or a custom popup dialog</li> <li>An action to go to another view, ie an URL</li> <li>etc.</li> </ul> <p>You can define multiple actions per tap/click action!</p> <p>So you can call multiple Home Assistant backend services with a single click.</p> <p>See the third example in the \"Some examples\" paragraph.</p> <p>A tool connected to an entity will automatically declare the 'more-info' action.</p> <p>But ONLY if there is no <code>tap_action</code> defined!</p> <p>If you don't want any interaction, disable this by defining an empty user_actions.tap_action!</p>","tags":["Interactions","Input"]},{"location":"basics/user-interactions/#supported-user-action-types","title":"Supported user action types","text":"Type When activated <code>tap_action</code> Single Click on tool <code>drag_action</code> Dragging a slider (slider and circularslider tools)","tags":["Interactions","Input"]},{"location":"basics/user-interactions/#supported-actions","title":"Supported actions","text":"<p> 1.0.0</p> Action Description <code>more-info</code> The default action if no user action defined: the more info dialog popup <code>call-service</code> Calls a Home Assistant service like swithing on lights <code>navigate</code> Navigate to other Home Assistant panel/screen <p> 2.4.3</p> Action Description <code>fire-dom-event</code> Fire event for <code>browser_mod</code> to call popups, notifications, etc","tags":["Interactions","Input"]},{"location":"basics/user-interactions/#some-examples","title":"Some examples","text":"<p>If you want the whole card to interact with a click, define a rectangle with the size of the card.</p> <p>And use a fill color of <code>fill: rgba(0,0,0,0)</code>. This way, you get an invisible rectangle covering your card that does respond to pointer/touch events.</p> Light exampleThermostat exampleCalling multiple services with a single click/tapPopup example <p>Example with a light entity and three tools on a card as background. As actions are defined PER tool, we can define a single entity and use that for every tool, but still have different actions for each tool / entity combination! <pre><code>tools:\n# ------------------------------------------------------------\n- type: circle\nentity_index: 0\n#\n# Circle is used as button to switch light on/off\n#\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.toggle\n# ------------------------------------------------------------\n- type: slider\nentity_index: 0\n#\n# Slider is used to set brightness percentage\n#\n# Current slider percentage will be send every 200msec\n# to Home Assistant, so you can watch the light change.\n#\n# Set interval to 0 to disable updates while dragging.\n#\nuser_actions:\ndrag_action:\nupdate_interval: 200          # Update every 200msec\nhaptic: selection\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\n# ------------------------------------------------------------\n- type: name\nentity_index: 0\n#\n# Tapping name will show the more-info popup dialog\n#\nuser_actions:\ntap_action:\nhaptic: medium\nactions:\n- action: more-info\n</code></pre></p> <p>Example with a thermostat entity setpoint: a slider <pre><code>tools:\n# ------------------------------------------------------------\n- type: slider\nentity_index: 1\n#\n# Slider only specifies tap_action in this case. Dragging\n# does not imply any action.\n#\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: climate.set_temperature\nparameter: temperature\nservice_data:\n# Override entity_id. Otherwise entity_index is used...\nentity_id: climate.calenta\n</code></pre></p> <p>Example with an icon switching two (other) lights and viewing the more-info popup for the current entity.</p> <p>I'm not saying this specific example is useful, but it is just to show how you would define this!</p> <p>You can also see how to override an entity_id in the service call.</p> <p>If not specified, the entity_id is derived from the entity_index.</p> <pre><code>tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nicon: mdi:menu\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info       # Action 1\n- action: call-service    # Action 2\nservice: light.toggle\nservice_data:\nentity_id: light.livingroom_light_duo_right_light\n- action: call-service    # Action 3\nservice: light.toggle\nservice_data:\nentity_id: light.livingroom_light_front_right_light\nstyles:\nicon:\nfill: var(--primary-text-color)\n</code></pre> <p>Example calling a browser_mod popup window <pre><code>tools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 30\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: fire-dom-event\nbrowser_mod:\nservice: browser_mod.popup\ndata: title: \"My test popup\"\ncontent:\ntype: entities entities:\n- entity: light.1st_floor_hall_light\n- entity: light.livingroom_light_duo_right_light\n</code></pre></p>","tags":["Interactions","Input"]},{"location":"basics/user-interactions/#interacting-with-svg-objects","title":"Interacting with SVG objects","text":"<p>There are some things to keep in mind when interacting with SVG objects because their interaction is different from HTML objects. HTML does create a so-called bounding box around the objects to facilitate interaction (mouse or touch) with them. SVG doesn't have that functionality yet: it's part of the unreleased SVG 2.0 specification.</p> <p>Interaction with an SVG object depends on things like an object's 'fill', its 'visibility', and whether it has been painted or not.</p> <p>For an interactive, visual explanation: see Managing SVG Interaction With The Pointer Events Property</p>","tags":["Interactions","Input"]},{"location":"basics/user-interactions/#what-does-this-mean-for-swiss-army-knife-tools","title":"What does this mean for Swiss Army Knife Tools?","text":"<p>Generally speaking: there are no problems with Swiss Army Knife tools: you won't notice the difference between SVG and HTML-based objects.</p> <p>This applies at least to text-based tools like entity names, areas, and states.</p> <p>For the graphical tools like circles and rectangles for instance it depends on the <code>fill</code> color: as long as the object has a fill, user interactions will work as expected. Don't use <code>fill: none</code>, unless you don't want interactions with the inner part of the tool.</p> <p>Use <code>fill: rgba(0,0,0,0)</code> for 'invisible' backgrounds for circles/rectangles that need interaction!</p> <p>Icons are an exception: icons are actually SVG images. Since an icon's background has no fill, it would be difficult to use a three-dot menu icon, for example. You'd have to touch the dots to get every interaction noticed!</p> <p>Therefore, the SAK Icon Tool draws an invisible background behind the <code>icon</code> to respond to tap actions. It uses a rectangle without a line, but with a fill color of <code>fill: rgba(0,0,0,0)</code>. This makes it visually invisible, but still responds to pointer/touch events.</p>","tags":["Interactions","Input"]},{"location":"basics/animations/colorstops/","title":"Colorstop Animations","text":"<p>One way to style the color of a tool is using colorstops where the state of the entity is used to choose a color for the tool. Both the <code>fill</code> and <code>stroke</code> attributes can be painted.</p>","tags":["Animations","Colorstop"]},{"location":"basics/animations/colorstops/#basic-usage","title":"Basic usage","text":"<pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.u_s_air_quality_index\nname: 'Air quality'\narea: 'Tha Moon'\n</code></pre> <pre><code>- type: 'circle'\nposition:\ncx: 50\ncy: 50\nradius: 17.5\nentity_index: 0             # First entity is index 0\nshow:                       style: 'colorstops'       # Format using colorstops\ncolorstops:                 # MUST be equal to show style!\nfill: true                # Use the fill property (or stroke)\ncolors:\n0: '#A8E05F'            # Good (0..50) - Green\n51: '#FDD74B'           # Moderate (51..100) - Yellow\n101: '#FE9B57'          # Unhealthy for sensitive groups - Orange\n151: '#FE6A69'          # Unhealthy (101..150) - Red\n201: '#A97ABC'          # Very Unhealthy (201..300) - Purple\n301: '#A87383'          # Hazardous (300 and up) - Brown\nstyles:\ncircle:\ntransition: fill 0.5s   # Take 0.5s to change color\n</code></pre>","tags":["Animations","Colorstop"]},{"location":"basics/animations/colorstops/#ramblings","title":"Ramblings","text":"<p>There is a possibility that this configuration will change to be able to have different colors for fill and stroke for instance.</p> <p>Currently, just a thought though </p> <pre><code>- type: 'circle'\nposition:\ncx: 50\ncy: 50\nradius: 17.5\nentity_index: 0             # First entity is index 0\nshow:                       style: 'colorstops'       # Format using colorstops\ncolorstops:                 # MUST be equal to show style!\ncolors:\n- value: 0\nfill: '#A8E05F'       # Good (0..50) - Green\nstroke: '#A8E0FF'\n- value: 51\nfill: '#FDD74B'       # Moderate (51..100) - Yellow\nstroke: '#FDD7FF'\n- value: 101\nfill: '#FE9B57'       # Unhealthy for sensitive groups - Orange\nstroke: '#FE9BFF'\n- value: 151\nfill: '#FE6A69'       # Unhealthy (101..150) - Red\nstroke: '#FE6AFF'\n- value: 201\nfill: '#A97ABC'       # Very Unhealthy (201..300) - Purple\nstroke: '#A97AFF'\n- value: 301\nfill: '#A87383'       # Hazardous (300 and up) - Brown\nstroke: '#A873FF'\nstyles:\ncircle:\ntransition: fill 0.5s   # Take 0.5s to change color\n</code></pre>","tags":["Animations","Colorstop"]},{"location":"basics/animations/css-animations/","title":"CSS Animations","text":"<p> 1.0.0 \u00b7  Output</p>","tags":["Animations","CSS"]},{"location":"basics/animations/css-animations/#basic-usage","title":"Basic usage","text":"<pre><code>  styles:\nrect:\nanimation:bounce 5s infinite\n</code></pre>","tags":["Animations","CSS"]},{"location":"basics/animations/css-animations/#built-in-animations","title":"Built-in animations","text":"<p>SAK has a number of built-in animations. They are defined in <code>sak-css-definitions.yaml</code> as part of <code>sak_templates.yaml</code>.</p> <p>Their name and what they do are shown in the following table</p> SAK Built-in.. ..CSS.. ..Animations bounce flash  headShake  heartBeat  jello  pulse  rubberBand  shake  swing  tada  wobble  zoomOut  spin  blinkingText  The END <p>Use animations sparingly</p> <p>You don't want your Home Assistant dashboard look like a website from the 90ties  </p> <p>And yes, yes, yes, you can add you own CSS animations...</p> <p>Put them in <code>user-css-definitions.yaml</code>. That's the one you may change!</p>","tags":["Animations","CSS"]},{"location":"basics/animations/state-operators/","title":"State Operator Animations","text":"<p>State operators enable you to style a tool in a much more advanced way than is possible with colorstops. State operators can do more equations, and also use nonnumerical states.</p> <p>So it is more complex than the colorstop but also has a lot more functionality. State operators are defined in the <code>animations</code> section of the tool.</p>","tags":["Animations","State Operator"]},{"location":"basics/animations/state-operators/#basic-usage","title":"Basic usage","text":"<p>Basic usage uses the implicit state operator \"==\", ie tests if state is equal to some value. The below example is from a circle connected to a light entity. <pre><code>  - type: circle\nposition:\ncx: 50\ncy: 30\nradius: 22\nentity_index: 0\nanimations:\n- state: 'on'               # State equals on?\nstyles:\ncircle:\nfill: orange          # Fill circle background with orange\n- state: 'off'              # State equals off?\nstyles:\ncircle:\nfill: grey            # Fill circle background with grey\n</code></pre></p> <p>States are evaluated from top to bottom</p> <p>And once a match is found, the evaluation stops.</p>","tags":["Animations","State Operator"]},{"location":"basics/animations/state-operators/#more-advanced-usage","title":"More advanced usage","text":"This is a direct 'translation' of the <code>colorstops</code> example <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.u_s_air_quality_index\nname: 'Air quality'\narea: 'Tha Moon'\n</code></pre> <pre><code>- type: 'circle'\nposition:\ncx: 50\ncy: 50\nradius: 17.5\nentity_index: 0             # First entity is index 0\nshow:                       style: 'colorstops'       # Format using colorstops\ncolorstops:                 # MUST be equal to show style!\nfill: true                # Use the fill property (or stroke)\ncolors:\n0: '#A8E05F'            # Good (0..50) - Green\n51: '#FDD74B'           # Moderate (51..100) - Yellow\n101: '#FE9B57'          # Unhealthy for sensitive groups - Orange\n151: '#FE6A69'          # Unhealthy (101..150) - Red\n201: '#A97ABC'          # Very Unhealthy (201..300) - Purple\n301: '#A87383'          # Hazardous (300 and up) - Brown\nstyles:\ncircle:\ntransition: fill 0.5s   # Take 0.5s to change color\n</code></pre> <p><pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.u_s_air_quality_index\nname: 'Air quality'\narea: 'Tha Moon'\n</code></pre> <pre><code>- type: 'circle'\nposition:\ncx: 50\ncy: 50\nradius: 17.5\nentity_index: 0\nanimations:\n- state: '50'             # Good (0..50) - Green\noperator: &lt;=\nstyles:\ncircle:\nfill: '#A8E05F'\n- state: '100'            # Moderate (51..100) - Yellow\noperator: &lt;=\nstyles:\ncircle:\nfill: '#FDD74B'\n- state: '150'            # Unhealthy for sensitive groups - Orange\noperator: &lt;=\nstyles:\ncircle:\nfill: '#FE9B57'\n- state: '200'            # Unhealthy (101..150) - Red\noperator: &lt;=\nstyles:\ncircle:\nfill: '#FE6A69'\n- state: '300'            # Very Unhealthy (201..300) - Purple\noperator: &lt;=\nstyles:\ncircle:\nfill: '#A97ABC'\n- state: '9999'           # Hazardous (300 and up) - Brown\noperator: &lt;=\nstyles:\ncircle:\nfill: '#A87383'\n</code></pre></p>","tags":["Animations","State Operator"]},{"location":"basics/animations/state-operators/#javascript-template-usage","title":"JavaScript template usage","text":"<p>Advanced usage example using JavaScript to determine the state.</p> <p>This example is from the views that use the weather type and display an animated external SVG to display the current weather type.</p> <p>As you can see the current state is returned, ie always a match. The <code>usersvg</code> tool then returns the current image which is also a JavaScript template that checks the state of the <code>sun.sun</code> and adds either \"day\" or \"night\" to the state to distinguish between day (sun) and night (moon) weather types.</p> <pre><code>- type: 'usersvg'\nid: 2\nentity_index: 5\nposition:\ncx: 50\ncy: 50\nheight: 13\nwidth: 13\nstyle: 'images'\nimages:\n- clear-night-night: /local/images/weather/clear-night.svg\n- cloudy-day: /local/images/weather/cloudy-day.svg\n# &lt; removed a lot of image lines for brevity&gt;\n- windy-variant-day: /local/images/weather/windy-variant.svg\n- windy-variant-night: /local/images/weather/windy-variant.svg\nanimations:\n- state: '[[[ return (state); ]]]'\nimage: &gt;\n[[[\nif (states[\"sun.sun\"].state == 'below_horizon') return (state + '-night');\nreturn (state + '-day');\n]]]\n</code></pre>","tags":["Animations","State Operator"]},{"location":"basics/animations/state-operators/#supported-operators","title":"Supported operators","text":"Operator Example Description <code>&lt;</code> 55 Current state is less than <code>value</code> <code>&lt;=</code> 20 Current state is less than or equal to <code>value</code> <code>==</code> 70 or off Current state is equal to <code>value</code>. This is the default behaviour <code>&gt;=</code> 20 Current state is greater than or equal to <code>value</code> <code>&gt;</code> 20 Current state is greater than <code>value</code> <code>!=</code> on Current state is not equal to <code>value</code> <code>[[[ ]]]</code> JS Template Template is evaluated. <p>All values MUST be enclosed within single quotes, ie numbers should also be used as strings: '50' </p>","tags":["Animations","State Operator"]},{"location":"basics/styling/classes/","title":"Style with CSS Classes","text":"<p>To uniformly style multiple cards with minimal work, CSS Classes are the way to go. More than one class can be enabled to style a tool.</p>","tags":["Styling","CSS"]},{"location":"basics/styling/classes/#basic-usage","title":"Basic usage","text":"<pre><code>- type: 'circle'\nposition:\ncx: 50\ncy: 50\nradius: 25\nclasses:\ncircle:                 # Class definitions for circle\nmy-first-class: true  # User defined CSS class\nmy-second-class: true # User defined CSS class\n</code></pre>","tags":["Styling","CSS"]},{"location":"basics/styling/classes/#default-tool-classes","title":"Default tool classes","text":"<p>SAK defines classes with default styling for all the existing tools. These classes are defined in the <code>sak-css-definitions.yaml</code> file in the <code>sak_templates</code> folder.</p> <p>Default classes are automatically assigned to the tools</p> <p>There is no need for the user to specify these classes in the tools configuration.</p> <p>Don't change this file!</p> <p>If you want to change the default definition, see the next chapter...</p>","tags":["Styling","CSS"]},{"location":"basics/styling/classes/#overriding-default-tool-classes","title":"Overriding default tool classes","text":"<p>The default css classes used by SAK to style the tools can be altered by overriding these classes in the <code>user-css-definitions.yaml</code> file.</p> <p>Say you don't like the fact that text is spaced for the entity name and you want to set that to 0.</p> <p>The SAK definition is: <pre><code>- descr: Entity Name tool\ncontent: &gt;\n.sak-name {\noverflow: visible;\n}\n.sak-name__name {\nfont-size: 3em;\nfill: var(--primary-text-color);\nopacity: 1.0;\ntext-anchor: middle;\nalignment-baseline: central;\nletter-spacing: 0.05em;\n}\n</code></pre></p> <p>You override the <code>letter-spacing</code> in your own definition with a value of 0:</p> <p><pre><code>- descr: Override Entity Name tool\ncontent: &gt;\n.sak-name__name {\nletter-spacing: 0.0em;\n}\n</code></pre> Now look into the mirror to see that big smile on your face. You're so happy you fixed that...</p>","tags":["Styling","CSS"]},{"location":"basics/styling/classes/#using-your-own-tool-classes","title":"Using your own tool classes","text":"<p>Just as you can override default SAK classes, you can define your own set of classes to style your tools.</p> <p>These classes are defined in the <code>user-css-definitions.yaml</code> file in the <code>sak_templates</code> folder.</p> <p>Example #8, the Homekit alike cards use user defined classes to style the cards.</p> <p><pre><code># Demo using classes for example #8, some Homekit alike cards...\n#------------------------------------------------------------------------------\n- descr: Homekit alike Area styling\ncontent: &gt;\n.homekit-area__area {\ntext-anchor: start;\nfont-size: 12em;\nfont-weight: 700;\nfill: var(--primary-text-color);\n}\n\n- descr: Homekit alike Name styling\ncontent: &gt;\n.homekit-name__name {\ntext-anchor: start;\nfont-size: 12em;\nfont-weight: 700;\nfill: var(--primary-text-color);\n}\n\n# Note: font-size MUST be defined as style for the state.\n# Otherwise, uom can't be rendered!\n- descr: Homekit alike State &amp; Uom styling\ncontent: &gt;\n.homekit-state__value {\ntext-anchor: start;\nfont-weight: 700;\nfill: var(--primary-text-color);\n}\n.homekit-state__uom {\nfill: var(--primary-text-color);\nfont-weight: 700;\n}\n</code></pre> And this looks like this in the example view, <code>view-sake8.yaml</code> file:</p> <pre><code>- type: name\nposition:\ncx: 10\ncy: 70\nentity_index: 0\nclasses:\nname:\nhomekit-name__name: true  # Use homekit class\n</code></pre>","tags":["Styling","CSS"]},{"location":"basics/styling/overview/","title":"Overview","text":"","tags":["Styling"]},{"location":"basics/styling/overview/#overview-of-possible-css-and-svg-styling","title":"Overview of possible CSS and SVG styling","text":"<p>The Swiss Army Knife custom card has built-in support for SVG and CSS styling.</p> <p>This support is aimed to re-use styles: SAK lets you define your own CSS classes, CSS Animations, and SVG Filters as a template and re-use them in any SAK card you make.</p> <p>You are not limited to the SAK-defined classes, animations, and filters!</p>","tags":["Styling"]},{"location":"basics/styling/overview/#directory-and-file-structure-sort-of","title":"Directory and File Structure (sort of)","text":"<p>Below you see the 'structure' of the definitions. The sak- files contain system definitions, not to be altered by the user. The user- files contain definitions that you as an enduser should use to define your own custom definitions. <pre><code>.\n\u251c\u2500 CSS keyframe animations\n\u2502  \u2514\u2500 template definition:\n\u2502     \u2514\u2500 sak_templates/sak-css-definitions.yaml\n\u2502     \u2514\u2500 sak_templates/user-css-definitions.yaml\n\u2502  \u2514\u2500 usage:\n\u2502     \u2514\u2500 through styles\n\u2502\n\u251c\u2500 classes\n\u2502  \u2514\u2500 template definition:\n\u2502     \u2514\u2500 sak_templates/sak-css-definitions.yaml\n\u2502     \u2514\u2500 sak_templates/user-css-definitions.yaml\n\u2502  \u2514\u2500 usage:\n\u2502     \u2514\u2500 through class enabling\n\u2502\n\u2514\u2500 styles/\n\u2502  \u2514\u2500 usage:\n\u2502     \u2514\u2500 default CSS styles\n\u2502     \u2514\u2500 default CSS animations\n\u2502     \u2514\u2500 SAK and user defined CSS keyframe animations\n</code></pre></p>","tags":["Styling"]},{"location":"basics/styling/styles/","title":"Style with inline CSS styles","text":"<p>Each tool can be styled using SVG attributes and in most cases CSS attribute styles. These styles are defined in the styles section.</p> <p>Within that styles section, the tool or toolpart must be selected. For single part tools, the selector is the same as the type of the tool. For multi-part tools, each part has its own styling sub-section.</p>","tags":["Styling","CSS"]},{"location":"basics/styling/styles/#basic-usage","title":"Basic usage","text":"<p>Single part tool, a Circle:</p> <pre><code>- type: 'circle'\nposition:\ncx: 50\ncy: 50\nradius: 25\nstyles:\ncircle:\nstroke: red\nfill: red\n</code></pre> <p>Multi-part tool, an Entity State composed of a 'value' and 'uom':</p> <pre><code>- type: 'state'\nposition:\ncx: 50\ncy: 50\nstyles:\nvalue:              # Value part selector\nfont-size: 10em\nuom:                # Unit of measurement part selector\nopacity: .6\n</code></pre>","tags":["Styling","CSS"]},{"location":"basics/styling/styles/#overriding-css-class-styles","title":"Overriding CSS Class styles","text":"<p>The following configuration results in a circle with a red stroke and blue fill. The stroke comes from the Class definition. The fill from the class definition is overridden by the style configuration.</p> <pre><code>- type: 'circle'\nposition:\ncx: 50\ncy: 50\nradius: 25\nclasses:\ncircle:\nmy-red-circle: true\nstyles:\ncircle:\nfill: blue\n</code></pre>","tags":["Styling","CSS"]},{"location":"basics/templates/javascript-snippets/","title":"JavaScript Template Snippets","text":"","tags":["Templates","Built-in","JavaScript"]},{"location":"basics/templates/javascript-snippets/#basics","title":"Basics","text":"<p>The Swiss Army Knife has support for JavaScript function templates as part of the YAML configuration.</p>","tags":["Templates","Built-in","JavaScript"]},{"location":"basics/templates/javascript-snippets/#format","title":"Format","text":"<p>The format used is:</p> <ul> <li>between single quotes, <code>'[[[ return &lt;&gt; ]]]'</code> if used on a single line</li> <li>and without quotes in a multi-line definition starting with the YAML qualifier '&gt;'</li> </ul> <p>As SAK uses the advised method of first class functions to evaluate JavaScript code snippets (See: Use functions instead of eval()), the JavaScript snippet needs a <code>return</code> to pass the result.</p> <p>The JavaScript snippet can use the following variables passed to the function:</p> Argument Description <code>state</code> The state value of the entity <code>states</code> The states list to access about any entity defined in HA <code>entity</code> The full entity definition <code>user</code> The active user <code>hass</code> The full hass object <code>config</code> The Tool configuration as defined in the YAML view","tags":["Templates","Built-in","JavaScript"]},{"location":"basics/templates/javascript-snippets/#support","title":"Support","text":"<p>Support is currently limited to two places:</p> <ul> <li>The <code>derived_entity</code> field to replace the tool state with a derived state</li> <li>The <code>animations</code> section.</li> </ul>","tags":["Templates","Built-in","JavaScript"]},{"location":"basics/templates/javascript-snippets/#derived-entity-example","title":"Derived Entity Example","text":"<p>One of the places where JavaScript templates are supported is to create what is called a \"derived entity\". This one is derived from the received state on the tool and replaces the original tool state.</p> <p>Below shows a card with a light and brightness entity/attribute.</p> <p>The slider tool uses entity 1 (brightness) which is translated from a number to a percentage.</p> view-sake2.yml<pre><code>- type: 'custom:swiss-army-knife-card'\n\nentities: - entity: light.livingroom_light_duo_left_light\nname: Duo Links\narea: Woonkamer\nicon: mdi:floor-lamp-dual\n\n- entity: light.livingroom_light_duo_left_light\nname: Duo Links\narea: Woonkamer\nicon: mdi:floor-lamp-dual\nattribute: brightness\nunit_of_measurement: \"%\"\n\nlayout:\ntoolsets:\n\n- toolset: slider\nposition:\ncx: 50\ncy: 50\ntools:\n- type: slider\n# Using the brightness of the light as entity\nentity_index: 1\n\n# Convert incoming brightness 0..255 to 0..100%\nderived_entity:\ninput : '[[[ return state ]]]'\nstate: &gt;\n[[[\nif (typeof(entity) === 'undefined') return;\nif (typeof(state) === 'undefined') return;\n\nvar bri = Math.round(state / 2.55);\nreturn (bri ? bri : '0');\n]]]\n# Set unit to %.\nunit: &gt;\n[[[\nif (typeof(state) === 'undefined') return undefined;\nreturn '%';\n]]]\n</code></pre>","tags":["Templates","Built-in","JavaScript"]},{"location":"basics/templates/javascript-snippets/#animations-section-example","title":"Animations section Example","text":"view-sake1.yml<pre><code>style: 'images'\nimages:\n- clear-night-night: /local/images/weather/clear-night.svg\n- cloudy-day: /local/images/weather/cloudy-day.svg\n- cloudy-night: /local/images/weather/cloudy-night.svg\n# Etcetera\n\nanimations:\n# Animation always matches the current state!\n- state: '[[[ return (state); ]]]'\n# Check the current sun state to determine image\n# to select from the images list. Add '-night' or '-day' to state name.\nimage: &gt;\n[[[\nif (states[\"sun.sun\"].state == 'below_horizon') return (state + '-night');\nreturn (state + '-day');\n]]]\n</code></pre>","tags":["Templates","Built-in","JavaScript"]},{"location":"basics/templates/overview/","title":"Overview of Template possibilities","text":"<p>The Swiss Army Knife has support for several sorts of templates to re-use YAML parts or add JavaScript snippets.</p>","tags":["Templates","Built-in","JavaScript","YAML"]},{"location":"basics/templates/overview/#templating","title":"Templating","text":"<p>There are three types of templating available:</p> <ul> <li>the built-in YAML anchor &amp; aliases</li> <li>SAK templates</li> <li>Third party card templates (decluttering card)</li> </ul> <p>They all have different usage.</p> Type re-use method what type of re-use YAML built-in re-use within YAML file only using anchors and aliases YAML dictionaries and fields SAK templates re-use of YAML parts using global templates toolsets, tools, derived_entity, colorstops/list, etc. About any part of the config can be templated Decluttering card re-use of card configurations using global card templates Full card template with variables <p>As the decluttering card is a card template, it can use SAK templates.</p>","tags":["Templates","Built-in","JavaScript","YAML"]},{"location":"basics/templates/overview/#javascript-snippets","title":"JavaScript snippets","text":"<p>JavaScript snippets can be entered in the YAML configuration to extend the functionality of the card.</p>","tags":["Templates","Built-in","JavaScript","YAML"]},{"location":"basics/templates/sak-templates/","title":"Swiss Army Knife templates","text":"","tags":["Templates","Built-in"]},{"location":"basics/templates/sak-templates/#swiss-army-knife-templates","title":"Swiss Army Knife templates","text":"","tags":["Templates","Built-in"]},{"location":"basics/templates/sak-templates/#introduction","title":"Introduction","text":"<p>If you are familiar with the <code>decluttering template card</code>, you already know how to re-use cards and specialize them using variables.</p> <p>SAK templates operate on a different level: they enable the re-use of <code>tools</code>, <code>toolsets</code>, <code>JavaScript templates/snippets</code>, <code>colorstops/lists</code> and more.</p> <p>The upcoming rc.3 will have support for layout templates: you can re-us a complete card in a view!</p> <p>No need to use the decluttering templates anymore.</p> <p>SAK templates therefore make re-use within a SAK card, and between SAK cards possible!</p> <p>And as you can scale a <code>toolset</code>, you can use different sizes of a <code>toolset</code> template in various cards. Example 7 shows an example of re-using a toolset in various sizes.</p>","tags":["Templates","Built-in"]},{"location":"basics/templates/sak-templates/#basics","title":"Basics","text":"<p>Usage</p> <p>SAK Templates can cover almost any part of the SAK YAML configuration.</p> <p>Most used templates are:</p> <ul> <li>toolsets</li> <li>derived entities</li> <li>colorstops and colorlists</li> </ul> <p>A template can use another template</p> <p>Yup. Templates can use templates. A toolset template for instance can use a colorstop template. </p> <p>But take care: don't create a loop. There is no safeguard for this (ab)use.</p> <p>Location</p> <p>SAK templates are stored in the <code>lovelace\\sak_templates\\templates</code> folder and automatically included by the <code>sak_templates.yaml</code> file in the <code>lovelace/sak_templates</code> folder.</p>","tags":["Templates","Built-in"]},{"location":"basics/templates/sak-templates/#examples","title":"Examples","text":"","tags":["Templates","Built-in"]},{"location":"basics/templates/sak-templates/#toolset-example","title":"Toolset example","text":"<p>This example shows the use of a Toolset template.</p> <ul> <li>it shows the name of the template to use</li> <li>it shows the variables to pass to the template</li> </ul> view-xyz.yaml<pre><code>- toolset: memory               # template type be of type \"toolset\"\n# Use pre-defined template for this part.\n# Template has variables.\ntemplate:\nname: tools_segarc_icon_state\nvariables:                  # Pass the list of variables\n- entity: 0               # - entity id\n- cx: 72.5                # - center x position\n- cy: 74                  # - center y position\n</code></pre> <p>Below the partial config of the <code>tools_segarc_icon_state</code> template:</p> <ul> <li>the first 7 lines define the template part with passed variables of the config</li> <li>from line 8, the toolset itself is defined. Identical to any inline toolset config. Except for the variable substitution of course </li> </ul> tools-segarc-icon-state template.yaml<pre><code>template:\ntype: toolset                   # toolset template it is...\ndefaults:                       # Default values for vars\n- entity: 0\n- cx: 25\n- cy: 50\n- show_scale: false\ntoolset:                          # From here the toolset is defined!\nposition:\ncx: '[[cx]]'                  # Templated var!!\ncy: '[[cy]]'                  # Templated var!!\nscale: 1\ntools:\n- type: segarc\nid: 0                       # Unique id within tools config\nentity_index: '[[entity]]'  # Templated var!!\nposition:\ncx: 50\ncy: 50\nstart_angle: 0\nend_angle: 360\nwidth: 5\nradius: 25\nscale:\nmin: 0\nmax: 100\nshow:\nscale: '[[show_scale]]'   # Templated var!!\nstyle: 'colorlist'\n&lt;...&gt;                           # rest of config removed for brevity\n</code></pre>","tags":["Templates","Built-in"]},{"location":"basics/templates/sak-templates/#colorstop-example","title":"Colorstop example","text":"<p>Say you want some consistency for the cards that show the inside temperature colors.</p> <p>You define a colorstops template, and use that in several cards/tools. </p> view<pre><code>- type: 'segarc'\nposition:\ncx: 50\ncy: 50\nstart_angle: -130\nend_angle: 130\nwidth: 7\nradius: 45\nentity_index: 0\nscale:\nmin: 15                 # Inside temperature\nmax: 25\noffset: -4.5\nshow:\nstyle: colorstops       # Use a colorstop\nsegments:\ncolorstops:             # The colorstops dict is replaced\ntemplate:             # Use template colorstops (re-use!)\nname: colorstops_temperature_inside\nvariables:          # Pass variables to template\n- thegap: 1\n</code></pre> <p>And the full <code>colorstop</code> template definition:</p> template<pre><code>colorstops_temperature_inside:\ntemplate:\ntype: colorstops        # MUST reference colorstops\ndefaults:               # Give vars a default value\n- thegap: 1\ncolorstops:               # The contents of the template!\ngap: '[[thegap]]'       # Use '[[ ]]' for template vars\ncolors:\n17: 'PowderBlue'\n19: 'var(--theme-gradient-color-01)'\n21: 'var(--theme-gradient-color-04)'\n</code></pre> <p>The result would be a replaced colorstops part:</p> result<pre><code>- type: 'segarc'\nposition:\ncx: 50\ncy: 50\nstart_angle: -130\nend_angle: 130\nwidth: 7\nradius: 45\nentity_index: 0\nscale:\nmin: 15                 # Inside temperature\nmax: 25\noffset: -4.5\nshow:\nstyle: colorstops       # Use a colorstop\nsegments:\ncolorstops:             # The colorstops dict is replaced\ngap: 1\ncolors:\n17: 'PowderBlue'\n19: 'var(--theme-gradient-color-01)'\n21: 'var(--theme-gradient-color-04)'\n</code></pre>","tags":["Templates","Built-in"]},{"location":"basics/templates/sak-templates/#derived-entity-example","title":"Derived Entity example","text":"<p>Many examples calculate the <code>brightness</code> attribute from a light using a <code>derived_entity</code>: Home Assistant passes the <code>brightness</code> attribute as a value between 0 and 255. This range is converted using a JavaScript template to a 0..100 (%) range.</p> <p>Example 10 is using a template for one card to show that you could re-use this JavaScript template.</p> view<pre><code>- type: segarc\nid: 0\nentity_index: 1\nposition:\ncx: 80\ncy: 25\nstart_angle: 0\nend_angle: 360\nwidth: 2\nradius: 15\nscale:\nmin: 0\nmax: 100\nshow:\nscale: false\nstyle: 'colorlist'\nderived_entity:\ntemplate:\nname: derived_entity_brightness\n# BUG:\n# Do need a variable section here and defaults in\n# template itself. That should not be the case...\n#\n# A template without variables SHOULD be possible...\nvariables:\n- dummyvar: 'bug'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- 'var(--primary-text-color)'\nanimation:\nduration: 5\nstyles:\nforeground:\nfill: var(--primary-text-color)\nbackground:\nfill: var(--theme-background-color-darken-20)\n</code></pre> <p>And the template definition:</p> template<pre><code>derived_entity_brightness:\ntemplate:\ntype: derived_entity\ndefaults:\n- dummyvar: 'dummy'\nderived_entity:\ninput : '[[[ return state ]]]'\nstate: &gt;\n[[[\nif (typeof(entity) === 'undefined') return;\nif (typeof(state) === 'undefined') return;\n\nvar bri = Math.round(state / 2.55);\nreturn (bri ? bri : '0');\n]]]\nunit: &gt;\n[[[\nif (typeof(state) === 'undefined') return undefined;\nreturn '%';\n]]]\n</code></pre>","tags":["Templates","Built-in"]},{"location":"basics/templates/sak-templates/#advanced-usage-overrides-and-extensions","title":"Advanced usage, Overrides and Extensions","text":"<p>The standard way of changing the template is to pass pre-defined variables to the template.  In some cases however, one wants to change more parts of the template in which case variables may not suit those needs.</p> <p>In those cases, SAK templates provide the same sort of functionality as the built-in YAML Overrides and Extensions.</p>","tags":["Templates","Built-in"]},{"location":"basics/templates/sak-templates/#position-override-example","title":"Position override example","text":"<p>This example shows the simple use of overwriting parts of the Toolset template without using template variables. In this case the <code>position</code> record is simply overridden instead of passing <code>cx</code> and <code>cy</code> as variables.</p> From: view-sake7.yaml<pre><code>- toolset: memory\n# Use pre-defined template for this part.\n# Template has variables.\ntemplate:\nname: tools_segarc_icon_state\nvariables:                  # Pass the list of variables\n- entity: 0               # - entity id\nposition:                     # 'Overwrite' the position from template\ncx: 72.5                    # Yes, we could have passed these as...\ncy: 74                      # ...variables!\n</code></pre>","tags":["Templates","Built-in"]},{"location":"basics/templates/sak-templates/#tool-override-within-toolset-example","title":"Tool override within toolset example","text":"<p>We can even go a bit further and overwrite a tool within the list of tools.</p> <p>A tool needs a unique ID to be able to overwrite the tool config</p> <p>In this case the <code>segarc</code> has <code>id: 0</code> and parts of the config are overwritten!</p> <p>Overriding and extending parts of a template is powerfull but can be error-prone. So take care!</p> <p>The yellow lines show the parts that are overwritten.</p> From: view-sake7<pre><code>- toolset: memory\n# Use pre-defined template for this part.\n# Template has variables.\ntemplate:\nname: tools_segarc_icon_state\nvariables:\n- entity: 0\nposition:\ncx: 72.5\ncy: 74\n# Scale to 80% of toolset template.\nscale: .8\n# Overwrite template with the following configuration not covered by the template\n# variables. id is required to make this work. So much possibilities...\ntools:\n- type: segarc\nid: 0\nshow:\nscale: true\nstyle: 'colorstops'\nsegments:\ncolorstops:\ngap: 1\ncolors:\n00: 'DarkSeaGreen'\n70: 'yellow'\n80: 'orange'\n90: 'red'\n</code></pre> <p>The full config for the segarc tool is below. The yellow lines show the dictionaries that are overridden:</p> <ul> <li>the <code>show</code> config dictionary</li> <li>the <code>segments</code> config dictionary</li> </ul> <p>The tool to replace parts of is selected by the <code>id:</code> field</p> From: template<pre><code>    - type: segarc\nid: 0\nentity_index: '[[entity]]'\nposition:\ncx: 50\ncy: 50\nstart_angle: 0\nend_angle: 360\nwidth: 5\nradius: 25\nscale:\nmin: 0\nmax: 100\nshow:\nscale: '[[show_scale]]'\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- 'var(--theme-gradient-color-01)'\nanimation:\nduration: 5\nstyles:\nforeground:\nfill: var(--theme-gradient-color-01)\nbackground:\nfill: var(--theme-background-color-darken-20)\nfilter: url(#is-1)\n</code></pre> <p>The resulting YAML config will be as follows with the overridden and/or extended <code>position:</code>,  <code>show:</code> and <code>segments:</code> dicts.</p> From: result<pre><code>    - type: segarc\nid: 0\nentity_index: 0         # Replaced variable\nposition:\ncx: 72.5              # Override\ncy: 74                # Override\nscale: .8             # Extension\nstart_angle: 0\nend_angle: 360\nwidth: 5\nradius: 25\nscale:\nmin: 0\nmax: 100\nshow:\nscale: true           # Override\nstyle: 'colorstops'   # Override\nsegments:\ncolorstops:           # Override\ngap: 1\ncolors:\n00: 'DarkSeaGreen'\n70: 'yellow'\n80: 'orange'\n90: 'red'\nanimation:\nduration: 5\nstyles:\nforeground:\nfill: var(--theme-gradient-color-01)\nbackground:\nfill: var(--theme-background-color-darken-20)\nfilter: url(#is-1)\n</code></pre>","tags":["Templates","Built-in"]},{"location":"basics/templates/yaml-built-in/","title":"YAML built-in template functionality","text":"","tags":["Templates","YAML"]},{"location":"basics/templates/yaml-built-in/#yaml-built-in-templating","title":"YAML built-in templating","text":"","tags":["Templates","YAML"]},{"location":"basics/templates/yaml-built-in/#basics","title":"Basics","text":"<p>YAML has built-in methods to cut the visual clutter in large YAML files.</p> <p>It does that by the use of so called <code>Anchors</code> and <code>Aliases</code>. On top of that YAML provides <code>Overrides</code> and <code>Extensions</code> to tweak the <code>Anchor</code> functionality.</p>","tags":["Templates","YAML"]},{"location":"basics/templates/yaml-built-in/#yaml-anchors-and-aliases","title":"YAML Anchors and Aliases","text":"<p><code>Anchors</code> and <code>Aliases</code> are YAML constructions that allow you to reduce repeat syntax and extend existing dictionaries. You can place <code>Anchors</code> (<code>&amp;</code>) on an entity to mark a multi-line section. You can then use an <code>Alias</code> (<code>*</code>) and use that <code>Anchor</code> later in the YAML document to reference that section.</p>","tags":["Templates","YAML"]},{"location":"basics/templates/yaml-built-in/#basic-example","title":"Basic example","text":"Source<pre><code>- &amp;flag Apple       # The Anchor\n- Beachball\n- Cartoon\n- Duckface\n- *flag             # The Alias\n</code></pre> <p>When this list is read by the Home Assistant YAML parser, the value identified by the <code>anchor</code> (Apple) will be filled at the <code>alias</code> when the YAML is composed. The literal <code>anchor</code> (<code>&amp;</code>) and <code>alias</code> (<code>*</code>) are discarded so they don\u2019t appear in the final result.</p> Result<pre><code>- Apple\n- Beachball\n- Cartoon\n- Duckface\n- Apple\n</code></pre>","tags":["Templates","YAML"]},{"location":"basics/templates/yaml-built-in/#more-complex-example","title":"More complex example","text":"<p>We can also define a dictionary as an <code>Anchor</code>, and re-use the complete dictionary on other locations:</p> Source<pre><code>definitions: steps:\n# The full step dict is the Anchor\n- step: &amp;build-test\nname: Build and test\nscript:\n- mvn package\nartifacts:\n- target/**\npipelines:\nbranches:\ndevelop:\n- step: *build-test   # Re-use \nmaster:\n- step: *build-test   # Re-use \n</code></pre> <p>When this dictionary is read by the YAML parser, the full dictionary will be filled.</p> Result<pre><code>definitions: steps:\n# The full step dict is the Anchor\n- step: &amp;build-test\nname: Build and test\nscript:\n- mvn package\nartifacts:\n- target/**\n\npipelines:\nbranches:\ndevelop:\n- step:\nname: Build and test\nscript:\n- mvn package\nartifacts:\n- target/**\nmaster:\n- step:\nname: Build and test\nscript:\n- mvn package\nartifacts:\n- target/**\n</code></pre>","tags":["Templates","YAML"]},{"location":"basics/templates/yaml-built-in/#yaml-overrides-and-extensions","title":"YAML Overrides and Extensions","text":"<p>You can also tweak the <code>Anchor</code> when called by entering <code>&lt;&lt;:</code> before the <code>Alias</code>. Below this, you can write any desired changes. Field/dicts are overridden if the new field/dict has the same name or is added afterward if different.</p> <pre><code>definitions: steps:\n- step: &amp;build-test\nname: Build and test\nscript:\n- mvn package\nartifacts:\n- target/**\n\npipelines:\nbranches:\ndevelop:\n- step: *build-test\nmaster:\n- step: &lt;&lt;: *build-test         # Re-use\nname: Testing on Master # override name field\nongoing: false          # extension\n</code></pre> <p>Home Assistant will issue warnings if using overrides, as it thinks you are defining the same field twice</p> <p>You can safely ignore those warnings  </p>","tags":["Templates","YAML"]},{"location":"basics/theming/color-swatches-and-color-palettes/","title":"Swatches and Palettes","text":"","tags":["Theming","Styling"]},{"location":"basics/theming/color-swatches-and-color-palettes/#color-swatches-and-color-palettes","title":"Color Swatches and Color Palettes","text":"<p> 2.4.5 \u00b7  Experimental</p> <p>Swatches do not work (yet) with the Segmented Arc tool</p> <p>This tool fetches its colors from Lovelace to calculate intermediate colors. Therefore, it does NOT (yet) use the colors from the loaded swatch(es)!</p>","tags":["Theming","Styling"]},{"location":"basics/theming/color-swatches-and-color-palettes/#swatch-examples","title":"Swatch Examples","text":"","tags":["Theming","Styling"]},{"location":"basics/theming/color-swatches-and-color-palettes/#rainbow-swatch","title":"Rainbow Swatch","text":"<p>This swatch has 11 colors depicting the rainbow. It has no light or dark mode colors.</p> <pre><code>#\n# Color swatch with 11 rainbow colors\n#\ncolor_swatch_rainbow_11:\ntemplate:\ntype: colorswatch\ncolorswatch:\nsak-cs-rainbow-01: 'white'\nsak-cs-rainbow-02: '#5e4fa2'\nsak-cs-rainbow-03: '#3288bd'\nsak-cs-rainbow-04: '#66c2a5'\nsak-cs-rainbow-05: '#abdda4'\nsak-cs-rainbow-06: '#e6f598'\nsak-cs-rainbow-07: '#fee08b'\nsak-cs-rainbow-08: '#fdae61'\nsak-cs-rainbow-09: '#f46d43'\nsak-cs-rainbow-10: '#d53e4f'\nsak-cs-rainbow-11: '#9e0142'\n</code></pre>","tags":["Theming","Styling"]},{"location":"basics/theming/color-swatches-and-color-palettes/#white-orange-gradient-swatch","title":"White Orange gradient Swatch","text":"<p>This swatch has 10 colors showing a white orange gradient. It has no light or dark mode colors.</p> <pre><code>#\n# A 10 color gradient from white to orange color swatch\n#\ncolor_swatch_gradient_white_orange_10:\ntemplate:\ntype: colorswatch\ncolorswatch:\nsak-cs-gradient-white-orange-01: '#FFF6E3'\nsak-cs-gradient-white-orange-02: '#FFE9B9'\nsak-cs-gradient-white-orange-03: '#FFDA8A'\nsak-cs-gradient-white-orange-04: '#FFCB5B'\nsak-cs-gradient-white-orange-05: '#FFBF37'\nsak-cs-gradient-white-orange-06: '#ffb414'\nsak-cs-gradient-white-orange-07: '#FFAD12'\nsak-cs-gradient-white-orange-08: '#FFA40E'\nsak-cs-gradient-white-orange-09: '#FF9C0B'\nsak-cs-gradient-white-orange-10: '#FF8C06'\n</code></pre>","tags":["Theming","Styling"]},{"location":"basics/theming/color-swatches-and-color-palettes/#redefining-google-brand-colors","title":"Redefining Google Brand colors","text":"<pre><code>#\n# Google brand colors as used in the Material 3 themes\n#\nbrand-google-blue:    '#4285F4'\nbrand-google-red:     '#DB4437'\nbrand-google-yellow:  '#F4B400' brand-google-green:   '#0F9D58'\n</code></pre> <p>These colors are used for example by the battery colorlist/stop. These colors are the same in light and dark mode. This swatch changes that.</p> <p>By using this color swatch, the cards/tools that use these Google Brand colors will use the colors from the color swatch.</p> <p><pre><code>#\n# Redefine Google Brand colors, and use light and dark mode colors\n#\ncolor_swatch_google_brand_colors_4:\ntemplate:\ntype: colorswatch\ncolorswatch:\nmodes:\nlight:\nbrand-google-blue:    'blue'\nbrand-google-red:     'red'\nbrand-google-yellow:  'yellow' brand-google-green:   'green'\ndark:        brand-google-blue:    'lightskyblue'\nbrand-google-red:     'salmon'\nbrand-google-yellow:  'gold' brand-google-green:   'lightgreen'\n</code></pre> The following cards use the Google Brand Color for the icon:</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.iphone_van_marco_battery_level\nname: 'Battery #2'\n- entity: sensor.iphone_van_marco_battery_level\nsecondary_info: last_changed\nformat: relative\npalette: google_brand: template:\nname: color_swatch_google_brand_colors_4\nvariables:\n- dummy: 1\nlayout:\ntemplate:\nname: sak_layout_fce_sensor2\nvariables:\n- sak_layout_sensor_colorstops_template: colorstops_battery_level\n- sak_layout_sensor_icon_style: colorstops\n- sak_layout_sensor_segarc_style: colorstops\n- sak_layout_sensor_scale_max: 100 ########################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.ipad_van_de_bereboot_battery_level\nname: 'Battery #2'\n- entity: sensor.ipad_van_de_bereboot_battery_level\nsecondary_info: last_changed\nformat: relative\npalette: google_brand: template:\nname: color_swatch_google_brand_colors_4\nvariables:\n- dummy: 1\nlayout:\ntemplate:\nname: sak_layout_fce_sensor2\nvariables:\n- sak_layout_sensor_colorstops_template: colorstops_battery_level\n- sak_layout_sensor_icon_style: colorstops\n- sak_layout_sensor_segarc_style: colorstops\n- sak_layout_sensor_scale_max: 100   </code></pre> <p>And with the modified Swatch colors, the colors look like this. You can see that they are different from the segmented arc colors:</p> <p> </p>","tags":["Theming","Styling"]},{"location":"basics/theming/overview/","title":"Overview","text":"","tags":["Theming","Styling"]},{"location":"basics/theming/overview/#overview-of-theming-swatch-and-palette-support","title":"Overview of Theming, Swatch and Palette support","text":"<p> 2.4.5 \u00b7  Experimental</p> <p>Version 2.4.5 adds support for theming and the use of palettes and swatches per card.</p>","tags":["Theming","Styling"]},{"location":"basics/theming/overview/#what-is-what","title":"What is What?","text":"What Level Description Theme Card Uses a known theme in Home Assistant as the theme for the card Palette Card A collection of swatches for a card Swatch N/A A collection of colors for any mode, light mode and dark mode. The definition is identical to Home Assistant themes","tags":["Theming","Styling"]},{"location":"basics/theming/overview/#known-problems","title":"Known problems","text":"<p>Currently, the Segmented Arc not always works nicely with a Color Swatch. In some cases, it fetches its colors directly from Lovelace to do color calculations, and does thereby 'skip' the colors defined at card level.</p>","tags":["Theming","Styling"]},{"location":"basics/theming/per-card-theme/","title":"Per card Theming","text":"<p> 2.4.5 \u00b7  Experimental</p>","tags":["Theming","Styling"]},{"location":"basics/theming/per-card-theme/#card-configuration","title":"Card configuration","text":"<p>Using a specific Home Assistant theme for your Swiss Army Knife custom card is nothing more than specifying the name of the theme that is in the list of Home Assistant themes:</p> <pre><code>  - type: 'custom:swiss-army-knife-card'\nentities:\n&lt;list of entities&gt;\ntheme: M3-D04-Magenta\n</code></pre> <p>You can only select themes that are known to Home Assistant</p> <p>Loading a specific theme per card does cost resources</p> <p>Every theme needs RAM memory. If you only need a few colors, consider using a color swatch!</p>","tags":["Theming","Styling"]},{"location":"basics/theming/per-card-theme/#example-views","title":"Example views","text":"<p>The examples show the Magenta Material 3 theme applied to a single card between the other cards which use the Teal Blue Material 3 theme that is loaded by Home Assistant.</p>","tags":["Theming","Styling"]},{"location":"basics/theming/per-card-theme/#example-in-light-mode-and-alert-off","title":"Example in light mode and alert 'off':","text":"","tags":["Theming","Styling"]},{"location":"basics/theming/per-card-theme/#example-in-light-mode-and-alert-on","title":"Example in light mode and alert 'on':","text":"","tags":["Theming","Styling"]},{"location":"basics/theming/per-card-theme/#example-in-dark-mode-and-alert-off","title":"Example in dark mode and alert 'off':","text":"","tags":["Theming","Styling"]},{"location":"basics/theming/per-card-theme/#example-in-dark-mode-and-alert-on","title":"Example in dark mode and alert 'on':","text":"","tags":["Theming","Styling"]},{"location":"changelog/changelog/","title":"Changelog","text":"","tags":["Changelog","Card"]},{"location":"changelog/changelog/#release-v245","title":"Release v2.4.5","text":"","tags":["Changelog","Card"]},{"location":"changelog/changelog/#a-release-with-per-card-theming-possibilities-swatches-and-palettes","title":"A release with per-card theming possibilities, swatches, and palettes!","text":"<ul> <li>You can specify a Home Assistant theme for your card</li> <li>Swatches are small, lightweight themes that you can load additionally to any theme. Now you can use extra colors with support for light and dark modes for any color or color list, or even overwrite parts of the loaded theme!</li> <li>Palettes are just a collection of swatches to enable the use of multiple swatches in a card.</li> </ul>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#whats-changed","title":"What's Changed","text":"","tags":["Changelog","Card"]},{"location":"changelog/changelog/#new-features","title":"New Features","text":"<ul> <li>Add support for theming, palettes and swatches by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/220, closes #80, #176, #205 </li> </ul> <p>Some views have changed, and I added color swatch templates as an example to the <code>ha-config</code> folder!</p>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#fixes","title":"Fixes","text":"<ul> <li>Fix tool style map in render by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/222, closes #217 </li> <li>Fix UserSVG clip-path and masking problems in Firefox by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/223, closes #215 </li> </ul> <p>Full Changelog: https://github.com/AmoebeLabs/swiss-army-knife-card/compare/v2.4.4...v2.4.5</p>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#release-v244","title":"Release v2.4.4","text":"","tags":["Changelog","Card"]},{"location":"changelog/changelog/#a-small-release-that-gives-users-their-negative-values-and-icons-back","title":"A small release that gives users their negative values and icons back \ud83d\ude80","text":"<p>Note: Don't forget to clear the browser caches and mobile companion frontend cache after you have updated this card!</p>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#whats-changed_1","title":"What's Changed","text":"","tags":["Changelog","Card"]},{"location":"changelog/changelog/#fixed","title":"Fixed","text":"<ul> <li>Wrong icon is displayed when using multiple entity indexes in animation by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/211</li> <li>Wrong icon is displayed when using multiple entity indexes in animation by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/213 (reprise!)</li> <li>Fix sign processing in _buildState() for negative numbers by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/212 (Issue #209)</li> </ul>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#other-changes","title":"Other Changes","text":"<ul> <li>Changed handling of <code>fire-dom-event</code> to check if firing this event is more reliable.</li> </ul> <p>Full Changelog: https://github.com/AmoebeLabs/swiss-army-knife-card/compare/v2.4.3...v2.4.4</p>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#release-v243","title":"Release v2.4.3","text":"","tags":["Changelog","Card"]},{"location":"changelog/changelog/#whats-changed_2","title":"What's Changed","text":"","tags":["Changelog","Card"]},{"location":"changelog/changelog/#new-features_1","title":"New Features","text":"<ul> <li>Support for custom popup actions using browser mod integration by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/204</li> </ul>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Fix Action doesn't work with multiple entities by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/208</li> </ul>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#other-changes_1","title":"Other Changes","text":"<ul> <li>None</li> </ul> <p>Full Changelog: https://github.com/AmoebeLabs/swiss-army-knife-card/compare/v2.4.2...v2.4.3</p>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#release-v242","title":"Release v2.4.2","text":"","tags":["Changelog","Card"]},{"location":"changelog/changelog/#behind-the-scenes-development-environment-changes","title":"\"Behind the scenes\" development environment changes","text":"<p>The previous development was done in a single file (8.000 lines of JavaScript) using vscode or Notepad++ as editor. This was easy, but sometimes challenging to maintain.</p> <p>The current environment uses the latest and greatest stuff: - vscode with the \"Remote attached SSH Docker container\" extension for development. The remote container is running on my server where Home Assistant is also running. This makes it also easy to check all my dashboards if they are still working with the latest SAK card. - source file is split into (currently) 28 JavaScript files and built using Rollup.js - source quality is extended with this change, and now uses eslint with the strict AirBNB rules</p>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#results","title":"Results","text":"<ul> <li>no more external dependencies (unpkg.com), so no need for CORS definitions in <code>configuration.yaml</code> anymore for this card</li> <li>faster loading of the card, as there is no wait anymore caused by loading external packages</li> </ul>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#whats-changed_3","title":"What's Changed","text":"","tags":["Changelog","Card"]},{"location":"changelog/changelog/#development-environment","title":"Development Environment","text":"<ul> <li>Reorganize development environment and split source files by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/198</li> </ul>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#svg-styling","title":"SVG Styling","text":"<ul> <li>Reintroduce external SVG Injection to allow styling by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/issues/197</li> <li>Change Pollen SVGs to allow class and CSS var styling by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/200</li> </ul>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#notes","title":"Notes:","text":"<ul> <li>for styling to work, the SVG must be suitable for external styling and not contain local styling as this overwrites the external styling. For that reason, issue #200 was made for the pollen images.</li> <li>loading SVGs as external files is till possible in case of problems by using the <code>options: svginjection: false</code> definition in the card.</li> <li>In many cases, CSS <code>filter</code> definitions won't work in Safari. You should use SVG filters instead...</li> </ul>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#documentation-notes","title":"Documentation Notes:","text":"<ul> <li>The documentation is not yet updated with these SVG changes!</li> </ul> <p>Full Changelog: https://github.com/AmoebeLabs/swiss-army-knife-card/compare/v2.4.1...v2.4.2</p>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#release-v241","title":"Release v2.4.1","text":"","tags":["Changelog","Card"]},{"location":"changelog/changelog/#whats-changed_4","title":"What's Changed","text":"","tags":["Changelog","Card"]},{"location":"changelog/changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Duplicate key \"fill\" in sak-layout-fce-light-with-slider.yaml (@DeepCoreSystem), https://github.com/AmoebeLabs/swiss-army-knife-card/issues/165</li> <li>The segment colors in the Segmented Arc are not rendered correctly by @AmoebeLabs , #189 </li> <li>Circleslider doesn't work on scale 15-25 (@stinobook), #182</li> <li>Circular Slider Tool acts weird with \"odd\" scales (@KingCruzIII), #172</li> <li>Browser: compatibility with Safari 16.2-16.4 (@AmoebeLabs), #184</li> <li>Negative state value display with 2 signs '-' (@grichka49), #162</li> </ul>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#features","title":"Features","text":"<ul> <li>Support more than 1 entity to be passed to a tool (@AmoebeLabs), #160</li> <li>Add a simple format option for a state to convert brightness (@AmoebeLabs), #159</li> <li>Circular Slider: Enhance circular slider and fix bugs (@AmoebeLabs), #187</li> </ul>","tags":["Changelog","Card"]},{"location":"changelog/changelog/#other-changes_2","title":"Other Changes","text":"<ul> <li>Add brightness and duration format options to secondaryinfo by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/181</li> <li>Negative state value display with 2 signs by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/183</li> <li>Fix browser compatibility with Safari 16.2-16.4 by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/185</li> <li>Fix two code scanning alerts by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/186</li> <li>Circular Slider: Enhance, fix bugs and add entitylist by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/188</li> <li>Fix: Segment colors are wrong in segmented-arc by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/190</li> <li>Remove duplicate \"fill\" keys in say-layout-fce-light-with-slider.yaml by @AmoebeLabs in https://github.com/AmoebeLabs/swiss-army-knife-card/pull/192</li> </ul> <p>Full Changelog: https://github.com/AmoebeLabs/swiss-army-knife-card/compare/v1.0.0-rc.4...v2.4.1</p>","tags":["Changelog","Card"]},{"location":"design/example-set-functional-cards/","title":"Example set of functional cards","text":"","tags":["Design","Functional Cards","Example Set"]},{"location":"design/example-set-functional-cards/#example-functional-cards-i-made","title":"Example Functional Cards I made","text":"<p>I made a bunch of functional cards with two goals in mind:</p> <ul> <li>To show the possibilities of the Swiss Army Knife with small visual examples.</li> <li>As the YAML template definition and usage is included per card, you get see how to use these cards in a view, how these cards are made, how animations are done, styling and tool usage.</li> </ul> <p>This should help you to create your own visualizations, or you can just use these examples!</p> <p>Version RC.3 has been released as of July 24th, 2022 with full support for these layout templates!</p> Card Description AirVisual Card Two (#1 and #2) variants for displaying AirVisual data Battery Card Card showing the battery state, including 24 hour history. Several variants. Uses sensor layout template Binary Sensor Card Card showing the on/of state of a Binary Sensor Binary Sensor Card with Alert Same as above, but now four (#1, #2, #3 and #4) variations with an alert icon Environment Card Card showing inside environment data Header Card Card that can display header text above other cards Input Boolean Card Card that shows how to display and use the <code>input_boolean.toggle</code> service call Light Card Card that can switch/toggle a Light switch Light Card with Slider Card that can also control the brightness of a light Navigate Card Navigate to other Lovelace View. Shows how to use the navigate user action Person Card Card showing the location status of a Person. Also shows the power of some JavaScript Power Outlet Card Four (#1, #2, #3 and #4) variations of a card showing both status (on/off) and power usage Scene Card Card showing how to call a scene Sensor Card Two (#1 and #2) variations of showing sensor data, without and with 24 hour history, icon or background animations and with or without secondary info. Server Statistics Card Card showing the main server sensors like CPU, Memory, Disk, etc. Switch Card Three (#1, #2 and #3) variations of a card controlling a switch Tomorrow Pollen Card A card showing a single pollen status on a card Tomorrow Pollen All Card A card showing all the three pollen statuses on a card <p>The YAML definition for all cards is included in the examples, so you can copy/use them and learn from them!</p>","tags":["Design","Functional Cards","Example Set"]},{"location":"design/example-set-functional-cards/#overview-of-tools-used","title":"Overview of Tools used","text":"<p>Most tools are used in the example functional cards. Only 3 are not used.</p> Used? Tool Type Description badge basic A badge. Not yet Documented! circle basic A circle ellipse basic An ellipse line basic A vertical, horizontal or oblique line rectangle basic A rectangle with and w/o rounded corners rectex basic A more advanced rectangle with independent rounded corners regpoly basic A regular poly using the Schl\u00e4fli symbol math text basic A text display circslider advanced Circular Slider input tool. Not yet documented. Alpha horseshoe advanced TBD segarc advanced A segmented arc: shows progress data in an arc slider advanced Slider input tool. Used for brightness for example switch advanced A basic on/off switch usersvg advanced For fetching user defined, external SVG files area HA specific Represents an Entity Area icon HA specific Represents an Entity Icon name HA specific Represents an Entity Name state HA specific Represents an Entity State &amp; Unit of Measurement bar HA specific Represents an simple state history (horizontal or vertical bars)","tags":["Design","Functional Cards","Example Set"]},{"location":"design/example-set-functional-cards/#overview-of-templates-animations-and-styling-used","title":"Overview of Templates, Animations and Styling used","text":"Used? What Type Description SAK Templates template Used in the Server Statistics card JavaScript Snippets template Used in for instance the Person card, but also in the Light with slider card User Interactions interaction Tap and Drag actions, but also service usage for navigating, triggering scenes, etc. CSS Classes styling Not used in these cards. All inline styles CSS Styles styling In all cards CSS Animations animations Used in some of the cards that use blinking (battery) Colorlists animations Used in many cards with the segmented arc Colorstop Animations animations Used in many cards with the segmented arc State Operator Animations animations Used in for instance the Person card","tags":["Design","Functional Cards","Example Set"]},{"location":"design/example-set-functional-cards/#example-screenshot","title":"Example Screenshot","text":"","tags":["Design","Functional Cards","Example Set"]},{"location":"design/how-to-create-functional-cards/","title":"How to create functional cards","text":"","tags":["Design","Functional Cards"]},{"location":"design/how-to-create-functional-cards/#the-next-step-create-functional-cards","title":"The next step: create functional cards!","text":"<p>In the end, we all want functional cards, no matter what look &amp; feel we are using. We want something for binary and analog sensors, switches, power outlets, etc.</p> <p>This section, and the next sections is all about creating such cards.</p> <p>The steps I normally take to work from a certain look &amp; feel to functional cards is as follows:</p> <ul> <li>Create some cards to establish that look &amp; feel.</li> <li>Make a list of functional cards you like to have</li> <li>Sketch them</li> <li>Create them</li> </ul> <p>Now depending on how you want to work you:</p> <ul> <li>create SAK toolset templates from the start, just as I show in one of th 10 Step Tutorials. This can save you a lot of time creating functional cards, as you can re-use parts from the beginning!</li> <li>Create all cards first, check the similar toolsets, and create SAK templates </li> </ul> <p>The same holds true about using CSS Classes:</p> <ul> <li>Create user CSS Classes from the start of your design</li> <li>Or experiment first with several cards, before creating those classes.</li> </ul> <p>Either way: you will get your functional cards!</p> <p>This section serves as an example of functional cards, not as a starting point to win a Red-Dot Award!</p>","tags":["Design","Functional Cards"]},{"location":"design/how-to-create-functional-cards/#step-1-choose-your-look-feel","title":"Step 1: Choose your look &amp; feel","text":"<p>For these sections, I choose Example 12: as the basis for creating some example functional cards.</p> <p>These pages is still a work in progress, so AS IS</p> <p>This example view requires one of the Home Assistant Material 3 Themes</p> <p> Light example using HA Material 3 theme d06 (Teal blue)</p> <p> Dark example using HA Material 3 theme d06 (Teal blue)</p>","tags":["Design","Functional Cards"]},{"location":"design/how-to-create-functional-cards/#step-2-make-a-list","title":"Step 2: Make a list","text":"<p>I use a Mobile First approach. All cards should be readable and usable on my iPhone. So cards can't be very small!</p> <p>In most cases that means for the card size:</p> <ul> <li>Cards to fit a 1 column grid</li> <li>Cards to fit a 2 column grid</li> <li>Cards to fit a 3 column grid</li> </ul> <p>4 column cards are too small on my mobile, hence I don't use or create them.</p>","tags":["Design","Functional Cards"]},{"location":"design/how-to-create-functional-cards/#step-3-sketch-some-cards","title":"Step 3: Sketch some cards","text":"<p>I made some rough sketches based on the example 12 card:, but also used some cards I made as the basis to create other variants and cards.</p>","tags":["Design","Functional Cards"]},{"location":"design/how-to-create-functional-cards/#step-4-create-them","title":"Step 4: Create them","text":"<p>Last step is to create the cards you need.</p> <p>As an example, I created a bunch of functional cards for inspiration and learning. Check the next page for that!</p>","tags":["Design","Functional Cards"]},{"location":"design/how-to-design-your-card/","title":"How to design your card","text":"","tags":["Design"]},{"location":"design/how-to-design-your-card/#where-to-start","title":"Where to start?","text":"<p>So, you came here to read how to design your own card. That's good!</p> <p>If you're a graphic designer or some UX guy/woman, you will probably have tons of ideas, and after understanding the possibilities, you immediately fire up Adobe Indesign, Affinity Designer, Inkscape, or Procreate on your PC/Mac/iPad or went online using Figma or some other online tool to sketch your design.</p> <p>You're one of those people: </p> <p>The nice thing about the Swiss Army Knife is that you can design your own card.</p> <p>But not everybody is a graphical designer, so how to approach designing a visualization in that case if you're one of the below people?</p> <p>The bad thing about the Swiss Army Knife is that you do need a design for a card.</p>","tags":["Design"]},{"location":"design/how-to-design-your-card/#get-inspired","title":"Get inspired!","text":"<p>If you browse the internet you can find all sorts of visualizations. I just picked 3 as an example:</p> <p></p> <ul> <li>The left one is a simple flat design with no fancy stuff on it if we forget the waves in the background.</li> <li>The center is based on a Neumorphic design. I used that for some of the examples. You probably recognize the typical discs! By the way, the shadows in this example are a bit exaggerated for my taste. I've used more subtle shadows in the examples.</li> <li>The right one resembles a Homekit-alike design. It's clean and simple.</li> </ul> <p>All three are completely different designs, and all three can be build using the Swiss Army Knife card!</p> <p>Of course, you can't build them EXACTLY that way, but you can come a long way mimicking these examples.</p> <p>You will find several designs in the examples</p> <p>About half of them use a Neumorphic design, and the other half flat and Homekit alike designs.</p>","tags":["Design"]},{"location":"design/how-to-design-your-card/#ok-i-got-inspired-now-what","title":"Ok, I got inspired. Now what?","text":"<p>Well, you can try different approaches.</p> <ul> <li>Re-use an existing card and modify this to your own needs to design your own card</li> <li>Re-use some existing design you found on the internet to design your own card</li> <li>Create something completely new and have a unique card design</li> </ul> <p>Most of the possible card visualizations have been created I think.  So taking inspiration from something you found on the web and using that as the basis for your cards is a tried and true approach.</p> <p>Once you've decided what style you want, you can start designing your cards. You can choose the simple approach or a more professional approach:</p> <ul> <li>The simple approach of \"outlining something\" and then trying to make it using trial and error in YAML</li> <li>Create a real design in an app on a 100x100 artboard and then create the card using the dimensions and coordinates of the design</li> </ul>","tags":["Design"]},{"location":"design/how-to-design-your-card/#the-easy-approach-hand-sketching-some-design","title":"The easy approach: hand sketching some design","text":"<p>I used this a lot and created about 50 of these sketches in Procreate on my iPad. Only some of them made it in production. Many were not useful, too complex to make, or just ugly.</p> <p>Below you see one of those sketches. It shows a pre-version of the server example (See: example 7) and a production example of the lights (See: example 2). Not yet Leonardo da Vinci quality, but I'm learning. At least my handwriting is on par with a doctor </p> <p></p> <p>I then use this sketch as the basis to create the card. It took some guessing about coordinates and sizes. I use Notepad++ as an editor to produce the YAML. After every \"save\" action, I hit F5 to refresh Home Assistant's view to check if I'm satisfied with the result. If not, rinse and repeat...</p> <p>The server card took a lot of trial-and-error to get the 4 CPU/Load circles aligned the way I wanted to:</p> <p></p> <p>The lights were much easier, as it involved much less parts:</p> <p></p>","tags":["Design"]},{"location":"design/how-to-design-your-card/#the-professional-approach-using-an-app","title":"The professional approach: using an app","text":"<p>Below you see Affinity Designer in action.</p> <p>For example 6, I wanted to create something different with circles as the background, and on top of that some SAK tools (circles) with weather and airvisual data.</p> <p>The design is for a square card, so I created an artboard with a size 100mmx100mm. This is the default 'coordinate' system for a square card. As a result, the coordinates shown by Affinity Designer can be copied 1:1 in the cards YAML definition. No trial-and-error this time placing the tools at the right location.</p> <p>The units used are NOT relevant, it's all about a 100x100 canvas. Use centons if you like...</p> <p></p> <p>As an example, I selected one of the circles where the weather type will be put. In the lower right corner of the Affinity Designer screen, you can see that I selected the center coordinates and (if you look closely) that the X coordinate is 77 (mm) and the Y coordinate 59 (mm). You also notice the width/height for the circle is 22 (mm).</p> <p>The resulting partial YAML definition is as follows:</p> <pre><code>- toolset: weather-type\nposition:\n# The center X and Y position from Affinity Designer\ncx: 77\ncy: 59\ntools:\n# The height is 22. We make the circle a bit smaller:\n# Outer is 22. Radius = 22/2 - 4 = 7\n- type: 'circle'\nid: 0\nposition:\ncx: 50\ncy: 50\nradius: 7\nstyles:\ncircle:\nfill: white\n</code></pre> <p>And the final result after placing all the SAK tools (circles, entity icon, entity state, and weather type) on top of the background: a nice visualization, a bit artistic, clean, and showing a fair bit of information. The gradient also gives a nice touch to the overall look &amp; feel.</p> <p></p>","tags":["Design"]},{"location":"design/how-to-design-your-card/#a-word-on-theme-usage","title":"A word on Theme usage","text":"<p>If you want your design to work in both Light and Dark theme mode, make sure you use theme colors for the implementation of your design.</p> <p>Swiss Army Knife examples 11 and 12 use my Home Assistant Material 3 themes to implement cards that adapt to theme colors and to theme modes (dark/light).</p> <p>Enjoy!</p>","tags":["Design"]},{"location":"examples/example-1/","title":"Example 1: AirVisual and the Weather","text":"","tags":["Examples"]},{"location":"examples/example-1/#example-1-airvisual-and-weather-forecast","title":"Example 1: AirVisual and Weather forecast","text":"<p>A single card displaying data from Airvisual, the current weather and a 5 day weather forecast.</p> <p>Topcard showing AirVisual data with some weather data: </p> <p>Bottom card showing weather and weather forecast: </p>","tags":["Examples"]},{"location":"examples/example-1/#visualization","title":"Visualization","text":"","tags":["Examples"]},{"location":"examples/example-1/#airvisual","title":"AirVisual","text":"<p>The AirVisual card shows two blocks:</p> <ol> <li> <p>The left part shows the AirVisual data with 24 hours of  history</p> <ul> <li>The AQI 'face', an external SVG</li> <li>The AQI value with interpretation (good, etc.)</li> <li>The AQI main pollutant.</li> <li>24 hour history of the AQI value</li> </ul> </li> <li> <p>The right part shows weather data.</p> <ul> <li>The weathertype is displayed using an external animated SVG</li> <li>And below that, the outside temperature, humidity, pressure and wind speed.</li> </ul> </li> </ol>","tags":["Examples"]},{"location":"examples/example-1/#weather-forecast","title":"Weather forecast","text":"<p>This visualization is divided into three major blocks:</p> <ol> <li> <p>The top part shows the weathertype, temperature, humidity and AQI value.</p> <ul> <li>The weathertype is displayed using an external animated SVG</li> <li>Next are three <code>segmented arc</code> tools with dedicated colorstops and the state value and icon inside. The AQI icon is state dependent.</li> </ul> </li> <li> <p>The second / middle block shows pressure, wind and wind direction and sunset and sunrise</p> </li> <li> <p>The last block shows the 5 day weather forecast.</p> <ul> <li>The localized short day name using a bit of javascript in the YAML configuration</li> <li>The expected weather type using (again) external animated SVG's</li> <li>The maximum expected temperature</li> <li>The minimum expected temperature</li> <li>The expected precipitation</li> </ul> </li> </ol>","tags":["Examples"]},{"location":"examples/example-1/#interactions","title":"Interactions","text":"<ul> <li>All tools support by default the \"more-info\" dialog once clicked.</li> </ul>","tags":["Examples"]},{"location":"examples/example-1/#used-home-assistant-integrations","title":"Used Home Assistant Integrations","text":"<ul> <li>Met.no Weather integration</li> <li>Airvisual integration</li> </ul> <p>In total approx 50 entities are used to build this visualization.</p>","tags":["Examples"]},{"location":"examples/example-1/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"","tags":["Examples"]},{"location":"examples/example-1/#card","title":"Card","text":"<p> Required Home Assistant Integrations The visualization is build on the <code>Met.no</code> and <code>Airvisual</code> entities, so you need these integrations:</p> <ul> <li>Met.no Weather integration: </li> <li>Airvisual integration: </li> </ul> <p> Required Home Assistant Entity Changes The <code>Airvisual</code> entities should be the same for any installation, so no changes required on that part.</p> <p>The <code>Met.no</code> integration creates the <code>weather.changeme</code> entity. Adapt the <code>changeme</code> part to your own installation!</p> <p>Other weather integrations won't work, as they create different states and attributes</p>","tags":["Examples"]},{"location":"examples/example-1/#view-and-card-configuration","title":"View and Card Configuration","text":"If you LOVE YAMLIf you DON'T love YAML <p>It's your lucky day</p> <p>This is your go-to card: absolutely NO re-use, so no templates are used to define this card.</p> <p>It's a whopping 1.500 lines of YAML to display about 50 entities. Only 30 lines/entity!</p> <p>It was my first card, made in a time where templates didn't exist yet!</p> <p>Skip this one for now</p> <p>Skip this example and look at the other examples first!</p> <p>Or start with this one, and learn how to read YAML the hard way...</p>","tags":["Examples"]},{"location":"examples/example-1/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake1.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code>","tags":["Examples"]},{"location":"examples/example-1/#file-assets","title":"File assets","text":"<p>To display the weather type, you need the external animated SVG's which are located in the <code>/local/images/weather</code> folder</p> Definitions used in the animations section to display the weather type icon <pre><code>  images:\n- clear-night-night: /local/images/weather/clear-night.svg\n- cloudy-day: /local/images/weather/cloudy-day.svg\n- cloudy-night: /local/images/weather/cloudy-night.svg\n- fog-day: /local/images/weather/fog-day.svg\n- fog-night: /local/images/weather/fog-night.svg\n- hail-day: /local/images/weather/hail-day.svg\n- hail-night: /local/images/weather/hail-night.svg\n- lightning-day: /local/images/weather/lightning.svg\n- lightning-night: /local/images/weather/lightning.svg\n- partlycloudy-day: /local/images/weather/partlycloudy-day.svg\n- partlycloudy-night: /local/images/weather/partlycloudy-night.svg\n- pouring-day: /local/images/weather/pouring.svg\n- pouring-night: /local/images/weather/pouring-night.svg\n- rainy-day: /local/images/weather/rainy-day.svg\n- rainy-night: /local/images/weather/rainy-night.svg\n- snowy-day: /local/images/weather/snowy-day.svg\n- snowy-night: /local/images/weather/snowy-night.svg\n- snowy-rainy-day: /local/images/weather/snowy-rainy-day.svg\n- snowy-rainy-night: /local/images/weather/snowy-rainy-night.svg\n- sunny-day: /local/images/weather/sunny-day.svg\n- sunny-night: /local/images/weather/clear-night.svg\n- snowy-rainy-day: /local/images/weather/snowy-rainy-day.svg\n- snowy-rainy-night: /local/images/weather/snowy-rainy-night.svg\n- windy-day: /local/images/weather/windy-day.svg\n- windy-night: /local/images/weather/windy-night.svg\n- windy-variant-day: /local/images/weather/windy-variant.svg\n- windy-variant-night: /local/images/weather/windy-variant.svg\nanimations:\n- state: '[[[ return (state); ]]]'\nimage: &gt;\n[[[\nif (states[\"sun.sun\"].state == 'below_horizon') return (state + '-night');\nreturn (state + '-day');\n]]]\n</code></pre>","tags":["Examples"]},{"location":"examples/example-1/#remarks","title":"Remarks","text":"<ul> <li>This view shows the dutch translation for \"Partly Cloudy \u2192 Gedeeltelijk bewolkt\" and the wind direction \"WSW \u2192 WZW\". <p>Support for translations is possible using a YAML configuration.</p> </li> </ul>","tags":["Examples"]},{"location":"examples/example-10/","title":"Example 10: A colorful mix","text":"<p>And a short GIF to give you an idea of the CSS animations:</p> <p>Actions:</p> <ul> <li>I moved </li> <li>I switched all three lights to on.</li> <li>I changed the brightness of the right-most light back and forth.</li> <li>And finally, I switched all three lights to off.</li> </ul> <p></p>","tags":["Examples"]},{"location":"examples/example-10/#visualization","title":"Visualization","text":"<p>Indoor environment sensors, occupancy, airvisual, and some light switchable square cards with status, icon, history, segmented arc, and card animations.</p> <p>Cards 1, 2 and 3 use a similar design with small variations in the state bar (top of card), thickness of segmented arc and history bars.</p>","tags":["Examples"]},{"location":"examples/example-10/#interactions","title":"Interactions","text":"<ul> <li>All tools support by default the \"more-info\" dialog once clicked.</li> <li>The lights can be switched on/off by clicking/tapping the large light icon.</li> <li>All lights brightness update during dragging.</li> </ul>","tags":["Examples"]},{"location":"examples/example-10/#used-home-assistant-integrations","title":"Used Home Assistant Integrations","text":"<ul> <li>First row: Aqara temperature, humidity and pressure Zigbee sensors</li> <li>Second row: Aqara Occupancy Zigbee sensor</li> <li>Second row: Airvisual integration</li> <li>Third row: Ikea Tradfri Zigbee Lights</li> </ul> <p>I use [zigbee2mqtt][zigbee2mqtt-url] for the Zigbee sensors and lights. Zigbee2mqtt can be used either as docker container or [Home Assistant Add-on][zigbee2mqtt-addon-url] combined with the MQTT integration</p>","tags":["Examples"]},{"location":"examples/example-10/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"<p>Other than the Air Visual integration, the other generic ones are temperature, humidity, and pressure sensors, occupancy switches, and light switches, so you can replace them with your own entities.</p>","tags":["Examples"]},{"location":"examples/example-10/#environment-sensors-first-row","title":"Environment sensors (First row)","text":"<p> Required Home Assistant Entity Changes Replace the sensor entities with your own entities. As long as the entities do not use an attribute for the value, the history tool will work. </p>","tags":["Examples"]},{"location":"examples/example-10/#movementoccupancy-sensor-second-row","title":"Movement/occupancy sensor (Second row)","text":"<p> Required Home Assistant Entity Changes Replace the occupancy entity with your own entity.</p>","tags":["Examples"]},{"location":"examples/example-10/#airvisual-second-row","title":"AirVisual (Second row)","text":"<p> Required Home Assistant Integrations The only integration you need are the <code>Airvisual</code> entities, so you need the Airvisual integration</p> <p> Required Home Assistant Entity Changes The <code>Airvisual</code> entities should be the same for every installation, so no changes are needed on that part. If you don't have a <code>presence</code> sensor, replace it with an on/off sensor and the card should at least work!</p>","tags":["Examples"]},{"location":"examples/example-10/#lights-third-row","title":"Lights (Third row)","text":"<p> Required Home Assistant Entity Changes Replace the light entities with your light entities that have a <code>brightness</code> attribute.</p>","tags":["Examples"]},{"location":"examples/example-10/#view-and-card-configuration","title":"View and Card Configuration","text":"","tags":["Examples"]},{"location":"examples/example-10/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake10.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code>","tags":["Examples"]},{"location":"examples/example-10/#decluttering-templates","title":"Decluttering templates","text":"<p>None.</p>","tags":["Examples"]},{"location":"examples/example-10/#sak-templates","title":"SAK templates","text":"<p>None.</p>","tags":["Examples"]},{"location":"examples/example-10/#remarks","title":"Remarks","text":"<p>The AQI Card (second row, second card)</p> <p>You see two lines below the \"46 AQI\" state: a scale and the actual value. This is the <code>segmented arc</code> which is configured in such a way that it resembles a straight line. So this is not a new tool you're seeing </p> <p>The <code>segarc</code> config uses an elliptical display and a small arc to resemble a line.</p> <pre><code>- type: 'segarc'\nid: 0\nposition:\ncx: 65\ncy: 35\nradius_x: 120         # Wide ellipse\nradius_y: 1           # ...with almost no height\nstart_angle: 190      # Show only 20 degrees of the\nend_angle: 170        # ..ellipse to look like a straight line\nwidth: 2\nentity_index: 0\nscale:\nmin: 0\nmax: 300\nwidth: 2\noffset: 3\n</code></pre>","tags":["Examples"]},{"location":"examples/example-11/","title":"Example 11: Boiler and Electricity cards","text":"<p> Light example using Home Assistant Material 3 theme c11 (Purple)</p> <p> Dark example using Home Assistant Material 3 theme c11 (Purple)</p>","tags":["Examples"]},{"location":"examples/example-11/#visualization","title":"Visualization","text":"<p>This visualization shows colorful boiler and electricity cards with possibly very \"Dutch/European\" integrations.</p> <p>The second card has the data from my 3 phase smart meter. My 4 kWp solar system is disconnected, so you don't see any returned power.</p>","tags":["Examples"]},{"location":"examples/example-11/#boiler","title":"Boiler","text":"<p>It shows a thermostat with some extra data (heat/hot water active) and the boilers' setpoints and actual measured temperatures.</p> <p>The thermostat card uses two overlayed segmented arcs: - One (with scale) for the actual room temperature measured by the thermostat - One (white, no scale, superimposed on previous segarc) for the setpoint.</p> <p>You can see the setpoint in the screenshot: the room temperature is 19.6 degrees celcius and the setpoint is 20.0 degrees celcius. The latter one is a smaller segarc.</p>","tags":["Examples"]},{"location":"examples/example-11/#electricity","title":"Electricity","text":"<p>The electricity card shows my 230V/3x25A smart meter data where the upper segmented arc shows the delivered (from the grid) electricity, and the lower part the returned (to the grid) electricity from for instance a solar system.</p> <p>In my case, my 4 kWp solar systems converter delivers up to 3680 W (230V / 16A) and is connected to a single phase (L3).</p>","tags":["Examples"]},{"location":"examples/example-11/#used-home-assistant-integrations","title":"Used Home Assistant Integrations","text":"<ul> <li>Boiler: OpenTherm Gateway integration. I'm using both a MQTT based integration and the official OpenTherm Gateway integration.</li> <li>Electricity: DSMR smart meter readings using the separate DSMR Reader application, ie the DMSR Reader integration which uses MQTT to transfer the data to Home Assistant.</li> </ul>","tags":["Examples"]},{"location":"examples/example-11/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"<p>Both boiler and electricity are quite specific, but give you a nice idea what is possible to control a thermostat for instance.</p>","tags":["Examples"]},{"location":"examples/example-11/#boiler-top-two-cards","title":"Boiler (top two cards)","text":"<p> Required Home Assistant Integrations OpenTherm Gateway integration</p> <p> Required Home Assistant Entity Changes The OpenTherm Integration uses a name for the thermostat, in my case, this is <code>calenta</code>. If you also use the OpenTherm Integration, replace <code>calenta</code> with your own installation name. In other cases, you should be able to customize entities for your own thermostat/boiler configuration.</p> <p>The entities for the first card of the boiler:</p> <ul> <li>The first entity is the current room temperature (<code>sensor.room_temp_thermostat_calenta</code>)</li> <li>The last is just a random Zigbee sensor showing the current humidity inside (<code>sensor.studym_iaq_humidity</code>)</li> <li>The other sensors are to control the thermostat (<code>room_setpoint_thermostat_calenta</code>) using the slider and the boiler active / flame / hot water requests.</li> </ul> <p><pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.room_temp_thermostat_calenta\nname: Actueel\n- entity: binary_sensor.slave_ch_active_boiler_calenta\nicon: 'mdi:radiator'\nname: Warmtevraag?\n- entity: binary_sensor.slave_dhw_active_boiler_calenta\nicon: 'mdi:shower'\nname: WW vraag?\n- entity: binary_sensor.slave_flame_on_boiler_calenta\nicon: 'mdi:fire'\nname: Brander Aan?\n- entity: sensor.room_setpoint_thermostat_calenta\nicon: 'mdi:thermostat-box'\nname: Gewenst\ndecimals: 1\n- entity: sensor.studym_iaq_humidity\nunit: '%'\ndecimals: 0\n</code></pre> The entities for the second card of the boiler:</p> <p>The <code>slave_flame_on</code> entity is used to show a white background (using a rectangle) of the boiler is <code>on</code></p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: binary_sensor.slave_flame_on_boiler_calenta\nicon: 'mdi:fire'\nname: Brander Aan?\n- entity: sensor.control_setpoint_boiler_calenta\nname: Setpoint\ndecimals: 1\n- entity: sensor.ch_water_temp_boiler_calenta\nname: Actual\ndecimals: 1\n- entity: sensor.return_water_temp_boiler_calenta\nname: Return\ndecimals: 1\n</code></pre>","tags":["Examples"]},{"location":"examples/example-11/#electricity_1","title":"Electricity","text":"<p> Required Integrations - DMSR Reader integration</p> <p> Required Entity Changes If you are using the DSMR Reader integration, no changes are necessary for the electricity part.</p> <p>The DSMR Reader integration generates generic sensor entities:</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n#Total\n- entity: sensor.dsmr_reading_electricity_currently_delivered\ndecimals: 3\nname: 'Total'\narea: 'Tha Moon'\n- entity: sensor.dsmr_reading_electricity_currently_returned\ndecimals: 3\n#L1\n- entity:  sensor.dsmr_reading_phase_currently_delivered_l1\nname: 'L1'\ndecimals: 3\n- entity:  sensor.dsmr_reading_phase_currently_returned_l1\ndecimals: 3\n#L2\n- entity:  sensor.dsmr_reading_phase_currently_delivered_l2\nname: 'L2'\ndecimals: 3\n- entity:  sensor.dsmr_reading_phase_currently_returned_l2\ndecimals: 3\n#L3\n- entity:  sensor.dsmr_reading_phase_currently_delivered_l3\nname: 'L3'\ndecimals: 3\n- entity:  sensor.dsmr_reading_phase_currently_returned_l3\ndecimals: 3\n</code></pre>","tags":["Examples"]},{"location":"examples/example-11/#interactions","title":"Interactions","text":"<ul> <li>The slider for the thermostat will set the temperature using the <code>climate.set_temperature</code> service for my <code>climate.calenta</code> boiler entity in 0.5 degrees Celcius steps and a range between 17..23 degrees Celcius.</li> <li>All tools support by default the \"more-info\" dialog once clicked.</li> </ul>","tags":["Examples"]},{"location":"examples/example-11/#view-and-card-configuration","title":"View and Card Configuration","text":"","tags":["Examples"]},{"location":"examples/example-11/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake11.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code>","tags":["Examples"]},{"location":"examples/example-11/#decluttering-templates","title":"Decluttering templates","text":"<p>None.</p>","tags":["Examples"]},{"location":"examples/example-11/#sak-templates","title":"SAK templates","text":"<p>This view uses a template for the electricity card.</p> name file <code>toolset_electricity_delivered_returned</code> <code>toolset-electricity-delivered-returned-template.yaml</code> <p>The four parts therefore can use the same definition: <pre><code>  # ================================================================\n- toolset: totals\ntemplate:\nname: toolset_electricity_delivered_returned\nvariables:\n- entity_delivered: 0\n- entity_returned: 1\n- cx: 30\n- cy: 50\n\n# ================================================================\n- toolset: L1\ntemplate:\nname: toolset_electricity_delivered_returned\nvariables:\n- entity_delivered: 2\n- entity_returned: 3\n- cx: 80\n- cy: 50\n- opacity: 0.7\n\n# ================================================================\n- toolset: L2\ntemplate:\nname: toolset_electricity_delivered_returned\nvariables:\n- entity_delivered: 4\n- entity_returned: 5\n- cx: 125\n- cy: 50\n- opacity: 0.7\n\n# ================================================================\n- toolset: L3\ntemplate:\nname: toolset_electricity_delivered_returned\nvariables:\n- entity_delivered: 6\n- entity_returned: 7\n- cx: 170\n- cy: 50\n- opacity: 0.7\n</code></pre></p>","tags":["Examples"]},{"location":"examples/example-12/","title":"Example 12: Wide cards showing lots of sensors","text":"<p>This example view requires one of the Home Assistant Material 3 Themes</p> <p> Light example using HA Material 3 theme d06 (Teal blue)</p> <p> Dark example using HA Material 3 theme d06 (Teal blue)</p>","tags":["Examples"]},{"location":"examples/example-12/#how-to","title":"How to","text":"<p>The Hestia server statistics card is available as tutorial #2.</p> <p>In this tutorial you learn how to recreate that specific card and as a bonus you learn to make a SAK template that is used for the 4 sensors.</p> <p>Furthermore, to show how you can create a full set of cards using a certain look &amp; feel, I just created this example:</p> <p>Full length (aspectratio 6/1) cards:</p> <ul> <li>An AirVisual Card</li> <li>An Environment Card with battery/linkquality (Bath #2)</li> <li>A Server Statistics Card (Hestia)</li> </ul> <p>Half length (aspectratio 3/1) cards:</p> <ul> <li>A Power Usage Card (Kitchen)</li> <li>A Switch w/ Power Usage Card (Air)</li> <li>An Occupancy Card with battery/linkquality (Movement)</li> <li>A Fan Card (Fan)</li> <li>A Fire Detection Card with battery/linkquality (Fire 1st, same sensor as Movement)</li> <li>A Switch Card (Heater)</li> </ul> <p>The animated version looks like this: </p> <p>And YES, you can have Alert icons too if you want </p> <p></p>","tags":["Examples"]},{"location":"examples/example-12/#visualization","title":"Visualization","text":"<p>This visualization shows some multi entity wide cards instead of the abundant square cards. All cards have an aspect ratio of 6/1.</p> <p>The information density is pretty high, but still readable on my iPhone.</p> <p>AirVisual card</p> <p>The first one shows air quality data from AirVisual in a three 'columns' layout: The air quality icon and description in the first 'column', the state with a segmented arc in the second 'column', and finally the history over the last 24 hours in the last 'column'.</p> <p>Environment cards</p> <p>The environmental cards are all the same format and show data from my Aqara Zigbee environmental sensors. In addition to the sensor values \u200b\u200b(temperature, humidity, and pressure), battery and link quality data is also displayed.</p> <p>Server cards</p> <p>These show the usual suspects like cpu, memory, disk, and system load information.</p>","tags":["Examples"]},{"location":"examples/example-12/#tools-used-to-create-this-visualization","title":"Tools used to create this visualization","text":"<p>AirVisual card</p> <p>The AirVisual card is built with (first column) the Entity Icon, Entity Name (Tha Moon) and Entity State (1 uur geleden / 1 hour ago) tools.</p> <p>The second column contains - once again - an Entity Icon, the state value 7AQI and on the lower end a more or less flat Segmented Arc.</p> <p>The last column shows the 24 hour history trend of the AQI value using the Entity History Tool.</p> <p>Environment cards</p> <p>The environment cards are all identical. The first column is identical to the AirVisual card. The second column is using 3 segmented arcs, each containing the entity icon and state value of the temperature, humidity and pressure sensors.</p> <p>The last column uses the entity icon and entity state together with a segmented arc, which is also showing the entity state value.</p> <p>Server cards</p> <p>The first column of the server cards are again identical to the previous cards. Additional to that 4 segmented arcs, each containing the entity icon and state value of the CPU, RAM, DISC and LOAD sensors.</p>","tags":["Examples"]},{"location":"examples/example-12/#interactions","title":"Interactions","text":"<ul> <li>All tools support by default the \"more-info\" dialog once clicked.</li> </ul>","tags":["Examples"]},{"location":"examples/example-12/#used-home-assistant-integrations","title":"Used Home Assistant Integrations","text":"<ul> <li>First card: Airvisual integration</li> <li>Environment cards: Aqara Zigbee sensors with temperature, humidity and pressure data using zigbee2mqtt, ie the MQTT integration</li> <li>Server cards: <ul> <li>The System Monitor integration</li> <li>The Glances integration</li> <li>The RESTful sensor integration to get extra sensors from Glances, as the default Glances integration does not give you all the 'load' sensors.</li> </ul> </li> </ul> <p>Below the <code>sensor:</code> configuration for the System Monitor and extra Glances RESTful sensors:</p> <p>System Monitor sensors<pre><code># System Monitor\n# ==============\n# - https://www.home-assistant.io/integrations/systemmonitor/\n- platform: systemmonitor\nresources:\n- type: disk_use_percent\narg: /\n- type: disk_use\narg: /\n- type: disk_free\narg: /\n- type: memory_free\n- type: memory_use\n- type: memory_use_percent    - type: load_1m\n- type: load_5m\n- type: load_15m\n- type: processor_use\n- type: last_boot\n</code></pre> Extra Glances sensors<pre><code># REStful stuff, Glances for instance\n# ===================================\n# - https://www.home-assistant.io/integrations/rest/\n# - https://www.home-assistant.io/integrations/sensor.rest/\n#\n# Get Load sensors from Glances directly. The integration does not give them...\n- platform: rest\nresource: http://poseidon.srv.home:61208/api/3/load\nscan_interval: 60\nname: glances_poseidon_load\nvalue_template: \"{{ value_json}}\"\njson_attributes:\n- min1\n- min5\n- min15\n- cpucore\n\n- platform: template\nsensors:\nglances_poseidon_load_min1:\nvalue_template: \"{{ state_attr('sensor.glances_poseidon_load', 'min1') }}\"\nfriendly_name: \"Glances-Poseidon Load 1min\"\nunit_of_measurement: \"1m\"\n</code></pre></p> <p>The top card uses the system monitor integration, the bottom card the Glances and RESTful sensor integration</p>","tags":["Examples"]},{"location":"examples/example-12/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"","tags":["Examples"]},{"location":"examples/example-12/#in-general","title":"In general","text":"<p> Theme This card requires the use of one of the Material 3 Themes for Home Assistant to be displayed as intended </p>","tags":["Examples"]},{"location":"examples/example-12/#airvisual-card","title":"Airvisual card","text":"<p> Required Home Assistant Integrations You need the AirVisual integration.</p> <p> Required Home Assistant Entity Changes The <code>Airvisual</code> entities should be the same for any installation.</p>","tags":["Examples"]},{"location":"examples/example-12/#environment-cards","title":"Environment cards","text":"<p> Required Home Assistant Entity Changes Replace my <code>temperature</code>, <code>humidity</code>, <code>pressure</code>, <code>battery</code>, and <code>linkquality</code> entities with your sensor entities. </p>","tags":["Examples"]},{"location":"examples/example-12/#the-hestia-server-card","title":"The Hestia server card","text":"<p> Required Home Assistant Integrations The System Monitor integration</p> <p> Required Home Assistant Entity Changes The <code>System Monitor</code> entities should be the same for each installation, so no changes are required for that part. </p>","tags":["Examples"]},{"location":"examples/example-12/#the-poseidon-server-card","title":"The Poseidon server card","text":"<p> Required Home Assistant Integrations     - The Glances integration     - The RESTful sensor integration to get extra sensors from Glances, as the default Glances integration does not give you all the 'load' sensors.</p> <p> Required Home Assistant Entity Changes The <code>Glances</code> integration creates environment dependent entities: the server name is usually appended to the integration. My integration is called <code>Glances-Poseidon</code> with entity names like <code>sensor.glances_poseidon_cpu_load</code>. You must change the entities to your own entity IDs.</p> <p>If you have only 1 server, remove the second server...</p>","tags":["Examples"]},{"location":"examples/example-12/#view-and-card-configuration","title":"View and Card Configuration","text":"","tags":["Examples"]},{"location":"examples/example-12/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake12-m3.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code> <p>There is a second variant of this card</p> <p><code>view-sake12-ani-m3.yml</code> has some animated circles in the second card, including a rotating battery icon. Just for fun, and to show these possibilities.</p>","tags":["Examples"]},{"location":"examples/example-12/#decluttering-templates","title":"Decluttering templates","text":"<p>The only decluttering template this card uses is the <code>header_template</code>.</p>","tags":["Examples"]},{"location":"examples/example-12/#sak-templates","title":"SAK templates","text":"<p>This view does not use any SAK Template. It should of course, but in this case, I applied the renowned copy-paste-adapt paradigm. And that gives you 3.200 lines of YAML!</p> name file <code>none</code> <code>none.yaml</code>","tags":["Examples"]},{"location":"examples/example-2/","title":"Example 2: Controlling Lights","text":"<p>Visualization of lights and interaction to switch lights on and off and to control brightness using a slider for the first row.</p> <p></p>","tags":["Examples"]},{"location":"examples/example-2/#visualization","title":"Visualization","text":"<p>Tip</p> <p>This visualization shows some non-card alike aspects of the Swiss Army Knife: the horizontal divider lines, and the texts \"SCENES\", \"VERLICHTING (Lights)\" and \"WOONKAMER (Livingroom)\" are all made with SAK.</p> <p>The first lights row shows some cards with different experimental sliders and a <code>segmented arc</code> to display the brightness. The other rows show a standard light card.</p> <p>The light switch (all cards)</p> <p>The light switch is made out of 3 circles and an icon:</p> <ul> <li>the 1st (bottom) circle is used to get the Neumorphic effect: a button that 'rises' out of the background. It also servers as the edge of the light button.</li> <li>the second circle is used to display the activation ring; orange if 'on' and light grey if 'off'.</li> <li>the third (top) circle is used to display the inset shadow effect as if the button is \"pressed\".</li> <li>last but not least: the light icon is displayed on top of all those circles.</li> </ul> <p>First card</p> <p>The first card shows a \"more-info\" button in the top left, the ligh button, the name of the light, and a slider with the actual percentage on the right side of the slider. The position of that value can be defined in the card.</p> <p>Second and third card</p> <p>The configurable position of the percentage is visible in the second and third card: apart from using a different styled slider, the percentage is shown in the circle where the <code>segmented arc</code> is also defined.</p> <p>The rest of the cards</p> <p>The other 4 - identical - cards show the light button, the area (Woonkamer = Livingroom), the name of the light, and if present: the brightness in the lower right corner.</p> <p>Brightness is only displayed if the light is on</p> <p>This is a change in Home Assistant some months ago.</p>","tags":["Examples"]},{"location":"examples/example-2/#interactions","title":"Interactions","text":"<p>Sliders \u2192  Experimental</p> <p>First row</p> <p>The first row has an explicit \"more-info\" menu button and sliders for brightness</p> <ul> <li>The menu in the upper left corner calls the \"more-info\" popup for the light.</li> <li>Clicking the light icon toggles the state of the light. The circle behind the icon functions as a \"button\".</li> <li>Dragging the slider will set the brightness and update the lights brightness semi-realtime 4 times a second.</li> </ul> <p>Other rows</p> <ul> <li>All cards displayed toggle the light by clicking on the light icon. The circle behind the icon functions as a \"button\".</li> </ul> <p>All rows</p> <ul> <li>All cards displayed show the \"more-info\" dialog if name, area or brightness percentage is clicked.</li> </ul>","tags":["Examples"]},{"location":"examples/example-2/#used-home-assistant-integrations","title":"Used Home Assistant Integrations","text":"<ul> <li>Ikea Tradfri Zigbee lights using zigbee2mqtt, ie the MQTT integration</li> <li>Dumb on/off lights using MQTT.</li> </ul>","tags":["Examples"]},{"location":"examples/example-2/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"","tags":["Examples"]},{"location":"examples/example-2/#all-cards","title":"All cards","text":"<p> Required Home Assistant Integrations The visualization is build on light entities that have a on/off <code>state</code> and a <code>brightness</code>. It does not depend on any specific integration. Any entity from the <code>light</code> domain with these entity/attribute should work</p> <p> Required Home Assistant Entity Changes Replace the <code>light</code> entities (<code>state</code> and <code>brightness</code> attribute) with your own entities </p>","tags":["Examples"]},{"location":"examples/example-2/#view-and-card-configuration","title":"View and Card Configuration","text":"","tags":["Examples"]},{"location":"examples/example-2/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake2.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code> <p>This example uses decluttering templates for all cards except for the first row of lights!</p> <p>Both SAK templates and Decluttering templates are used to display the cards. This view is therefore as compact and easy to read as possible and is a good example of re-use.</p>","tags":["Examples"]},{"location":"examples/example-2/#decluttering-templates","title":"Decluttering templates","text":"<p>Decluttering templates are used extensively in this view except for the cards on the first row.</p> <p>The following templates are defined in <code>/lovelace/decluttering_templates/decluttering_templates.yaml</code> file:</p> <ul> <li>The <code>header_template</code> is used for displaying the header sak card</li> <li>The <code>divider_template</code> is used for displaying the divider line sak card</li> <li>The <code>sak_button_template_nm_tpl</code> is used for displaying the light card</li> </ul> <p>Excerpt of the headers and dividers in this view...</p> <pre><code>- type: custom:decluttering-card\ntemplate: divider_template\n- type: custom:decluttering-card\ntemplate: header_template\nvariables:\n- content: 'Scenes'\n\n- type: custom:decluttering-card\ntemplate: divider_template\n- type: custom:decluttering-card\ntemplate: header_template\nvariables:\n- content: 'Verlichting'\n\n- type: custom:decluttering-card\ntemplate: header_template\nvariables:\n- content: 'Woonkamer'\n- font_color: var(--secondary-text-color)\n- font_size: 3em\n</code></pre> <p>And the excerpt of the lights on second and third row...</p> <pre><code>- type: horizontal-stack\ncards:\n- type: custom:decluttering-card\ntemplate: sak_light_button_template_nm_tpl\nvariables:\n- entity: light.livingroom_light_gasheater_light\n- area: Woonkamer\n- name: Rode Lamp\n- icon: 'mdi:floor-lamp'\n\n- type: custom:decluttering-card\ntemplate: sak_light_button_template_nm_tpl\nvariables:\n- entity: light.livingroom_light_cupboard_light\n- area: Woonkamer\n- name: Boekenkast\n- icon: 'mdi:book-open-outline'\n</code></pre> Excerpt of the <code>decluttering_templates.yaml</code> file... <pre><code>header_template:\n!include sak-header-template-mw.yaml\ndivider_template:\n!include sak-divider-template-mw.yaml\n\nsak_light_button_template_nm_tpl:\n!include sak-light-button-nm-tpl.yaml </code></pre>","tags":["Examples"]},{"location":"examples/example-2/#sak-templates","title":"SAK templates","text":"<p>The following templates are defined in the <code>/lovelace/sak_templates/sak-templates.yaml</code> file:</p> <ul> <li>The <code>toolset_light_button_nm</code> is the template used for the standard lights (second and third row of cards).</li> <li>The <code>toolset_light_button_slider_nm</code> for the first card on the first row.</li> <li>The <code>toolset_light_button_slider3_nm</code> for the second card on the first row.</li> <li>The <code>toolset_light_button_slider2_nm</code> for the third card on the first row.</li> </ul> Excerpt of the <code>sak-templates.yaml</code> file... <pre><code>toolset_light_button_nm:\n!include toolset-light-button-nm-template.yaml\n\ntoolset_light_button_slider_nm:\n!include toolset-light-button-slider-nm-template.yaml\n\ntoolset_light_button_slider2_nm:\n!include toolset-light-button-slider2-nm-template.yaml\n\ntoolset_light_button_slider3_nm:\n!include toolset-light-button-slider3-nm-template.yaml\n</code></pre>","tags":["Examples"]},{"location":"examples/example-2/#remarks","title":"Remarks","text":"<ul> <li>Home Assistant sends a brightness value between 0..255. A little piece of javascript in the card converts this to 0..100% as a derived state, including a unit of measurement setting of \"%\". This means that the value and the uom can be styled as if it is an existing state.</li> </ul>","tags":["Examples"]},{"location":"examples/example-3/","title":"Example 3: Environment sensors with history","text":"<p>Visualization of some environment sensors.</p> <p></p>","tags":["Examples"]},{"location":"examples/example-3/#visualization","title":"Visualization","text":"<p>The card is build using the following tools:</p> <ul> <li>A rectangle with a large top-right corner radius with a circle on top of that. The Neumorphic shadow filter 'morphs' them as looking as a single object</li> <li>State and unit of measurement</li> <li>The name of the entity</li> <li>A barchart showing the trend over de last 24 hours using a light to dark orange gradient setting as colorstop</li> </ul>","tags":["Examples"]},{"location":"examples/example-3/#interactions","title":"Interactions","text":"<ul> <li>All tools support by default the \"more-info\" dialog once clicked.</li> </ul>","tags":["Examples"]},{"location":"examples/example-3/#used-home-assistant-integrations","title":"Used Home Assistant Integrations","text":"<ul> <li>Aqara Zigbee sensors with temperature, humidity and pressure data</li> </ul> <p>I use [zigbee2mqtt][zigbee2mqtt-url] for the Zigbee sensors and lights. Zigbee2mqtt can be used either as docker container or [Home Assistant Add-on][zigbee2mqtt-addon-url] combined with the MQTT integration</p>","tags":["Examples"]},{"location":"examples/example-3/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"","tags":["Examples"]},{"location":"examples/example-3/#all-cards","title":"All cards","text":"<p> Required Home Assistant Integrations The visualization is build on <code>temperature</code>, <code>humidity</code> and <code>lux</code> entities. It does not depend on any specific integration.</p> <p> Required Home Assistant Entity Changes You can replace the existing <code>temperature</code>, <code>humidity</code> and <code>lux</code> entities with any sensor entity. </p>","tags":["Examples"]},{"location":"examples/example-3/#view-and-card-configuration","title":"View and Card Configuration","text":"","tags":["Examples"]},{"location":"examples/example-3/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake3.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code> <p>This example uses decluttering and SAK templates for the card</p> <p>Both SAK templates and Decluttering templates are used to display the cards. This view is therefore as compact and easy to read as possible and is a good example of re-use.</p>","tags":["Examples"]},{"location":"examples/example-3/#decluttering-templates","title":"Decluttering templates","text":"<p>Excerpt of the header configuration...</p> <ul> <li>The <code>header_template</code> is used for displaying the header sak card From: view-sake3.yaml<pre><code>- type: custom:decluttering-card\ntemplate: header_template\nvariables:\n- content: 'Luchtdruk'\n- font_color: var(--secondary-text-color)\n- font_size: 3em\n</code></pre></li> </ul> <p>Excerpt of the cards configuration...</p> <ul> <li>The <code>sak_sensor_history_template_nm_tpl</code> is used for displaying the sensor cards From: view-sake3.yaml<pre><code>- type: horizontal-stack\ncards:\n- type: custom:decluttering-card\ntemplate: sak_sensor_history_template_nm_tpl\nvariables:\n- entity: sensor.livingroom_iaq_humidity\n- name: Woonkamer\n- icon: mdi:water-percent\n- type: custom:decluttering-card\ntemplate: sak_sensor_history_template_nm_tpl\nvariables:\n- entity: sensor.kitchen_iaq_humidity\n- name: Keuken\n- icon: mdi:water-percent\n- type: custom:decluttering-card\ntemplate: sak_sensor_history_template_nm_tpl\nvariables:\n- entity: sensor.hall_gf_iaq_humidity\n- name: Hal\n- icon: mdi:water-percent\n</code></pre></li> </ul> Excerpt of the <code>decluttering_templates.yaml</code> file... <pre><code>header_template:\n!include sak-header-template-mw.yaml\n\nsak_sensor_history_template_nm_tpl:\n!include sak-sensor-history-nm-tpl.yaml\n</code></pre>","tags":["Examples"]},{"location":"examples/example-3/#sak-templates","title":"SAK templates","text":"<p>The following templates are defined in the <code>/lovelace/sak_templates/sak-templates.yaml</code> file:</p> <ul> <li>The <code>header</code> is the template used for the header texts</li> <li>The <code>toolset_sensor_history</code> is used for the sensor cards.</li> </ul>","tags":["Examples"]},{"location":"examples/example-3/#remarks","title":"Remarks","text":"<p>This view is an excellent example of how to pass variables from a decluttering to a SAK template</p> <p>The <code>sak_sensor_history_template_nm_tpl</code> decluttering template and <code>toolset_sensor_history</code> SAK template show how these templates can work together in passing variables from one template to the other.</p> <p>Excerpt of decluttering template for passing variables from a decluttering to a SAK template</p> <p>The <code>variables</code> passed to the decluttering template are passed directly to the SAK template. In this case it is the color range for the barchart. <pre><code>default:\n- cx: 50\n- cy: 50\n- decimals: 1\n- variables:\n- bar_color_min: var(--cs-orange-lighten-40)\n- bar_color_max: var(--cs-orange-darken-20)\ncard:\ntype: 'custom:swiss-army-knife-card'\nentities: - entity: '[[entity]]'\nname: '[[name]]'\nicon: '[[icon]]'\ndecimals: '[[decimals]]'\n- entity: weather.zoefdehaas\naspectratio: 1/1\nlayout:\nstyles:\ntoolsets:\nfilter: url(#nm-1)\ntoolsets:\n- toolset: sensor-history\ntemplate:\nname: toolset_sensor_history\nvariables: '[[variables]]'\nposition:\ncx: '[[cx]]'\ncy: '[[cy]]'\n</code></pre></p>","tags":["Examples"]},{"location":"examples/example-4/","title":"Example 4: More Environment sensor cards","text":"","tags":["Examples"]},{"location":"examples/example-4/#how-to","title":"How to","text":"<p>The lux card on the second row is available as tutorial #3.</p> <p>In this tutorial you learn how to recreate that specific card.</p>","tags":["Examples"]},{"location":"examples/example-4/#visualization","title":"Visualization","text":"<p>Once again a visualization of sensors values using two completely different card designs. The first row is a Neumorphic design, and the second implements a very simple and clean Flat design with a few colored blocks as the background of the card.</p>","tags":["Examples"]},{"location":"examples/example-4/#interactions","title":"Interactions","text":"<ul> <li>All tools support by default the \"more-info\" dialog once clicked.</li> </ul>","tags":["Examples"]},{"location":"examples/example-4/#used-home-assistant-integrations","title":"Used Home Assistant Integrations","text":"<ul> <li>Aqara Zigbee sensors with temperature, humidity and pressure data using zigbee2mqtt, ie the MQTT integration</li> </ul>","tags":["Examples"]},{"location":"examples/example-4/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"","tags":["Examples"]},{"location":"examples/example-4/#all-cards","title":"All cards","text":"<p> Required Home Assistant Integrations The visualization is build on <code>temperature</code>, <code>humidity</code> and <code>lux</code> entities. It does not depend on any specific integration.</p> <p> Required Home Assistant Entity Changes You can replace the existing <code>temperature</code>, <code>humidity</code> and <code>lux</code> entities with any sensor entity. </p>","tags":["Examples"]},{"location":"examples/example-4/#view-and-card-configuration","title":"View and Card Configuration","text":"","tags":["Examples"]},{"location":"examples/example-4/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake4.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code> <p>First row of cards</p> <p>The first row shows cards with a Neumorphic design with:</p> <ul> <li>Icon in the top-left corner</li> <li>Segmented Arc with humidity template colorstop and scale</li> <li>State with unit of measurement</li> <li>Name of the entity</li> <li>State history over the last 24 hours</li> </ul> <p>Second row of cards</p> <p>The first row shows cards with a simple Flat design with:</p> <ul> <li>4 rectangles forming the background of card</li> <li>State with unit of measurement</li> <li>A vertical line as a divider</li> <li>Icon of the entity</li> <li>Name of the entity</li> <li>State history over the last 24 hours</li> </ul>","tags":["Examples"]},{"location":"examples/example-4/#decluttering-templates","title":"Decluttering templates","text":"<p>The first row of cards uses a decluttering template...</p> <ul> <li>The <code>sak_arc180_sparklinebar24_template_tpl</code> is used for displaying these cards</li> </ul> From: view-sake4.yaml<pre><code>- type: horizontal-stack\ncards:\n- type: custom:decluttering-card\ntemplate: sak_arc180_sparklinebar24_template_tpl\nvariables:\n- entity: studym_iaq_humidity\n- name: 11Ta Study Back\n- decimals: 0\n- scale_min: 0\n- scale_max: 100\n- type: custom:decluttering-card\ntemplate: sak_arc180_sparklinebar24_template_tpl\nvariables:\n- entity: hall_gf_iaq_humidity\n- name: 11Tb Hall\n- decimals: 0\n- scale_min: 0\n- scale_max: 100\n- type: custom:decluttering-card\ntemplate: sak_arc180_sparklinebar24_template_tpl\nvariables:\n- entity: bedroom_iaq_humidity\n- name: 11Tc Bedroom\n- decimals: 0\n- scale_min: 0\n- scale_max: 100\n</code></pre>","tags":["Examples"]},{"location":"examples/example-4/#sak-templates","title":"SAK templates","text":"<p>The following templates are defined in the <code>/lovelace/sak_templates/sak-templates.yaml</code> file:</p> <ul> <li>The <code>toolset_arc180_sparklinebar24</code> is the template used for the first row of cards</li> </ul>","tags":["Examples"]},{"location":"examples/example-4/#remarks","title":"Remarks","text":"<p>None.</p> <p>\u2190 Internal References \u2192</p>","tags":["Examples"]},{"location":"examples/example-5/","title":"Example 5: Car dashboard alike cards","text":"","tags":["Examples"]},{"location":"examples/example-5/#visualization","title":"Visualization","text":"<p>This visualization is inspired by a car dashboard.</p> <p>The first uses a Flat design, the second a Neumorphic design. Both designs use the same tools, but look different.</p>","tags":["Examples"]},{"location":"examples/example-5/#interactions","title":"Interactions","text":"<ul> <li>All tools support by default the \"more-info\" dialog once clicked.</li> </ul>","tags":["Examples"]},{"location":"examples/example-5/#used-home-assistant-integrations","title":"Used Home Assistant Integrations","text":"<ul> <li>Met.no Weather integration</li> </ul>","tags":["Examples"]},{"location":"examples/example-5/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"","tags":["Examples"]},{"location":"examples/example-5/#required-home-assistant-integrations","title":"Required Home Assistant integrations","text":"","tags":["Examples"]},{"location":"examples/example-5/#both-cards","title":"Both cards","text":"<p> Required Home Assistant Integrations The visualization is build on the Met.no, so you need the Met.no Weather integration</p> <p>Other weather integrations won't work, as they create different states and attributes</p> <p> Required Home Assistant Entity Changes The <code>Met.no</code> integration creates the <code>weather.changeme</code> entity. Adapt the <code>changeme</code> part to your own installation!</p> <p> Alternative entities You can also replace the <code>humidity</code>, <code>temperature</code> and <code>pressure</code> weather entities with other <code>humidity</code>, <code>temperature</code> and <code>pressure</code> entities from other integrations. An Aqara Zigbee device could be used for instance as the source.</p>","tags":["Examples"]},{"location":"examples/example-5/#view-and-card-configuration","title":"View and Card Configuration","text":"<p>Both views use 3 <code>segmented arc</code>s with scale, an entity state and unit of measurement and icon.</p>","tags":["Examples"]},{"location":"examples/example-5/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake5.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code>","tags":["Examples"]},{"location":"examples/example-5/#decluttering-templates","title":"Decluttering templates","text":"<p>None used. All inline YAML!</p>","tags":["Examples"]},{"location":"examples/example-5/#sak-templates","title":"SAK templates","text":"<p>None used. All inline YAML!</p>","tags":["Examples"]},{"location":"examples/example-5/#remarks","title":"Remarks","text":"<p>None.</p>","tags":["Examples"]},{"location":"examples/example-6/","title":"Example 6: Weather on SVG background","text":"<p>:</p>","tags":["Examples"]},{"location":"examples/example-6/#visualization","title":"Visualization","text":"<p>There is also a variant with '-m3' in the filename. This one uses a Material 3 theme for its colors</p> <p>Let's do something different and use the weather for a nice view </p> <p>This view is made with the aid of Affinity Designer. The 'balls' background is created with this tool and exported as an SVG file. On top of those circles the weather and Airvisual data is displayed.</p>","tags":["Examples"]},{"location":"examples/example-6/#interactions","title":"Interactions","text":"<ul> <li>All tools support by default the \"more-info\" dialog once clicked.</li> </ul>","tags":["Examples"]},{"location":"examples/example-6/#used-home-assistant-integrations","title":"Used Home Assistant Integrations","text":"<ul> <li>Met.no Weather integration</li> <li>Airvisual integration</li> </ul>","tags":["Examples"]},{"location":"examples/example-6/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"<p>Card</p> <p> Required Home Assistant Integrations The visualization is build on the Met.no and Airvisual entities, so you need these integrations:</p> <ul> <li>Met.no Weather integration</li> <li>Airvisual integration</li> </ul> <p> Required Home Assistant Entity Changes</p> <p>The <code>Airvisual</code> entities should be the same for any installation, so no changes required on that part.</p> <p>The <code>Met.no</code> integration creates the <code>weather.changeme</code> entity. Adapt the <code>changeme</code> part to your own installation!</p> <p>Other weather integrations won't work, as they create different states and attributes</p>","tags":["Examples"]},{"location":"examples/example-6/#view-and-card-configuration","title":"View and Card Configuration","text":"<ul> <li>Background as external SVG, loaded with the <code>usersvg</code> tool</li> <li>Upper left the title</li> <li>The weather (temperature, humidity, pressure) in three circles.</li> <li>The weather type as a state dependent external, animated SVG</li> <li>Airvisual data showing the state dependent icon and the AQI value.</li> </ul>","tags":["Examples"]},{"location":"examples/example-6/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake6.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code>","tags":["Examples"]},{"location":"examples/example-6/#file-assets","title":"File assets","text":"<p>This view uses the following external file assets:</p> <ul> <li>The background is a separate SVG file located in <code>/local/images/backgrounds/balls-background-1.svg</code></li> <li>To display the weather type, you need the external animated SVG's which are located in the <code>/local/images/weather</code> folder</li> </ul>","tags":["Examples"]},{"location":"examples/example-6/#decluttering-templates","title":"Decluttering templates","text":"<p>None used.</p>","tags":["Examples"]},{"location":"examples/example-6/#sak-templates","title":"SAK templates","text":"<p>None used.</p>","tags":["Examples"]},{"location":"examples/example-6/#remarks","title":"Remarks","text":"<p>None.</p>","tags":["Examples"]},{"location":"examples/example-7/","title":"Example 7: Server statistics","text":"","tags":["Examples"]},{"location":"examples/example-7/#visualization","title":"Visualization","text":"<p>Visualization of the basic data of two servers. My basic NUC (J3455 CPU) running Home Assistant and another bunch of containers and a second server as a frontend for the ugly internet. This one is also running a bunch of docker containers.</p> <p>Both systems were 'loaded' before the screenshot was taken to show the different colorstops</p> <p>The default load of the NUC is around 3% and the frontend around 11%.</p>","tags":["Examples"]},{"location":"examples/example-7/#interactions","title":"Interactions","text":"<ul> <li>All tools support by default the \"more-info\" dialog once clicked.</li> </ul>","tags":["Examples"]},{"location":"examples/example-7/#used-home-assistant-integrations","title":"Used Home Assistant Integrations","text":"<ul> <li>The System Monitor integration</li> <li>The Glances integration</li> <li>The RESTful sensor integration to get extra sensors from Glances, as the default Glances integration does not give you all the 'load' sensors.</li> </ul> <p>Below the <code>sensor:</code> configuration for the System Monitor and extra Glances RESTful sensors:</p> <p>System Monitor sensors<pre><code># System Monitor\n# ==============\n# - https://www.home-assistant.io/integrations/systemmonitor/\n- platform: systemmonitor\nresources:\n- type: disk_use_percent\narg: /\n- type: disk_use\narg: /\n- type: disk_free\narg: /\n- type: memory_free\n- type: memory_use\n- type: memory_use_percent    - type: load_1m\n- type: load_5m\n- type: load_15m\n- type: processor_use\n- type: last_boot\n</code></pre> Extra Glances sensors<pre><code># REStful stuff, Glances for instance\n# ===================================\n# - https://www.home-assistant.io/integrations/rest/\n# - https://www.home-assistant.io/integrations/sensor.rest/\n#\n# Get Load sensors from Glances directly. The integration does not give them...\n- platform: rest\nresource: http://poseidon.srv.home:61208/api/3/load\nscan_interval: 60\nname: glances_poseidon_load\nvalue_template: \"{{ value_json}}\"\njson_attributes:\n- min1\n- min5\n- min15\n- cpucore\n\n- platform: template\nsensors:\nglances_poseidon_load_min1:\nvalue_template: \"{{ state_attr('sensor.glances_poseidon_load', 'min1') }}\"\nfriendly_name: \"Glances-Poseidon Load 1min\"\nunit_of_measurement: \"1m\"\nglances_poseidon_load_min5:\nvalue_template: \"{{ state_attr('sensor.glances_poseidon_load', 'min5') }}\"\nfriendly_name: \"Glances-Poseidon Load 5min\"\nunit_of_measurement: \"5m\"\nglances_poseidon_load_min15:\nvalue_template: \"{{ state_attr('sensor.glances_poseidon_load', 'min15') }}\"\nfriendly_name: \"Glances-Poseidon Load 15min\"\nunit_of_measurement: \"15m\"\n</code></pre></p> <p>The top card uses the system monitor integration, the bottom card the Glances and RESTful sensor integration</p>","tags":["Examples"]},{"location":"examples/example-7/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"","tags":["Examples"]},{"location":"examples/example-7/#the-hestia-server-card","title":"The Hestia server card","text":"<p> Required Home Assistant Integrations The visualization is build on the system monitor, so you need the The System Monitor integration</p> <p> Required Home Assistant Entity Changes The <code>System Monitor</code> entities should be the same for any installation, so no changes required on that part.</p>","tags":["Examples"]},{"location":"examples/example-7/#the-poseidon-server-card","title":"The Poseidon server card","text":"<p> Required Home Assistant Integrations</p> <ul> <li>The Glances integration</li> <li>The RESTful sensor integration to get extra sensors from Glances, as the default Glances integration does not give you all the 'load' sensors.</li> </ul> <p> Required Home Assistant Entity Changes The <code>Glances</code> integration creates environment dependent entities: the server name is usually added to the integration, and thus entity id's. My integration is called <code>Glances-Poseidon</code> and thus the entities for instance <code>sensor.glances_poseidon_cpu_load</code>. You have to change the entities to your own entity id's.</p> <p>If you have only 1 server, remove the second server...</p>","tags":["Examples"]},{"location":"examples/example-7/#view-and-card-configuration","title":"View and Card Configuration","text":"<ul> <li>The upper-left shows the DISC usage values as text in a rectangle and in a <code>segmented arc</code> for the percentage. The scale is green upto 70% and then changes to yellow, orange (80%) and red (90%).</li> <li>In the lower-left, the same for RAM usage.</li> <li>The central part shows the CPU usage</li> <li>And finally the three system load toolsets (1m, 5m and 15m) nicely wrapped alongside the CPU display.</li> </ul>","tags":["Examples"]},{"location":"examples/example-7/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake7.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code>","tags":["Examples"]},{"location":"examples/example-7/#decluttering-templates","title":"Decluttering templates","text":"<p>None.</p>","tags":["Examples"]},{"location":"examples/example-7/#sak-templates","title":"SAK templates","text":"<p>Re-use of toolsets and toolset scaling</p> From: view-sake7<pre><code>- toolset: memory\n# Use pre-defined template for this part.\n# Template has variables.\ntemplate:\nname: tools_segarc_icon_state\nvariables:\n- entity: 0\n- show_scale: false\nposition:\ncx: 72.5\ncy: 74\n# Scale to 80% of toolset template.\nscale: .8\n</code></pre>","tags":["Examples"]},{"location":"examples/example-7/#remarks","title":"Remarks","text":"<p>This view is a nice example of the use of toolset scaling!</p>","tags":["Examples"]},{"location":"examples/example-8/","title":"Example 8: Homekit alike cards","text":"","tags":["Examples"]},{"location":"examples/example-8/#visualization","title":"Visualization","text":"<p>Weather, Airvisual cards and one occupancy sensor card using Homekit alike cards with icon and card animations.</p> <p>Cards 2, 3 and 5 share the same design, the others are different</p>","tags":["Examples"]},{"location":"examples/example-8/#used-home-assistant-integrations","title":"Used Home Assistant Integrations","text":"<ul> <li>Met.no Weather integration</li> <li>Airvisual integration</li> <li>Aqara Occupancy sensor using zigbee2mqtt, ie the MQTT integration</li> </ul>","tags":["Examples"]},{"location":"examples/example-8/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"","tags":["Examples"]},{"location":"examples/example-8/#outside-environment-sensors","title":"Outside environment sensors","text":"<p> Required Home Assistant Integrations The visualization is build on the <code>Met.no</code> generated entities, so you need the Met.no Weather integration</p> <p> Required Home Assistant Entity Changes The <code>Met.no</code> integration creates the <code>weather.changeme</code> entity. Adapt the <code>changeme</code> part to your own installation!</p> <p>Other weather integrations won't work, as they create different states and attributes</p>","tags":["Examples"]},{"location":"examples/example-8/#airvisual-sensors","title":"Airvisual sensors","text":"<p> Required Home Assistant Integrations The only integration you need are the <code>Airvisual</code> entities, so you need the Airvisual integration</p>","tags":["Examples"]},{"location":"examples/example-8/#movementoccupancy-sensor","title":"Movement/occupancy sensor","text":"<p> Required Home Assistant Entity Changes Last but not least: an <code>occupancy</code> sensor is used. If you don't have any <code>occupancy</code> sensor, replace it with any on/off sensor and the card should at least work!</p>","tags":["Examples"]},{"location":"examples/example-8/#interactions","title":"Interactions","text":"<ul> <li>All tools support by default the \"more-info\" dialog once clicked.</li> </ul>","tags":["Examples"]},{"location":"examples/example-8/#view-and-card-configuration","title":"View and Card Configuration","text":"","tags":["Examples"]},{"location":"examples/example-8/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake8.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code> <p>The 1st card on the 2nd row shows the use of some of the built-in CSS animations...</p> <pre><code># Background used for animations &amp; state\n- type: rectex\nposition:\ncx: 50\ncy: 50\nwidth: 100\nheight: 100\nradius:\ntop: 2\nbottom: 2\nentity_index: 0\n\n# Let background go to white with 70% opacity when movement detected\n# Use animation to 'flash' the background for a few seconds to get\n# the attention of the user, if anyone is watching ;-)\nanimations:\n- state: 'on'\nstyles:\nrectex:\nfill: 'white'\nopacity: 0.7\nanimation: flash 2s ease-in-out both\n- state: 'off'\nstyles:\nrectex:\nopacity: 0\nfill: none\nstyles:\nrectex:\nopacity: 0\nfill: none\n\n- type: icon\nposition:\ncx: 22.5\ncy: 22.5\nalign: center\nicon_size: 30\nentity_index: 0\n# Define colors for the icon depending on the state\nanimations:\n- state: 'on'\nstyles:\nicon:\nfill: 'darkorange'\ncolor: 'darkorange'\nanimation: jello 2s ease-in-out both\n- state: 'off'\nstyles:\nicon:\nfill: var(--primary-text-color)\ncolor: var(--primary-text-color)\nstyles:\nicon:\nfill: var(--primary-text-color)\ncolor: var(--primary-text-color)\n</code></pre>","tags":["Examples"]},{"location":"examples/example-8/#decluttering-templates","title":"Decluttering templates","text":"<p>None.</p>","tags":["Examples"]},{"location":"examples/example-8/#sak-templates","title":"SAK templates","text":"<p>None.</p>","tags":["Examples"]},{"location":"examples/example-8/#remarks","title":"Remarks","text":"<p>Due to rendering differences for icons, Safari based systems show the icon animation, and other/Chrome based browsers not.</p> <p>This should be fixed in the future...</p>","tags":["Examples"]},{"location":"examples/example-9/","title":"Example 9: High Contrast","text":"<p>And a short GIF to give you an idea of the CSS animations:</p> <p>Actions:</p> <ul> <li>I moved </li> <li>I switched the \"Duo Rechts\" light to on.</li> <li>I changed the brightness using the slider of the bottom card. In this configuration, updating while dragging the slider is disabled, so you only see the other card changing the brightness if the slider of the bottom card is released!</li> <li>And finally, I switched the \"Duo Rechts\" light to off.</li> </ul> <p></p>","tags":["Examples"]},{"location":"examples/example-9/#visualization","title":"Visualization","text":"<p>This visualization shows some high-contrast examples. A lot of black and white with contrasting colors to show states!</p> <p>It uses indoor environment, occupancy, airvisual AQI data, and some square light cards with status, icon, history, segmented arc and map animations.</p>","tags":["Examples"]},{"location":"examples/example-9/#interactions","title":"Interactions","text":"<ul> <li>All tools support by default the \"more-info\" dialog once clicked.</li> <li>The lights can be switched on/off by clicking/tapping the rectangle area where the icon is positioned.</li> <li>Both lights only have a <code>tap_action</code> defined, so the sliders only update the brightness once released.</li> </ul>","tags":["Examples"]},{"location":"examples/example-9/#used-home-assistant-integrations","title":"Used Home Assistant Integrations","text":"<ul> <li>First row: Aqara temperature, humidity and pressure Zigbee sensors</li> <li>Second row: Aqara Occupancy Zigbee sensor</li> <li>Second row: Airvisual integration</li> <li>Second row: Ikea Tradfri Zigbee Lights</li> <li>Third row: Same as second row, but with different layout.</li> </ul> <p>I use zigbee2mqtt for the Zigbee sensors and lights. Zigbee2mqtt can be used either as docker container or Home Assistant Add-on combined with the MQTT integration</p>","tags":["Examples"]},{"location":"examples/example-9/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"<p>Except for the Air Visual integration, the others are generic temperature, humidity and pressure sensors, occupancy switch and light switches, so you can replace them with your own entities.</p>","tags":["Examples"]},{"location":"examples/example-9/#environment-sensors-first-row","title":"Environment sensors (First row)","text":"<p> Required Home Assistant Entity Changes Replace the sensor entities with your own entities. As long as the entities do not use an attribute for the value, the history tool will work. </p>","tags":["Examples"]},{"location":"examples/example-9/#movementoccupancy-sensor-second-third-row","title":"Movement/occupancy sensor (Second + Third row)","text":"<p> Required Home Assistant Entity Changes Replace the occupancy entity with your own entity. If you don't have a <code>presence</code> sensor, replace it with an on/off sensor and the card should at least work!</p>","tags":["Examples"]},{"location":"examples/example-9/#airvisual-second-third-row","title":"AirVisual (Second + Third row)","text":"<p> Required Home Assistant Integrations The only integration you need are the <code>Airvisual</code> entities, so you need the Airvisual integration</p> <p> Required Home Assistant Entity Changes The <code>Airvisual</code> entities should be the same for every installation, so no changes are needed on that part. </p>","tags":["Examples"]},{"location":"examples/example-9/#lights-second-third-row","title":"Lights (Second + Third row)","text":"<p> Required Home Assistant Entity Changes Replace the light entities with your light entities that have a <code>brightness</code> attribute.</p>","tags":["Examples"]},{"location":"examples/example-9/#view-and-card-configuration","title":"View and Card Configuration","text":"","tags":["Examples"]},{"location":"examples/example-9/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake9.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code>","tags":["Examples"]},{"location":"examples/example-9/#decluttering-templates","title":"Decluttering templates","text":"<p>None.</p>","tags":["Examples"]},{"location":"examples/example-9/#sak-templates","title":"SAK templates","text":"<p>None.</p>","tags":["Examples"]},{"location":"examples/example-9/#remarks","title":"Remarks","text":"<p>None.</p>","tags":["Examples"]},{"location":"examples/example-99/","title":"Example 99: Material 3 Theme converter and viewer","text":"<p>This view requires one of the Home Assistant Material 3 Themes</p> <p>The example uses the dynamic Material 3 D07, DarkOliveGreen theme.</p> <p> The pallette</p> <p> The surfaces</p> <p> The Light Mode</p> <p> The Dark Mode</p>","tags":["Examples"]},{"location":"examples/example-99/#visualization","title":"Visualization","text":"<p>This visualization shows the currently active Material 3 theme.</p> <p>It mimics the display created by the Figma Material 3 builder plugin.</p> <p>Check the Material 3 themes manual for more info.</p>","tags":["Examples"]},{"location":"examples/example-99/#how-to-make-it-work-in-your-own-installation","title":"How to make it work in your own installation","text":"","tags":["Examples"]},{"location":"examples/example-99/#in-general","title":"In general","text":"","tags":["Examples"]},{"location":"examples/example-99/#view-and-card-configuration","title":"View and Card Configuration","text":"","tags":["Examples"]},{"location":"examples/example-99/#lovelace-view","title":"Lovelace view","text":"file location included from <code>view-sake99-m3.yml</code> <code>/lovelace/views</code> <code>sak-examples-dashboard.yaml</code>","tags":["Examples"]},{"location":"examples/example-99/#decluttering-templates","title":"Decluttering templates","text":"<p>TBD</p>","tags":["Examples"]},{"location":"examples/example-99/#sak-templates","title":"SAK templates","text":"<p>TBD</p> name file <code>tbd</code> <code>tbd.yaml</code>","tags":["Examples"]},{"location":"examples/introduction/","title":"Examples Introduction","text":"","tags":["Examples"]},{"location":"examples/introduction/#introducing-12-examples","title":"Introducing 12 examples","text":"<p>I have placed twelve examples in their own Swiss Army Knife custom card Example view for easy reference. In most cases, the examples show more than one map or more than one visualization.</p> <p>Some use SAK templates, some use decluttering templates, some use both and some don't: they contain the entire configuration in the view itself.</p> <p>All examples except 11 and 12 use their own theme defined in the view-sake*.yaml. Themes are on Github.</p> <p>Aside from the box shading for the cards, themes also define some of the color schemes used by the cards.</p> <p>Other themes may display black colors where theme colors are used.</p> <p>Example 11 and 12 use a Home Assistant Material 3 theme</p> <p>Example 12 is used as the example view to create the Material 3 themes. Check the examples section.</p>","tags":["Examples"]},{"location":"examples/introduction/#real-world-examples-from-my-own-installation","title":"Real world examples from my own installation","text":"<p>All samples are actual screenshots of my iPhone, which are then added to an iPhone mockup in Affinity Designer, exported, and processed into an Instagram-compatible 1080x1080 pixel crop.</p> <p>Many examples use the Met.no weather and Airvisual integrations. Each example also describes what you need to change in order for the examples to work in your installation. The above integrations are necessary in most cases to make things work.</p> An overview of all the examples Example 1 - Airvisual and Weather forecast: Example 2 - Lights: Example 3 - Sensors: Example 4 - More sensors: Example 5 - Car dashboard alike: Example 6 - Weather on SVG background: Example 7 - Servers: Example 8 - Homekit alike: Example 9 - High Contrast: Example 10 - Colorful mix: Example 11 - Boiler and Electricity: Example 12 - Wide cards: And some gifs to show the CSS animations Example 2: Example 6: Example 9: Example 10:","tags":["Examples"]},{"location":"examples/introduction/#platforms-tested","title":"Platforms tested","text":"<p>I have tested SAK - and thus the examples - on the following platforms:</p> <ul> <li>Safari (mobile and desktop view) on iOS/iPadOS 14 &amp; 15, iPhone &amp; iPad</li> <li>Google Chrome &gt; 90.x on Windows 10, on my 10 year old Desktop  </li> </ul> <p>By testing Chrome, I assume I validated all the Chromium-based browsers (Chrome, Edge, Opera, Vivaldi, Brave, Blisk, etc). That should also cover Android devices using Chromium-based browsers which I could not test as I don't have any Android devices. A quick view on a friend's Samsung showed no problems, but that is no 100% guarantee of course.</p> <p>Due to the browser differences and long-standing bugs in Safari, some parts of SAK have different rendering paths for Safari and Chromium.</p> <p>One notable difference between the two is the SVG filter implementation of Safari. It works but takes a small performance hit compared to Chromium, which has a better and faster filter implementation. Safari users will therefore see a difference between a switch to a view with filters (like a Neumorphic design) and a Flat design: the latter is faster with the initial loading of the view.</p> <p>I update Home Assistant Container every few months, and try to keep up with changes in Home Assistant to adapt this card to these changes.</p>","tags":["Examples"]},{"location":"functional-cards/series1/functional-card-airvisual1-card/","title":"Functional Cards: AirVisual Sensor","text":"","tags":["Design","Functional Card","AirVisual Card"]},{"location":"functional-cards/series1/functional-card-airvisual1-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that displays data from AirVisual. Both the current data, as a 24 hour history is shown 6/1 Grid with 1 column SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Circle is animated, state dependent Icon Entity Icon. Name Name of Entity State Secondary Info of Entity Line Vertical line as separator Icon AirVisual state Icon. Animated, state dependent State AirVisual state value SegArc Segmented Arc showing the AirVisual state. The arc is configured as a very, very, very flat ellipse and using a tiny part of the ellipse to look like a line Line Vertical line as separator Text The \"Last 24 hours\" text Bar The 24 hour history","tags":["Design","Functional Card","AirVisual Card"]},{"location":"functional-cards/series1/functional-card-airvisual1-card/#integrations","title":"Integrations","text":"<p>You need the AirVisual integration: </p>","tags":["Design","Functional Card","AirVisual Card"]},{"location":"functional-cards/series1/functional-card-airvisual1-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","AirVisual Card"]},{"location":"functional-cards/series1/functional-card-airvisual1-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>The entities should be the same for every installation, so you can re-use the example below!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.u_s_air_quality_index\nname: 'AirVisual #1'\n- entity: sensor.u_s_air_pollution_level\n- entity: sensor.u_s_air_quality_index\nsecondary_info: last_changed\nformat: relative\nlayout:\ntemplate:\nname: sak_layout_fce_airvisual1\n</code></pre> Data Default Required Description entities List of three entities","tags":["Design","Functional Card","AirVisual Card"]},{"location":"functional-cards/series1/functional-card-airvisual1-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_airvisual1:\ntemplate:\ntype: layout\ndefaults: - var_entity_index: 0\nlayout:\naspectratio: 6/1                          # Card is 600x100 grid\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: line1\nposition:\ncx: 200\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 50\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n# ================================================================\n- toolset: line2\nposition:\ncx: 400\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 50\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 48\nstyles:\ncircle:\nfill: none\nstroke: var(--theme-sys-color-secondary)\nstroke-width: 3em\nopacity: 0.5\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 30\nentity_index: 0\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n\n- toolset: column-name\nposition:\ncx: 120\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: middle\nfont-size: 20em\nfont-weight: 700\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 80\nentity_index: 2\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 14em\nfont-weight: 500\nopacity: 0.7\n\n- toolset: column-state\nposition:\ncx: 300\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 25\ncy: 25\nalign: end\nicon_size: 30\nentity_index: 1\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 25\nentity_index: 0\nstyles:\nstate:\ntext-anchor: start\nfont-size: 25em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 70\nstart_angle: 190\nend_angle: 170\nwidth: 8\nradius_x: 405         # 20 degrees = 1/9 = 45*9 = 405\nradius_y: 1\nentity_index: 0\nscale:\nmin: 0\nmax: 300\nwidth: 6\noffset: 12\nshow:\nscale: true\nstyle: 'colorstops'\nsegments:\ncolorstops:\ngap: 0.1\ncolors:\n0: '#A8E05F'\n51: '#FDD74B'\n101: '#FE9B57'\n151: '#FE6A69'\n201: '#A97ABC'\n301: '#A87383'\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral5)\n\n- toolset: column-history\nposition:\ncx: 500\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: text\nposition:\norientation: vertical\ncx: 50\ncy: 20\ntext: \"Last 24 hours\"\nstyles:\ntext:\ntext-anchor: middle\nfont-size: 15em\nfont-weight: 700\n\n# ------------------------------------------------------------\n- type: bar\nid: 1\nentity_index: 0\nposition:\norientation: vertical\ncx: 50\ncy: 60\nwidth: 150\nheight: 40\nmargin: 1\nhours: 24\nbarhours: 1\nshow:\nstyle: 'colorstops'\ncolorstops:\nfill: true\ncolors:\n0: '#A8E05F'\n51: '#FDD74B'\n101: '#FE9B57'\n151: '#FE6A69'\n201: '#A97ABC'\n301: '#A87383'\nstyles:\nbar:\nstroke-linecap: square\n</code></pre>","tags":["Design","Functional Card","AirVisual Card"]},{"location":"functional-cards/series1/functional-card-airvisual2-card/","title":"Functional Cards: AirVisual Sensor #2","text":"","tags":["Design","Functional Card","AirVisual Card"]},{"location":"functional-cards/series1/functional-card-airvisual2-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> <p>This card is (again) based on the Sensor Card #2. But instead of an icon it shows an external SVG</p> Description Aspect Ratio Target Size A card that displays data from AirVisual. Both the current data, as a 24 hour history is shown 3/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent using the AirVisual colorstop UserSvg External SVG showing the AQI faces. Animated, state dependent SegArc Segmented Arc showing the current AQI state using the AirVisual colorstop State Value of entity Name Name of Entity Bar Shows the 24 hour history in the background","tags":["Design","Functional Card","AirVisual Card"]},{"location":"functional-cards/series1/functional-card-airvisual2-card/#integrations","title":"Integrations","text":"<p>You need the AirVisual integration: </p>","tags":["Design","Functional Card","AirVisual Card"]},{"location":"functional-cards/series1/functional-card-airvisual2-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","AirVisual Card"]},{"location":"functional-cards/series1/functional-card-airvisual2-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>The entities should be the same for every installation, so you can re-use the example below!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.u_s_air_quality_index\nname: 'AirVisual #2'\nlayout:\ntemplate:\nname: sak_layout_fce_airvisual2\n</code></pre> Data Default Required Description entities The air quality index entity","tags":["Design","Functional Card","AirVisual Card"]},{"location":"functional-cards/series1/functional-card-airvisual2-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_airvisual2:\ntemplate:\ntype: layout\ndefaults: - var_entity_index: 0\nlayout:\naspectratio: 3/1                          # Card is 300x100 grid\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 0\nshow:\nstyle: 'colorstops'\ncolorstops:\ntemplate:\nname: colorstops_airvisual\nvariables:\n- thegap: 2\nstyles:\ncircle:\nstroke: none\nfill: var(--theme-sys-elevation-surface-neutral4)\n\n- type: 'usersvg'\nid: 2\nentity_index: 0\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 100\nstyle: 'images'\nimages:\n- face1: /local/images/airvisual/ic-face-1.svg\n- face2: /local/images/airvisual/ic-face-2.svg\n- face3: /local/images/airvisual/ic-face-3.svg\n- face4: /local/images/airvisual/ic-face-4.svg\n- face5: /local/images/airvisual/ic-face-5.svg\n- face6: /local/images/airvisual/ic-face-6.svg\nanimations:\n- state: '50'\noperator: &lt;=\nimage: face1\n- state: '100'\noperator: &lt;=\nimage: face2\n- state: '150'\noperator: &lt;=\nimage: face3\n- state: '200'\noperator: &lt;=\nimage: face4\n- state: '300'\noperator: &lt;=\nimage: face5\n- state: '9999'\noperator: &lt;=\nimage: face6\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 25\nend_angle: 155\nwidth: 6\nradius: 59\nentity_index: 0\nscale:\nmin: 0\nmax: 300\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorstops'\nlastcolor: true\nsegments:\ncolorstops:\ntemplate:\nname: colorstops_airvisual\nvariables:\n- thegap: 2\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\n\n# ================================================================\n- toolset: column-bar\nposition:\ncx: 185                     # 300-70/2 + 70=185\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: bar\nid: 1\nentity_index: 0\nposition:\norientation: vertical\ncx: 50\ncy: 50\nwidth: 230              # 300-70=230\nheight: 100\nmargin: 1\nhours: 24\nbarhours: 1\nshow:\nstyle: 'colorstops'\ncolorstops:\ntemplate:\nname: colorstops_airvisual\nvariables:\n- thefill: true\nstyles:\nbar:\nstroke-linecap: square\nopacity: 0.25\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 26em\nfont-weight: 500\nopacity: 0.7\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 37\nentity_index: 0\nstyles:\nstate:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\n</code></pre>","tags":["Design","Functional Card","AirVisual Card"]},{"location":"functional-cards/series1/functional-card-battery-sensor2-card/","title":"Functional Cards: Battery Sensor Card","text":"","tags":["Design","Functional Card","Battery Level Card"]},{"location":"functional-cards/series1/functional-card-battery-sensor2-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> <p>This card is nothing more than a Sensor Card #2 with an adjusted colorstop!</p> Description Aspect Ratio Target Size An example battery sensor level card with segmented arc and history 4/1 Grid with 2 columns <p>For a description, check the sensor card!</p>","tags":["Design","Functional Card","Battery Level Card"]},{"location":"functional-cards/series1/functional-card-battery-sensor2-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.iphone_van_marco_battery_level\nname: 'Battery #2'\n- entity: sensor.iphone_van_marco_battery_level\nsecondary_info: last_changed\nformat: relative\nlayout:\ntemplate:\nname: sak_layout_fce_sensor2\nvariables:\n- sak_layout_sensor_name_above_state: false\n- sak_layout_sensor_colorstops_template: colorstops_battery_level\n- sak_layout_sensor_icon_style: colorstops\n- sak_layout_sensor_segarc_style: colorstops\n- sak_layout_sensor_segarc_scale_max: 100                ########################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.ipad_van_marco_battery_level\nname: 'Battery #2'\n- entity: sensor.ipad_van_marco_battery_level\nsecondary_info: last_changed\nformat: relative\nlayout:\ntemplate:\nname: sak_layout_fce_sensor2\nvariables:\n- sak_layout_sensor_name_above_state: false\n- sak_layout_sensor_colorstops_template: colorstops_battery_level\n- sak_layout_sensor_icon_style: colorstops\n- sak_layout_sensor_segarc_style: colorstops\n- sak_layout_sensor_segarc_scale_max: 100                </code></pre>","tags":["Design","Functional Card","Battery Level Card"]},{"location":"functional-cards/series1/functional-card-battery-sensor2-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3 Check the sensor layout card!</p>","tags":["Design","Functional Card","Battery Level Card"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert1-card/","title":"Functional Cards: Binary Sensor with Alert Card #1","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that shows the state of a binary sensor, including an icon as an alert. Nice for doors, windows and occupancy alerts. 3/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent Icon Entity Icon. Animated, state dependent Icon Alert Icon. Animated, state dependent. Only visible if state is <code>on</code> Name Name of Entity State Secondary Info Line Vertical line separator Icon Battery state as icon. Animated, state dependent SegArc Simple circle as segmented arc to show the battery level State Value of battery level Icon Linkquality icon SegArc Simple circle as segmented arc to show the linkquality value State Value of linkquality","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert1-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert1-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: binary_sensor.livingroom_movement_occupancy\nname: 'Bin Alert #1'\n# name: 'Movement'\n- entity: binary_sensor.livingroom_movement_occupancy\nsecondary_info: last_changed\nformat: relative\n- entity: sensor.livingroom_movement_battery\ndecimals: 0\n- entity: sensor.livingroom_movement_linkquality\ndecimals: 0\nlayout:\ntemplate:\nname: sak_layout_fce_binary_alert1\n</code></pre> Data Default Required Description entities The four required entities","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert1-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_binary_alert1:\ntemplate:\ntype: layout\ndefaults: - dummy: 0\nlayout:\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\ncircle:\nfill: var(--theme-sys-color-primary)\n# animation: flash 2s ease-in-out 5\n- state: 'off'\nstyles:\ncircle:\nfill: var(--theme-sys-elevation-surface-neutral4)\nstyles:\ncircle:\nstroke: none\n# transition: fill 1s ease\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 35\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\nicon:\n# animation: spin 3s linear infinite\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nopacity: 0.9\nstyles:\nicon:\nfill: var(--primary-background-color)\nopacity: 0.9\n# transition: fill 1s ease\n\n# ================================================================\n- toolset: alert-icon\nposition:\ncx: 40\ncy: 18\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 13\nentity_index: 0                 # Use state from 0\nanimations:\n- state: 'on'                 # If ON\nstyles:\ncircle:\nfill: var(--primary-background-color)\n- state: 'off'                # If OFF\nstyles:\ncircle:\ndisplay: none           # Hide icon\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 25\nentity_index: 0                 # Use state from 0\nicon: mdi:alert-circle          # Use alert circle icon\nanimations:\n- state: 'on'                 # If ON\nstyles:\nicon:\nfill: var(--brand-google-red, red) # Set icon to red color\n- state: 'off'                # If OFF\nstyles:\nicon:\ndisplay: none           # Hide icon\nstyles:\nicon:\nfill: grey                  # Default grey color\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 120\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: middle\nfont-size: 25em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 80\nentity_index: 1\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 14em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: line1\nposition:\ncx: 200                           # On 1/3 of card width\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 50\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n# ================================================================\n- toolset: column-battery\nposition:\ncx: 250\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 30\ncy: 30\nalign: right\nicon_size: 25\nentity_index: 2\nstyles:\nicon:\nfill: var(--theme-sys-color-tertiary)\nopacity: 0.8\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 70\ncy: 30\nentity_index: 2\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 15em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 70\ncy: 30\nstart_angle: 0\nend_angle: 360\nwidth: 3\nradius: 18\nentity_index: 2\nscale:\nmin: 0\nmax: 100\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-palette-tertiary45)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n\n# ================================================================\n- toolset: column-linkquality\nposition:\ncx: 250\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 30\ncy: 70\nalign: right\nicon_size: 25\nentity_index: 3\nstyles:\nicon:\nfill: var(--theme-sys-color-tertiary)\nopacity: 0.8\n\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 70\ncy: 70\nentity_index: 3\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 15em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 70\ncy: 70\nstart_angle: 0\nend_angle: 360\nwidth: 3\nradius: 18\nentity_index: 3\nscale:\nmin: 0\nmax: 100\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-palette-tertiary45)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n</code></pre>","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert2-card/","title":"Functional Cards: Binary Sensor with Alert Card","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that shows the state of a binary sensor, including an icon as an alert. Nice for doors, windows and occupancy alerts. 4/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent Icon Entity Icon. Animated, state dependent Icon Alert Icon. Animated, state dependent. Only visible if state is <code>on</code> Name Name of Entity State Secondary Info Icon Stretched battery Icon in the upper left corner of the card. Animated, state dependent. Becomes yellow or blinking red if battery almost dead. Entity can be disabled","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert2-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert2-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: binary_sensor.livingroom_movement_occupancy\nname: 'Bin Alert #2'\n# name: 'Livingroom #2'\n- entity: binary_sensor.livingroom_movement_occupancy\nsecondary_info: last_changed\nformat: relative\n- entity: sensor.livingroom_movement_battery\ndecimals: 0\nlayout:\ntemplate:\nname: sak_layout_fce_binary_alert2\n</code></pre> Data Default Required Description entities The three required entities sak_layout_binary_alert_battery_entity_disabled false If no battery entity available for this sensor. Disable this tool","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert2-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_binary_alert2:\ntemplate:\ntype: layout\ndefaults: - sak_layout_binary_alert_battery_entity_disabled: false\nlayout:\naspectratio: 4/1\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\ncircle:\nfill: var(--theme-sys-color-secondary-container)\n- state: 'off'\nstyles:\ncircle:\nfill: var(--theme-sys-elevation-surface-neutral2)\nstyles:\ncircle:\nstroke: none\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-elevation-surface-neutral10)\nstyles:\nicon:\nopacity: 0.9\n\n# ================================================================\n- toolset: alert-icon\nposition:\ncx: 40\ncy: 18\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 15\nentity_index: 0                 # Use state from 0\nanimations:\n- state: 'on'                 # If ON\nstyles:\ncircle:\nfill: var(--primary-background-color)\n- state: 'off'                # If OFF\nstyles:\ncircle:\ndisplay: none           # Hide icon\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 28\nentity_index: 0                 # Use state from 0\nicon: mdi:alert-circle          # Use alert circle icon\nanimations:\n- state: 'on'                 # If ON\nstyles:\nicon:\nfill: var(--brand-google-red, red) # Set icon to red color\n- state: 'off'                # If OFF\nstyles:\nicon:\ndisplay: none           # Hide icon\nstyles:\nicon:\nfill: grey                  # Default grey color\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70                # Left part = 75, so 75+(300-75)/2\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 37\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 1\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: start\nfont-size: 26em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: battery-icon\ndisabled: '[[sak_layout_binary_alert_battery_entity_disabled]]'\nposition:\ncx: 370\ncy: 15\nscale_y: 1.5                      # Make battery taller\nrotate: 90\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: end\nicon_size: 30\nentity_index: 2\nanimations:\n- state: '20'             # Battery almost dead!\noperator: &lt;=\nstyles:\nicon:\nanimation: blinkingText 2s ease-in-out both infinite\nfill: var(--brand-google-red)\n- state: '30'             # Battery warning!\noperator: &lt;=\nstyles:\nicon:\nfill: var(--brand-google-yellow)\nstyles:\nicon:\nfill: var(--theme-sys-color-tertiary)\nopacity: 0.5\n</code></pre>","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert3-card/","title":"Functional Cards: Binary Sensor with Alert Card #3","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that shows the state of a binary sensor, including an icon as an alert. Nice for doors, windows and occupancy alerts. 3/1 Grid with 3 columns SAK Tool Used for Badge Background of card. Left part is animated, state dependent Icon Entity Icon. Animated, state dependent. Red if active Name Name of Entity State Secondary Info of Entity Icon Normal battery Icon in the upper left corner of the card. Animated, state dependent. Becomes yellow or blinking red if battery almost dead. Entity can be disabled","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert3-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert3-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: binary_sensor.livingroom_movement_occupancy\nname: 'Bin Alert #3'\n- entity: binary_sensor.livingroom_movement_occupancy\nsecondary_info: last_changed\nformat: relative\n- entity: sensor.livingroom_movement_battery\ndecimals: 0\nlayout:\ntemplate:\nname: sak_layout_fce_binary_alert3\n</code></pre> Data Default Required Description entities The three required entities sak_layout_binary_alert_battery_entity_disabled false If no battery entity available for this sensor. Disable this tool","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert3-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_binary_alert3:\ntemplate:\ntype: layout\ndefaults: - sak_layout_binary_alert_battery_entity_disabled: false\nlayout:\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: badge-background\nposition:\ncx: 150                           # Center at middle of card\ncy: 50                            # Center at middle of card\ntools:\n- type: badge\nposition:\ncx: 50\ncy: 50\nheight: 100                   # Badge covers the full..\nwidth: 300                    # ...size of the card\nratio: 25\nradius: 5\ndivider: 20\nentity_index: 0                 # Uses entity 0\nanimations:\n- state: 'on'                 # Animate for state ON\nstyles:\nleft:\nfill: var(--theme-sys-color-primary)\n- state: 'off'                # Animate for state OFF\nstyles:\nleft:\nfill: var(--theme-sys-elevation-surface-neutral4)\nstyles:\nleft:\nfill: grey\nright:\nfill: none                 # Show background of card\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 37.5\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 0\nanimations:\n- state: 'on'\nicon: 'mdi:fire-alert'\nstyles:\nicon:\nfill: var(--brand-google-red)\nopacity: 1\n- state: 'off'\nicon: 'mdi:fire'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nopacity: 0.9\nstyles:\nicon:\nfill: var(--primary-background-color)\nopacity: 0.9\n\n# ================================================================\n- toolset: battery-icon\ndisabled: '[[sak_layout_binary_alert_battery_entity_disabled]]'\nposition:\ncx: 280\ncy: 15\nrotate: 90\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 30\nentity_index: 2\nanimations:\n- state: '20'             # Battery almost dead!\noperator: &lt;=\nstyles:\nicon:\nanimation: blinkingText 2s ease-in-out both infinite\nfill: var(--brand-google-red)\n- state: '30'             # Battery warning!\noperator: &lt;=\nstyles:\nicon:\nfill: var(--brand-google-yellow)\nstyles:\nicon:\nfill: var(--theme-sys-color-tertiary)\nopacity: 0.5\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 100               # Left part = 75, so 75+(300-75)/2\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 40\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 1\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: start\nfont-size: 16em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert4-card/","title":"Functional Cards: Binary Sensor with Alert Card #4","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that shows the state of a binary sensor, including an icon as an alert. Nice for doors, windows and occupancy alerts. 3/1 Grid with 3 columns SAK Tool Used for Badge Background of card. Left part is animated, state dependent Icon Entity Icon. Animated, state dependent. Red if active Icon Alert Icon. Animated, state dependent. Only visible if state is <code>on</code> Name Name of Entity Icon Stretched battery Icon in the upper left corner of the card. Animated, state dependent. Becomes yellow or blinking red if battery almost dead. Entity can be disabled","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert4-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert4-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: binary_sensor.livingroom_movement_occupancy\nname: 'Bin Alert #4'\n- entity: binary_sensor.livingroom_movement_occupancy\nsecondary_info: last_changed\nformat: relative\n- entity: sensor.livingroom_movement_battery\ndecimals: 0\nlayout:\ntemplate:\nname: sak_layout_fce_binary_alert4\n</code></pre> Data Default Required Description entities The three required entities sak_layout_binary_alert_battery_entity_disabled false If no battery entity available for this sensor. Disable this tool","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor-alert4-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_binary_alert4:\ntemplate:\ntype: layout\ndefaults: - sak_layout_binary_alert_battery_entity_disabled: false\nlayout:\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: badge-background\nposition:\ncx: 150\ncy: 50\ntools:\n- type: badge\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 300\nratio: 25\nradius: 5\ndivider: 20\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\nleft:\nfill: var(--theme-sys-color-primary)\n- state: 'off'\nstyles:\nleft:\nfill: var(--theme-sys-elevation-surface-neutral4)\nstyles:\nleft:\nfill: grey\nright:\nfill: none\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 37.5\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\nicon:\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nstyles:\nicon:\nfill: var(--primary-background-color)\nopacity: 0.9\n\n# ================================================================\n- toolset: alert-icon\nposition:\ncx: 75\ncy: 18\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 13\nentity_index: 0                 # Use state from 0\nanimations:\n- state: 'on'                 # If ON\nstyles:\ncircle:\nfill: var(--primary-background-color)\n- state: 'off'                # If OFF\nstyles:\ncircle:\ndisplay: none           # Hide icon\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 25\nentity_index: 0                 # Use state from 0\nicon: mdi:alert-circle          # Use alert circle icon\nanimations:\n- state: 'on'                 # If ON\nstyles:\nicon:\nfill: var(--brand-google-red, red) # Set icon to red color\n- state: 'off'                # If OFF\nstyles:\nicon:\ndisplay: none           # Hide icon\nstyles:\nicon:\nfill: grey                  # Default grey color\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 100\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n\n# ================================================================\n- toolset: battery-icon\ndisabled: '[[sak_layout_binary_alert_battery_entity_disabled]]'\nposition:\ncx: 270\ncy: 15\nscale_y: 1.5                      # Make battery taller\nrotate: 90\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 30\nentity_index: 2\nanimations:\n- state: '20'             # Battery almost dead!\noperator: &lt;=\nstyles:\nicon:\nanimation: blinkingText 2s ease-in-out both infinite\nfill: var(--brand-google-red)\n- state: '30'             # Battery warning!\noperator: &lt;=\nstyles:\nicon:\nfill: var(--brand-google-yellow)\nstyles:\nicon:\nfill: var(--theme-sys-color-tertiary)\nopacity: 0.5\n</code></pre>","tags":["Design","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series1/functional-card-binary-sensor1-card/","title":"Functional Cards: Binary Sensor Card","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that shows the state of a binary sensor 4/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent Icon Entity Icon. Animated, state dependent. Can spin if configured Name Name of Entity State Value of Entity","tags":["Design","Functional Card","Binary Card"]},{"location":"functional-cards/series1/functional-card-binary-sensor1-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Binary Card"]},{"location":"functional-cards/series1/functional-card-binary-sensor1-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'Pump Pool'\nicon: mdi:pump\nlayout:\ntemplate:\nname: sak_layout_fce_binary\n\n########################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'Pump Pool'\nicon: mdi:pump\nlayout:\ntemplate:\nname: sak_layout_fce_binary\nvariables:\n- sak_layout_binary_icon_spin: true\n</code></pre> Data Default Required Description entities The single entity on the card sak_layout_binary_icon_spin false Spin the icon or not in state 'on'","tags":["Design","Functional Card","Binary Card"]},{"location":"functional-cards/series1/functional-card-binary-sensor1-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_binary:\ntemplate:\ntype: layout\ndefaults: - sak_layout_binary_icon_spin: false\nlayout:\naspectratio: 4/1\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\ncircle:\nfill: var(--theme-sys-color-primary)\n- state: 'off'\nstyles:\ncircle:\nfill: var(--theme-sys-elevation-surface-neutral4)\nstyles:\ncircle:\nstroke: none\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 0\n# Define template variable for this icon tool, so it can be\n# processed by a piece of JavaScript ;-)\n# The template engine will replace the variable!\nvariables:\nsak_layout_binary_icon_spin : '[[sak_layout_binary_icon_spin]]'\nanimations:\n- state: 'on'\nstyles:\nicon:\n# Use template variable as the source to spin or not.\n# the config JavaScript parameter is this tools config...\nanimation: &gt;\n[[[ if (tool_config.variables.sak_layout_binary_icon_spin) return \"spin 3s linear infinite\";\nreturn \"\";\n]]]\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nstyles:\nicon:\nopacity: 0.9\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70                # Left part = 75, so 75+(300-75)/2\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 37\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: start\nfont-size: 26em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Binary Card"]},{"location":"functional-cards/series1/functional-card-environment-card/","title":"Functional Cards: Environment Sensor","text":"","tags":["Design","Functional Card","Environment Card"]},{"location":"functional-cards/series1/functional-card-environment-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that displays some environment entities, including battery and link quality 6/1 Grid with 1 column SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Icon Entity Icon. Name Name of Entity State Value of secondary info Line Vertical Line as separator First Temperature with icon, state and segemented arc Second Humidity with icon, state and segemented arc Third Pressure with icon, state and segemented arc Battery Battery with icon, state and segmented arc Linkquality Linkquality with icon, state and segmented arc","tags":["Design","Functional Card","Environment Card"]},{"location":"functional-cards/series1/functional-card-environment-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Environment Card"]},{"location":"functional-cards/series1/functional-card-environment-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.bathroom_2f_iaq_temperature\nname: 'Environment'\nicon: mdi:home-thermometer-outline\ndecimals: 1\n- entity: sensor.bathroom_2f_iaq_humidity\ndecimals: 0\n- entity: sensor.bathroom_2f_iaq_pressure\ndecimals: 0\n- entity: sensor.bathroom_2f_iaq_battery\ndecimals: 0\n- entity: sensor.bathroom_2f_iaq_linkquality\ndecimals: 0\n- entity: sensor.bathroom_2f_iaq_temperature\nsecondary_info: last_changed\nformat: relative\nlayout:\ntemplate:\nname: sak_layout_fce_environment\n</code></pre> Data Default Required Description entities The six required entities","tags":["Design","Functional Card","Environment Card"]},{"location":"functional-cards/series1/functional-card-environment-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_environment:\ntemplate:\ntype: layout\ndefaults: - var_entity_index: 0\nlayout:\naspectratio: 6/1                          # Card is 600x100 grid\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: line1\nposition:\ncx: 200\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 50\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n# ================================================================\n- toolset: line2\nposition:\ncx: 500\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 50\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 48\nstyles:\ncircle:\nfill: none\nstroke: var(--theme-sys-color-secondary)\nstroke-width: 3em\nopacity: 0.5\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 30\nentity_index: 0\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n\n- toolset: column-name\nposition:\ncx: 120\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: middle\nfont-size: 25em\nfont-weight: 700\nopacity: 1\n\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 80\nentity_index: 5\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 14em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: column-temperature\nposition:\ncx: 260\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 30\nalign: center\nicon_size: 25\nentity_index: 5\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 55\nentity_index: 0\nshow:\nuom: bottom\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 20em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 0\nend_angle: 360\nwidth: 6\nradius: 40\nentity_index: 0\nscale:\nmin: 15\nmax: 25\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-palette-primary50)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n\n# ================================================================\n- toolset: column-humidity\nposition:\ncx: 355\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 30\nalign: center\nicon_size: 25\nentity_index: 1\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 55\nentity_index: 1\nshow:\nuom: bottom\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 20em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 0\nend_angle: 360\nwidth: 6\nradius: 40\nentity_index: 1\nscale:\nmin: 0\nmax: 100\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-palette-primary45)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n\n# ================================================================\n- toolset: column-pressure\nposition:\ncx: 450\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 30\nalign: center\nicon_size: 25\nentity_index: 2\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 55\nentity_index: 2\nshow:\nuom: bottom\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 20em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 0\nend_angle: 360\nwidth: 6\nradius: 40\nentity_index: 2\nscale:\nmin: 950\nmax: 1050\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-palette-primary40)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n\n# ================================================================\n- toolset: column-battery\nposition:\ncx: 540\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 30\ncy: 30\nalign: right\nicon_size: 25\nentity_index: 3\nstyles:\nicon:\nfill: var(--theme-sys-color-tertiary)\nopacity: 0.8\n\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 70\ncy: 30\nentity_index: 3\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 15em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 70\ncy: 30\nstart_angle: 0\nend_angle: 360\nwidth: 3\nradius: 18\nentity_index: 3\nscale:\nmin: 0\nmax: 100\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-palette-tertiary45)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n\n# ================================================================\n- toolset: column-linkquality\nposition:\ncx: 540\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 30\ncy: 70\nalign: right\nicon_size: 25\nentity_index: 4\nstyles:\nicon:\nfill: var(--theme-sys-color-tertiary)\nopacity: 0.8\n\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 70\ncy: 70\nentity_index: 4\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 15em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 70\ncy: 70\nstart_angle: 0\nend_angle: 360\nwidth: 3\nradius: 18\nentity_index: 4\nscale:\nmin: 0\nmax: 100\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-palette-tertiary45)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n</code></pre>","tags":["Design","Functional Card","Environment Card"]},{"location":"functional-cards/series1/functional-card-header-card/","title":"Functional Cards: Header Card","text":"","tags":["Design","Functional Card","Header Card"]},{"location":"functional-cards/series1/functional-card-header-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that displays header text 1/0.05 Grid with 1 column SAK Tool Used for Text The content of the header","tags":["Design","Functional Card","Header Card"]},{"location":"functional-cards/series1/functional-card-header-card/#interaction","title":"Interaction","text":"Part Description N/A No interaction available","tags":["Design","Functional Card","Header Card"]},{"location":"functional-cards/series1/functional-card-header-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <pre><code>- type: custom:swiss-army-knife-card\ndisable_card: true\nlayout:\ntemplate:\nname: sak_layout_fce_header\nvariables:\n- sak_layout_header_content: 'Livingroom'\n- sak_layout_header_font_color: var(--secondary-text-color)\n- sak_layout_header_font_size: 5em\n\n########################################################################\n\n- type: custom:swiss-army-knife-card\ndisable_card: true\nlayout:\ntemplate:\nname: sak_layout_fce_header\nvariables:\n- sak_layout_header_content: 'All those beautiful lights'\n- sak_layout_header_font_color: var(--theme-sys-color-tertiary)\n- sak_layout_header_font_size: 3em    - sak_layout_header_font_text_transform: none\n</code></pre> Data Default Required Description entities The single entity on the card sak_layout_header_content 'Your Header comes here' The header content sak_layout_header_font_color var(--primary-text-color) The text color sak_layout_header_font_size 3.5em Font size in em preferably sak_layout_header_font_transform uppercase The text transform. Can be <code>capitalize</code>, <code>uppercase</code>, <code>lowercase</code>, <code>none</code>, <code>full-width</code>and <code>full-size-kana</code> sak_layout_header_aspectratio 1/0.05 The aspectratio of the card. Depending on the selected font size, this one must be altered sak_layout_header_position_cy 2.5 The y position of the header text. Default is centered for default aspectratio. You can change this if required","tags":["Design","Functional Card","Header Card"]},{"location":"functional-cards/series1/functional-card-header-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_header:\ntemplate:\ntype: layout\ndefaults: - sak_layout_header_content: 'Your Header comes here'\n- sak_layout_header_font_color: var(--primary-text-color)\n- sak_layout_header_font_size: 3.5em\n- sak_layout_header_font_text_transform: uppercase\n- sak_layout_header_aspectratio: 1/0.05\n- sak_layout_header_position_cy: '2.5'\n\nlayout:\naspectratio: '[[sak_layout_header_aspectratio]]'\ntoolsets:\n# ==============================================================================\n- toolset: header\nposition:\ncx: 2.5\ncy: '[[sak_layout_header_position_cy]]'\ntools:\n- type: text\nposition:\ncx: 50\ncy: 50\ntext: '[[sak_layout_header_content]]'\nstyles:\ntext:\nfill: '[[sak_layout_header_font_color]]'\nletter-spacing: 0.1em\ntext-transform: '[[sak_layout_header_font_text_transform]]'\ntext-anchor: start\nfont-size: '[[sak_layout_header_font_size]]'\n</code></pre>","tags":["Design","Functional Card","Header Card"]},{"location":"functional-cards/series1/functional-card-input-boolean-card/","title":"Functional Cards: Input Boolean Card","text":"","tags":["Design","Functional Card","Input Boolean Card"]},{"location":"functional-cards/series1/functional-card-input-boolean-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that can toggle an input_boolean, just like toggling a switch or a light 4/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent Icon Entity Icon. Animated, state dependent Switch Switch to indicate and control the state. Animated, state dependent Name Name of Entity State Value of entity","tags":["Design","Functional Card","Input Boolean Card"]},{"location":"functional-cards/series1/functional-card-input-boolean-card/#interaction","title":"Interaction","text":"Part Description Left Circle Toggles the on/off state of the power outlet Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Input Boolean Card"]},{"location":"functional-cards/series1/functional-card-input-boolean-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: input_boolean.pump_enabled\nname: 'Input Boolean'\nlayout:\ntemplate:\nname: sak_layout_fce_input_boolean\n</code></pre> Data Default Required Description entities The input boolean entity","tags":["Design","Functional Card","Input Boolean Card"]},{"location":"functional-cards/series1/functional-card-input-boolean-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_input_boolean:\ntemplate:\ntype: layout\ndefaults: - dummy: 0\nlayout:\naspectratio: 4/1\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\ncircle:\nfill: var(--theme-sys-color-primary)\n- state: 'off'\nstyles:\ncircle:                     # Use as filled tonal button (m3)\nfill: var(--theme-sys-color-secondary-container)\nstyles:\ncircle:\nstroke: none\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 45\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\nicon:\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nstyles:\nicon:\nopacity: 0.9\npointer-events: none\n\n# ================================================================\n- toolset: switch\nposition:\ncx: 25                           # On 1/3 of card width\ncy: 75\nscale: 1.8\ntools:\n# ------------------------------------------------------------\n- type: switch\nposition:\ncx: 50\ncy: 50\norientation: 'horizontal'\ntrack:\nwidth: 15\nheight: 5\nradius: 2.5\nthumb:\nwidth: 3\nheight: 3\nradius: 2.5\noffset: 4.5\nentity_index: 0\nstyles:\ntrack:\n--switch-checked-track-color: var(--primary-background-color)\n--switch-unchecked-track-color: var(--theme-sys-color-secondary)\n# --switch-checked-button-color: \npointer-events: none\nthumb:\n--thumb-stroke: 'var(--primary-background-color)'\npointer-events: none\n# ================================================================\n- toolset: tap-area\nposition:\ncx: 25                              # tap area for toggle\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: rectangle\nposition:\ncx: 50\ncy: 50\nwidth: 50\nheight: 100\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: input_boolean.toggle\nstyles:\nrectangle:\nstroke: none\nfill: rgba(0,0,0,0)\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70                # Left part = 75, so 75+(300-75)/2\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 37\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: start\nfont-size: 26em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Input Boolean Card"]},{"location":"functional-cards/series1/functional-card-light-card/","title":"Functional Cards: Light Card","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> <p>This light card and the light card with slider are kept almost identical</p> <p>This means you can mix lights with and without brightness slider, as their size is the same.</p> Description Aspect Ratio Target Size A card that can control a light 4/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent Icon Entity Icon. Animated, state dependent Switch The Switch to toggle the light Name Name of Entity State Value of Entity","tags":["Design","Functional Card","Light Card"]},{"location":"functional-cards/series1/functional-card-light-card/#interaction","title":"Interaction","text":"Part Description Left part Toggles the light once tapped Other parts All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Light Card"]},{"location":"functional-cards/series1/functional-card-light-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.1st_floor_hall_light\nname: 'Light'\nicon: mdi:dome-light\nlayout:\ntemplate:\nname: sak_layout_fce_light\n</code></pre> Data Default Required Description entities The single entity on the card sak_layout_light_toggle_service true The actual service to call to toggle the light. If you have a switch to control the light, the <code>light.toggle</code> service won't work and you have to replace this with <code>switch.toggle</code>","tags":["Design","Functional Card","Light Card"]},{"location":"functional-cards/series1/functional-card-light-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_light:\ntemplate:\ntype: layout\ndefaults: - sak_layout_light_toggle_service: light.toggle\nlayout:\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 0\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\ncircle:\nfill: var(--theme-sys-color-primary)\n- state: 'off'\nstyles:\ncircle:\nfill: var(--theme-sys-color-secondary-container)\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.toggle\nstyles:\ncircle:\nfill: var(--theme-sys-color-secondary-container)\nstroke: var(--theme-sys-color-secondary)\nstroke-width: 0em\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 75\ncy: 50\nalign: center\nicon_size: 30\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\nicon:\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\npointer-events: none\n\n# ================================================================\n- toolset: switch\nposition:\ncx: 25                           # On 1/3 of card width\ncy: 75\nscale: 1.8\ntools:\n# ------------------------------------------------------------\n- type: switch\nposition:\ncx: 50\ncy: 50\norientation: 'horizontal'\ntrack:\nwidth: 15\nheight: 5\nradius: 2.5\nthumb:\nwidth: 3\nheight: 3\nradius: 2.5\noffset: 4.5\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: '[[sak_layout_light_toggle_service]]'\nstyles:\ntrack:\n--switch-checked-track-color: var(--primary-background-color)\n--switch-unchecked-track-color: var(--theme-sys-color-secondary)\n# --switch-checked-button-color: \nthumb:\n--thumb-stroke: 'var(--primary-background-color)'\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 30\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 25em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: start\nfont-size: 20em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Light Card"]},{"location":"functional-cards/series1/functional-card-light-slider-card/","title":"Functional Cards: Light Switch with slider Card","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that can control a light and includes a slider for brightness percentage 3/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent Icon Entity Icon. Animated, state dependent Switch The Switch to toggle the light Name Name of Entity State Brightness Attribute (from slider) Slider Slider to control the brightness of the light","tags":["Design","Functional Card","Light Card"]},{"location":"functional-cards/series1/functional-card-light-slider-card/#interaction","title":"Interaction","text":"Part Description Left part Toggles the light once tapped Slider Sets the brightness of the light Other parts All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Light Card"]},{"location":"functional-cards/series1/functional-card-light-slider-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'Light /w Slider'\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit_of_measurement: \"%\"\n- entity: light.livingroom_light_duo_right_light\nsecondary_info: last_changed\nformat: relative\nlayout:\ntemplate:\nname: sak_layout_fce_light_with_slider\n</code></pre> Data Default Required Description entities The single entity on the card sak_layout_light_toggle_service true The actual service to call to toggle the light. If you have a switch to control the light, the <code>light.toggle</code> service won't work and you have to replace this with <code>switch.toggle</code>","tags":["Design","Functional Card","Light Card"]},{"location":"functional-cards/series1/functional-card-light-slider-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_light_with_slider:\ntemplate:\ntype: layout\ndefaults: - sak_layout_light_toggle_service: light.toggle\nlayout:\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 0\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\ncircle:\nfill: var(--theme-sys-color-primary)\n# animation: flash 2s ease-in-out 5\n- state: 'off'\nstyles:\ncircle:\nfill: var(--theme-sys-color-secondary-container)\n# Remove user actions part to just display the state\n# or disable pointer-events via a class or style\n# Using a class enables the use of variables that can\n# disable pointer-events to none!\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.toggle\nstyles:\ncircle:\nfill: var(--theme-sys-color-secondary-container)\nstroke: var(--theme-sys-color-secondary)\nstroke-width: 0em\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 25\nend_angle: 155\nwidth: 6\nradius: 59\nentity_index: 1\nscale:\nmin: 0\nmax: 100\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nderived_entity:\ninput : '[[[ return state ]]]'\nstate: &gt;\n[[[\nif (typeof(entity) === 'undefined') return;\nif (typeof(state) === 'undefined') return;\n\nvar bri = Math.round(state / 2.55);\nreturn (bri ? bri : '0');\n]]]\nunit: &gt;\n[[[\nif (typeof(state) === 'undefined') return undefined;\nreturn '%';\n]]]\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- 'var(--primary-text-color)'\nanimation:\nduration: 5\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\n\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 75\ncy: 50\nalign: center\nicon_size: 30\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\nicon:\n# animation: spin 3s linear infinite\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\n# fill: var(--theme-sys-color-on-secondary-container)\nfill: var(--theme-sys-color-secondary)\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n# opacity: 0.7\npointer-events: none\n\n# ================================================================\n- toolset: switch\nposition:\ncx: 25                           # On 1/3 of card width\ncy: 75\nscale: 1.8\ntools:\n# ------------------------------------------------------------\n- type: switch\nposition:\ncx: 50\ncy: 50\norientation: 'horizontal'\ntrack:\nwidth: 15\nheight: 5\nradius: 2.5\nthumb:\nwidth: 3\nheight: 3\nradius: 2.5\noffset: 4.5\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: '[[sak_layout_light_toggle_service]]'\nstyles:\ntrack:\n--switch-checked-track-color: var(--primary-background-color)\n--switch-unchecked-track-color: var(--theme-sys-color-secondary)\n# --switch-checked-button-color: \nthumb:\n--thumb-stroke: 'var(--primary-background-color)'\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 80\ncy: 25\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 25em\nfont-weight: 700\nopacity: 1\n\n# ================================================================\n- toolset: slider\nposition:\ncx: 180\ncy: 80\ntools:\n# ------------------------------------------------------------\n- type: slider\nposition:\ncx: 50\ncy: 50\norientation: horizontal\ncapture:\nwidth: 200\nheight: 35\nactive:\n# width: 200\nheight: 30\nradius: 5\ntrack:\nwidth: 200\nheight: 30\nradius: 5\nthumb:\nwidth: 30\nheight: 30\nradius: 5\nlabel:\n# placement can be none, thumb, position (cx,cy)\nplacement: position\ncx: -50\ncy: 20\nentity_index: 1\n# Does this work??\nanimations:\n# - state: &gt;\n# [[[\n# if (typeof(state) === 'undefined') return state;\n# return 'no-match';\n# ]]]\n- state: 'undefined'\noperator: '=='\nstyles:\nthumb:\n# animation: spin 3s linear infinite\n# fill: var(--primary-background-color)\nfill: var(--theme-sys-color-secondary-container)\n# - state: '50'\n# operator: '&lt;='\n# styles:\n# track:\n# # fill: var(--theme-sys-color-on-secondary-container)\n# fill: var(--theme-sys-color-secondary)\n- state: 'undefined'\noperator: '!='\nstyles:\ntrack:\ndummy: 1\nderived_entity:\ninput : '[[[ return state ]]]'\nstate: &gt;\n[[[\nif (typeof(entity) === 'undefined') return;\nif (typeof(state) === 'undefined') return;\n\nvar bri = Math.round(state / 2.55);\nreturn (bri ? bri : '0');\n]]]\nunit: &gt;\n[[[\nif (typeof(state) === 'undefined') return undefined;\nreturn '%';\n]]]\nshow:\n# uom: none\nactive: true\nuser_actions:\ndrag_action:\nupdate_interval: 200          # Update every 200msec\nhaptic: selection\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\nscale:\nmin: 1\nmax: 100\nstep: 1\nstyles:\nlabel:\ntext-anchor: start\nfont-size: 20em\nfont-weight: 500\npointer-events: auto\nuom:\nfont-weight: 600\ncapture:\npointer-events: all\ntouch-action: none\nactive:\n# fill: url(#sak-light-brightness-gradient--orange) #white\nfill: var(--theme-sys-elevation-surface-neutral10)\nfill: var(--theme-sys-color-secondary)\nfill: var(--theme-sys-color-primary)\nfill-opacity: 0.3\npointer-events: none\ntrack:\n# fill: url(#sak-light-brightness-gradient)\nfill: var(--theme-sys-elevation-surface-neutral4)\nfill-opacity: 1\nstroke-width: 0.2em\nstroke: var(--theme-sys-elevation-surface-neutral10)\npointer-events: none\nthumb:\n# stroke-width: 1.2em\n# stroke: var(--primary-background-color)\n# stroke-opacity: 1\n# fill: var(--primary-text-color)\nfill: var(--theme-sys-color-primary)\nfill-opacity: 1\npointer-events: none\ntransition: all .5s ease\n</code></pre>","tags":["Design","Functional Card","Light Card"]},{"location":"functional-cards/series1/functional-card-navigate-card/","title":"Functional Cards: Navigate Card","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> <p>Its a card, but it just demonstrates how to use the <code>navigate</code> user action on a tool</p> Description Aspect Ratio Target Size A card that shows an icon and text, and has a <code>navigate</code> user action. 3/1 Grid with 3 columns SAK Tool Used for Icon Configured Icon (variable) Text Navigation text (variable) RectEx A rectangle covering the whole card to act as a button to handle the navigation action","tags":["Design","Functional Card","Navigate"]},{"location":"functional-cards/series1/functional-card-navigate-card/#interaction","title":"Interaction","text":"Part Description Card This card navigates to the configured view","tags":["Design","Functional Card","Navigate"]},{"location":"functional-cards/series1/functional-card-navigate-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nlayout:\ntemplate:\nname: sak_layout_fce_navigate\nvariables:\n- sak_layout_navigate_icon: 'mdi:arrow-right-bold-circle'\n- sak_layout_navigate_text: 'Some View'\n- sak_layout_navigate_path: 'tut-03-p1'\n</code></pre> Data Default Required Description sak_layout_navigate_icon mdi:arrow-right-bold-circle The used icon on the card sak_layout_navigate_text The text displayd on the card sak_layout_navigate_path The path name of the view you want to navigate to","tags":["Design","Functional Card","Navigate"]},{"location":"functional-cards/series1/functional-card-navigate-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_navigate:\ntemplate:\ntype: layout\ndefaults: - sak_layout_navigate_icon: mdi:arrow-right-bold-circle\n- sak_layout_navigate_text: 'Navigate'\n- sak_layout_navigate_path: 'Unknown'\nlayout:\nstyles:\ncard:\nborder-radius: 25em\nbackground: var(--theme-sys-color-secondary-container)\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 50\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 50\nicon: '[[sak_layout_navigate_icon]]'\nstyles:\nicon:\nfill: var(--secondary-text-color)\nopacity: 0.9\n\n# ================================================================\n- toolset: button-text\nposition:\ncx: 175\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: text\nposition:\ncx: 50\ncy: 50\ntext: '[[sak_layout_navigate_text]]'\nstyles:\ntext:\ntext-anchor: middle\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n\n# ================================================================\n- toolset: button-cover\nposition:\ncx: 150\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: rectex\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 300\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: navigate\nnavigation_path: '[[sak_layout_navigate_path]]'\nstyles:\nrectex:\nfill: rgba(0,0,0,0)\n</code></pre>","tags":["Design","Functional Card","Navigate"]},{"location":"functional-cards/series1/functional-card-person-card/","title":"Functional Cards: Person Card","text":"","tags":["Design","Functional Card","Person Card"]},{"location":"functional-cards/series1/functional-card-person-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> <p>This card shows you some possibilities to apply JavaScript to the animations section</p> <p>The card seems like a standard, simple card, but isn't due to some Home Assistant functionalities and the possibilities of using either an icon or an entity picture for the person.</p> <p>The use of JavaScript to fetch the zone's Icon, to do some state dependent color changes and taking care of the \"use entity_picture yes/no\" setting are nice examples of the possibilities that JavaScript adds to tools. It are just a few lines, but very powerful!</p> <p>It also takes care of fetching the icon of additional zones (ie not the home zone).</p> Description Aspect Ratio Target Size A card that shows in which zone a person is, or if in no known zone as away / not home. 4/1 Grid with 2 columns SAK Tool Used for Icon Background Icon (only in first screenshot)  Circle The half circle, as the left part of the circle is cutoff by the card Icon Entity Icon. Animated, state dependent and only visible if no entity_picture should be displayed UserSvg Shows the Entity Picture. Only visible if entity_picture should be displayed Icon Zone Icon, ie where is the person according to the zone configuration. Animated, state dependent Name Name of Entity State State of entity","tags":["Design","Functional Card","Person Card"]},{"location":"functional-cards/series1/functional-card-person-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Person Card"]},{"location":"functional-cards/series1/functional-card-person-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Using the default mode: an icon for the person entity: <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: person.marco\nname: 'Person'\nicon: mdi:face-man\nlayout:\ntemplate:\nname: sak_layout_fce_person\nvariables:\n- sak_layout_fce_person_zone_entities:\n- zone.the_gym\n- zone.marco_work\n- zone.marco_parents\n- zone.zoo\n</code></pre> Using an <code>entity_picture</code> for the person entity. Picture can be defined here, or (default) the <code>entity_picture</code> defined for the person is used: <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: person.tha_washer\nname: 'Tha Washer'\nicon: mdi:face-man\nentity_picture: \"/local/images/tha-washer.jpg\"\nlayout:\ntemplate:\nname: sak_layout_fce_person\nvariables:\n- sak_layout_fce_person_use_entity_picture: true\n- sak_layout_fce_person_zone_entities:\n- zone.the_gym\n- zone.marco_work\n- zone.marco_parents\n- zone.zoo\n</code></pre></p> Data Default Required Description entities The person entity sak_layout_fce_person_zone_entities The list of zone entities for this person to be displayed. There is no limit, it is really a list which is used when the person is not at home! sak_layout_fce_person_use_entity_picture false If set to true, an entity picture is displayed instead of the persons icon. Default the picture configured for the person is used, but can be overridden by specifying an entity_picture in the entity configuration in the view","tags":["Design","Functional Card","Person Card"]},{"location":"functional-cards/series1/functional-card-person-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_person:\ntemplate:\ntype: layout\ndefaults: - sak_layout_fce_person_use_entity_picture: false\nlayout:\naspectratio: 4/1\ntoolsets:\n# ================================================================\n# Extra background icon. Just for fun and filling some space\n- toolset: background-icon\nposition:\ncx: 350\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 100\nicon: mdi:map-marker-radius-outline\nstyles:\nicon:\nfill: var(--theme-sys-elevation-surface-neutral2)\n\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nstyles:\ncircle:\nstroke: var(--theme-sys-color-secondary)\nstroke-width: 3em\nopacity: 0.5\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 0\nvariables:\nsak_layout_fce_person_use_entity_picture: '[[sak_layout_fce_person_use_entity_picture]]'\nanimations:\n# Return current state, so always a match!\n- state: '[[[ return state; ]]]'\nstyles:\nicon:\n# Set fill depending on being at home!\nfill: &gt;\n[[[ if (['home', 'not_home'].includes(state)) return 'var(--theme-sys-color-primary)';\nreturn 'var(--theme-sys-color-tertiary)';\n]]]\n# Hide icon if using entity_picture!\ndisplay: &gt;\n[[[ if (tool_config.variables.sak_layout_fce_person_use_entity_picture) return 'none';\nreturn 'initial';\n]]]\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nopacity: 0.9\n\n# ------------------------------------------------------------\n- type: usersvg\nposition:\ncx: 50\ncy: 50\nheight: 45\nwidth: 45\nentity_index: 0\nvariables:\nsak_layout_fce_person_use_entity_picture: '[[sak_layout_fce_person_use_entity_picture]]'\nclip_path:\nposition:\ncx: 50\ncy: 50\nheight: 40            # Slightly crop image (from 45-&gt;40)\nwidth: 40\nradius:\nall: 20             # Radius 20 results in full circle\nstyle: 'images'\nimages:                   # Fetch entity_picture from config or entity itself\n- default: &gt;\n[[[\nif (tool_config.variables.sak_layout_fce_person_use_entity_picture) {\nreturn (entity_config?.entity_picture ||\nentity.attributes?.entity_picture || 'none');\n} else {\nreturn 'none';\n}\n]]]\nanimations:\n# Return current state, so always a match!\n- state: '[[[ return state; ]]]'\nimage: default\nstyles:\nicon:\n# Hide usersvg tool if using icon!\ndisplay: &gt;\n[[[ if (!tool_config.variables.sak_layout_fce_person_use_entity_picture) return 'none';\nreturn 'initial';\n]]]\n\n# ================================================================\n- toolset: zone-icon\nposition:\ncx: 40\ncy: 18\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 14\nentity_index: 0\nanimations:\n# Return current state, so always a match!\n- state: '[[[ return state; ]]]'\nstyles:\ncircle:\n# Set fill depending on being at home or some unwanted state!\nfill: &gt;\n[[[ if (state == 'home') return 'var(--theme-sys-color-primary)';\nif (state == 'not_home') return 'var(--brand-google-red)';\nif (['unavailable', 'unknown'].includes(state)) return 'black';\nreturn 'var(--theme-sys-color-tertiary)';\n]]]\nstyles:\ncircle:\nfill: var(--brand-google-red)\nstroke: var(--primary-background-color)\nstroke-width: 2em\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 18\nentity_index: 0\nvariables:\nzone_ids: '[[sak_layout_fce_person_zone_entities]]'\nanimations:\n# Return current state, so always a match!\n- state: '[[[ return state; ]]]'\n# Fetch icon of zone. If no match on zone, the state 'not_home' is given.\n# Check that state, and return the 'not home' icon in that case!\nicon: &gt;\n[[[ if (state == 'not_home') return 'mdi:home-off-outline';\nif (state == 'home') return states['zone.home'].attributes.icon;\n// For not home, we get the friendly name as input. Must find that one to retrieve\n// the zone's id...\n\nfor (var i=0; i&lt;tool_config.variables.zone_ids.length; i++) {\nvar zone = states[tool_config.variables.zone_ids[i]];\nif (zone &amp;&amp; zone.attributes.friendly_name == state) {\nreturn states[zone.entity_id].attributes.icon;\n}\n}\nreturn 'mdi:map-marker-question';\n]]]\nstyles:\nicon:\nfill: var(--primary-background-color)\nstyles:\nicon:\nfill: var(--primary-background-color)\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 37\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: start\nfont-size: 26em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Person Card"]},{"location":"functional-cards/series1/functional-card-power-outlet1-card/","title":"Functional Cards: Power Outlet Card #1","text":"","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet1-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that controls the on/off state of a power outlet, but also displays the power value. Both using a segmented arc and as state. 3/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent Icon Entity Icon. Animated, state dependent Name Name of Entity State Secondary Info of entity Line Vertical line separator SegArc Half segmented arc showing the sensors state with 4 colors State Entity State Switch Switch to indicate and control the state. Animated, state dependent","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet1-card/#interaction","title":"Interaction","text":"Part Description Switch Toggles the power switch Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet1-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.washingmachine_energy_power\nname: 'PwrOutl #1'\n- entity: sensor.washingmachine_energy_power\nsecondary_info: last_changed\nformat: relative\n- entity: switch.washingmachine_energy\nname: 'Air'\nlayout:\ntemplate:\nname: sak_layout_fce_power_outlet1\nvariables:\n- sak_layout_power_outlet_segarc_scale_max_watt: 200\n</code></pre> Data Default Required Description entities The single entity on the card sak_layout_power_outlet_segarc_scale_max_watt 200 The max value of the scale","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet1-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>  sak_layout_fce_power_outlet1:\ntemplate:\ntype: layout\ndefaults: - sak_layout_power_outlet_segarc_scale_max_watt: 200\nlayout:\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 48\nstyles:\ncircle:\nfill: none\nstroke: var(--theme-sys-color-secondary)\nstroke-width: 3em\nopacity: 0.5\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 30\nentity_index: 0\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 120\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: middle\nfont-size: 25em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 80\nentity_index: 1\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 14em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: line1\nposition:\ncx: 200                           # On 1/3 of card width\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 50\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n# ================================================================\n- toolset: column-power\nposition:\ncx: 250\ncy: 50\ntools:\n# ------------------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 20em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n\n# ------------------------------------------------------------------------\n- type: 'segarc'\nposition:\ncx: 50\ncy: 50\nstart_angle: -90                            # Arc clockwise from\nend_angle: 90                               # -90 to 90 degrees\nwidth: 6\nradius: 40                                # Radius on 100x100 grid\nentity_index: 0\nscale:\nmin: 0\nmax: '[[sak_layout_power_outlet_segarc_scale_max_watt]]'\nwidth: 6\noffset: 12\nshow:\nscale: false                              # Disable scale of segarc\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1                                  # Gap between segments\ncolors:\n- var(--theme-sys-palette-primary50)  # Use 4 system palette\n- var(--theme-sys-palette-primary45)  # colors that adhere\n- var(--theme-sys-palette-primary40)  # to light and dark\n- var(--theme-sys-palette-primary35)  # theme modes!\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n\n# ================================================================\n- toolset: switch\nposition:\ncx: 250                           # On 1/3 of card width\ncy: 80\nscale: 3\ntools:\n# ------------------------------------------------------------\n- type: switch\nposition:\ncx: 50\ncy: 50\nentity_index: 2\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: switch.toggle\n</code></pre>","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet2-card/","title":"Functional Cards: Power Outlet Card #2","text":"","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet2-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that controls the on/off state of a power outlet, but also displays the power value. Both using a segmented arc and as state. 3/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent Icon Entity Icon. Animated, state dependent Switch Switch to indicate and control the state. Animated, state dependent Name Name of Entity State Secondary Info of entity Line Vertical line separator SegArc Segmented arc showing the sensors state with a single color Icon Entity Icon State Entity State","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet2-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet2-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.kitchen_group_energy_power\nname: 'PwrOutl #2'\n- entity: sensor.kitchen_group_energy_power\nsecondary_info: last_changed\nformat: relative\n- entity: switch.washingmachine_energy\nname: 'Air #2'\nlayout:\ntemplate:\nname: sak_layout_fce_power_outlet2\nvariables:\n- sak_layout_power_outlet_segarc_scale_max_watt: 200\n</code></pre> Data Default Required Description entities The single entity on the card sak_layout_power_outlet_segarc_scale_max_watt 200 The max value of the scale","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet2-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_power_outlet2:\ntemplate:\ntype: layout\ndefaults: - sak_layout_power_outlet_segarc_scale_max_watt: 200\nlayout:\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 0\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 2\nanimations:\n- state: 'on'\nstyles:\ncircle:\nfill: var(--theme-sys-color-primary)\n# animation: flash 2s ease-in-out 5\n- state: 'off'\nstyles:\ncircle:\nfill: var(--theme-sys-color-secondary-container)\n# Remove user actions part to just display the state\n# or disable pointer-events via a class or style\n# Using a class enables the use of variables that can\n# disable pointer-events to none!\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: switch.toggle\nstyles:\ncircle:\nfill: var(--theme-sys-color-secondary-container)\nstroke: var(--theme-sys-color-secondary)\nstroke-width: 0em\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 75\ncy: 50\nalign: center\nicon_size: 30\nentity_index: 2\nanimations:\n- state: 'on'\nstyles:\nicon:\n# animation: spin 3s linear infinite\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\n# fill: var(--theme-sys-color-on-secondary-container)\nfill: var(--theme-sys-color-secondary)\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n# opacity: 0.7\npointer-events: none\n\n# ================================================================\n- toolset: switch\nposition:\ncx: 25                           # On 1/3 of card width\ncy: 75\nscale: 2\ntools:\n# ------------------------------------------------------------\n- type: switch\nposition:\ncx: 50\ncy: 50\norientation: 'horizontal'\ntrack:\nwidth: 15\nheight: 5\nradius: 2.5\nthumb:\nwidth: 3\nheight: 3\nradius: 2.5\noffset: 4.5\nentity_index: 2\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: switch.toggle\nstyles:\ntrack:\n--switch-checked-track-color: var(--primary-background-color)\n--switch-unchecked-track-color: var(--theme-sys-color-secondary)\n# --switch-checked-button-color: \nthumb:\n--thumb-stroke: 'var(--primary-background-color)'\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 120\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: middle\nfont-size: 25em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 80\nentity_index: 1\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 14em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: line1\nposition:\ncx: 200                           # On 1/3 of card width\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 50\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n# ================================================================\n- toolset: column-load\ntemplate:\nname: toolset_tutorial_02_part1\nvariables:\n- var_entity_index: 0\n- var_toolset_position_cx: 250\n- var_segarc_scale_max: '[[sak_layout_power_outlet_segarc_scale_max_watt]]'\n</code></pre>","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet3-card/","title":"Functional Cards: Power Outlet Card #3","text":"","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet3-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that displays the on/off state of a power outlet, but also displays the power value. Both using a segmented arc and as state. 4/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent Icon Entity Icon. Animated, state dependent SegArc Minimalistic implementation of segmented arc showing the sensors state with a single color Name Name of Entity State Value of entity","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet3-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet3-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'PwrOutl #3'\n- entity: switch.washingmachine_energy\nname: 'Kitchen Switch'\n- entity: sensor.washingmachine_energy_power  # Just for the demo!!!!\nname: 'Kitchen Switch #2'\nlayout:\ntemplate:\nname: sak_layout_fce_power_outlet3\nvariables:\n- sak_layout_power_outlet_segarc_scale_max_watt: 200\n</code></pre> Data Default Required Description entities The single entity on the card sak_layout_power_outlet_segarc_scale_max_watt 200 The max value of the scale","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet3-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_power_outlet3:\ntemplate:\ntype: layout\ndefaults: - sak_layout_power_outlet_segarc_scale_max_watt: 200\nlayout:\naspectratio: 4/1\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 1\nanimations:\n- state: 'on'\nstyles:\ncircle:\nfill: var(--theme-sys-color-primary)\n- state: 'off'\nstyles:\ncircle:\nfill: var(--theme-sys-elevation-surface-neutral4)\nstyles:\ncircle:\nstroke: none\nfill: var(--theme-sys-elevation-surface-neutral4)\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 25\nend_angle: 155\nwidth: 4\nradius: 58\nentity_index: 2\nscale:\nmin: 0\nmax: '[[sak_layout_power_outlet_segarc_scale_max_watt]]'\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-color-secondary)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-color-secondary)\nopacity: 0.5\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 1\nanimations:\n- state: 'on'\nstyles:\nicon:\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nopacity: 0.9\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70                # Left part = 75, so 75+(300-75)/2\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 37\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 2\nstyles:\nstate:\ntext-anchor: start\nfont-size: 26em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet4-card/","title":"Functional Cards: Power Outlet Card #4","text":"","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet4-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that controls the on/off state of a power outlet, but also displays the power value. Both using a segmented arc and as state.The 24 hour history is shown in the background 4/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent Icon Entity Icon. Animated, state dependent Switch Switch to indicate and control the state. Animated, state dependent SegArc Minimalistic implementation of segmented arc showing the sensors state with a single color Name Name of Entity State Value of entity Bar Shows the 24 hour history in the background","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet4-card/#interaction","title":"Interaction","text":"Part Description Left Circle Toggles the on/off state of the power outlet Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet4-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.washingmachine_energy_power\nname: 'PwrOutl #4'\n- entity: switch.washingmachine_energy\nname: 'Kitchen Switch #2'\nlayout:\ntemplate:\nname: sak_layout_fce_power_outlet4\nvariables:\n- sak_layout_power_outlet_segarc_scale_max_watt: 200\n</code></pre> Data Default Required Description entities The single entity on the card sak_layout_power_outlet_segarc_scale_max_watt 200 The max value of the scale","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-power-outlet4-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_power_outlet4:\ntemplate:\ntype: layout\ndefaults: - sak_layout_power_outlet_segarc_scale_max_watt: 200\nlayout:\naspectratio: 4/1\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 1\nanimations:\n- state: 'on'\nstyles:\ncircle:\nfill: var(--theme-sys-color-primary)\n- state: 'off'\nstyles:\ncircle:\nfill: var(--theme-sys-color-secondary-container)\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: switch.toggle\nstyles:\ncircle:\nstroke: none\nfill: var(--theme-sys-elevation-surface-neutral4)\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 25\nend_angle: 155\nwidth: 4\nradius: 58\nentity_index: 0\nscale:\nmin: 0\nmax: '[[sak_layout_power_outlet_segarc_scale_max_watt]]'\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-color-secondary)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-color-secondary)\nopacity: 0.5\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 45\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 1\nanimations:\n- state: 'on'\nstyles:\nicon:\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\npointer-events: none\n\n# ================================================================\n- toolset: switch\nposition:\ncx: 25                           # On 1/3 of card width\ncy: 75\nscale: 1.8\ntools:\n# ------------------------------------------------------------\n- type: switch\nposition:\ncx: 50\ncy: 50\norientation: 'horizontal'\ntrack:\nwidth: 15\nheight: 5\nradius: 2.5\nthumb:\nwidth: 3\nheight: 3\nradius: 2.5\noffset: 4.5\nentity_index: 1\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: switch.toggle\nstyles:\ntrack:\n--switch-checked-track-color: var(--primary-background-color)\n--switch-unchecked-track-color: var(--theme-sys-color-secondary)\n# --switch-checked-button-color: \nthumb:\n--thumb-stroke: 'var(--primary-background-color)'\n\n\n# ================================================================\n- toolset: column-bar\nposition:\ncx: 235                     # 400-70/2 + 70=235\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: bar\nid: 1\nentity_index: 0\nposition:\norientation: vertical\ncx: 50\ncy: 50\nwidth: 330              # 400-70=330\nheight: 100\nmargin: 1\nhours: 24\nbarhours: 1\nshow:\nstyle: 'minmaxgradient'\nminmaxgradient:\nfill: true\ncolors:\nmin: var(--theme-sys-palette-secondary85)\nmax: var(--theme-sys-palette-secondary65)\nstyles:\nbar:\nstroke-linecap: square\nopacity: 0.25\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70                # Left part = 75, so 75+(300-75)/2\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 37\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\ntext-anchor: start\nfont-size: 26em\nfont-weight: 700\nopacity: 0.8\n</code></pre>","tags":["Design","Functional Card","Power Outlet Card"]},{"location":"functional-cards/series1/functional-card-scene-card/","title":"Functional Cards: Call Scene/Script Card","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> <p>Its a card, but it just demonstrates how to use the <code>scene</code> user action on a tool</p> Description Aspect Ratio Target Size A card that shows an icon and text, and has a <code>scene</code> user action. 3/1 Grid with 3 columns SAK Tool Used for Icon Some fixed Icon Text Scene text RectEx A rectangle covering the whole card to act as a button to handle the activate scene action","tags":["Design","Functional Card","Scene/Script Card"]},{"location":"functional-cards/series1/functional-card-scene-card/#interaction","title":"Interaction","text":"Part Description Card This card activates the scene for you","tags":["Design","Functional Card","Scene/Script Card"]},{"location":"functional-cards/series1/functional-card-scene-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nlayout:\ntemplate:\nname: sak_layout_fce_scene\nvariables:\n- sak_layout_scene_icon: mdi:script\n- sak_layout_scene_text: 'Scene'\n- sak_layout_scene_id: 'scene.unknown'\n- sak_layout_scene_transition: 2.5\n</code></pre> Data Default Required Description sak_layout_scene_icon mdi:script The used icon on the card sak_layout_scene_text The text displayed on the card sak_layout_scene_id The entity id of the scene that should be called sak_layout_scene_transition 2.5 The scene transition time in seconds","tags":["Design","Functional Card","Scene/Script Card"]},{"location":"functional-cards/series1/functional-card-scene-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_scene:\ntemplate:\ntype: layout\ndefaults: - sak_layout_scene_icon: mdi:script\n- sak_layout_scene_text: 'Scene'\n- sak_layout_scene_id: 'scene.unknown'\n- sak_layout_scene_transition: 2.5\nlayout:\nstyles:\ncard:\nborder-radius: 25em\nbackground: var(--theme-sys-color-secondary-container)\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 50\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 50\nicon: '[[sak_layout_scene_icon]]'\nstyles:\nicon:\nfill: var(--secondary-text-color)\nopacity: 0.9\n\n# ================================================================\n- toolset: button-text\nposition:\ncx: 175\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: text\nposition:\ncx: 50\ncy: 50\ntext: '[[sak_layout_scene_text]]'\nstyles:\ntext:\ntext-anchor: middle\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n\n# ================================================================\n- toolset: button-cover\nposition:\ncx: 150\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: rectex\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 300\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: navigate\nservice: scene.turn_on\nservice_data:\nentity_id: '[[sak_layout_scene_id]]'\ntransition: '[[sak_layout_scene_transition]]'\nstyles:\nrectex:\nfill: rgba(0,0,0,0)\n</code></pre>","tags":["Design","Functional Card","Scene/Script Card"]},{"location":"functional-cards/series1/functional-card-sensor1-card/","title":"Functional Cards: Sensor Card #1","text":"","tags":["Design","Functional Card","Sensor Card"]},{"location":"functional-cards/series1/functional-card-sensor1-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> <p>You see different variations of the same card. These are controlled by variable settings</p> Description Aspect Ratio Target Size A card that displays a sensor value. Both using a segmented arc and as state 4/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Configurable colorstop Icon Entity Icon. Configurable colorstop SegArc Minimalistic implementation of segmented arc showing the sensors state. Configurable colorstop Name / State Name and Value of Entity for setting name above state = true State / Name Value and Name of Entity for setting name above state = false State Secondary Info of entity Bar 24 hour history, if history enabled through variable","tags":["Design","Functional Card","Sensor Card"]},{"location":"functional-cards/series1/functional-card-sensor1-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Sensor Card"]},{"location":"functional-cards/series1/functional-card-sensor1-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'Sensor #1-1'\nlayout:\ntemplate:\nname: sak_layout_fce_sensor1\nvariables:\n- sak_layout_sensor_history_disabled: true\n- sak_layout_sensor_scale_max: 2\n\n########################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'Sensor #1-2'\nlayout:\ntemplate:\nname: sak_layout_fce_sensor1\nvariables:\n- sak_layout_sensor_name_above_state: false\n- sak_layout_sensor_scale_max: 2\n</code></pre> Data Default Required Description entities The single entity on the card sak_layout_sensor_name_above_state true Determines order of these two: name/state or state/name. Note that both versions are defined. The setting only disables one of them and enables the other! sak_layout_sensor_history_disabled false Disable history tool sak_layout_sensor_colorstops_template colorstops_energy_2kw Specify the colorstop template if you specified <code>colorstops</code> for one of the tools sak_layout_sensor_scale_max 2 Scale max must align to given colorstop and/or sensor range! sak_layout_sensor_circle_style default Can be either <code>default</code>, or <code>colorstops</code> sak_layout_sensor_icon_style default Can be either <code>default</code>, or <code>colorstops</code> sak_layout_sensor_segarc_style colorlist Can be either <code>colorlist</code>, or <code>colorstops</code>","tags":["Design","Functional Card","Sensor Card"]},{"location":"functional-cards/series1/functional-card-sensor1-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of card (variant 1a) <pre><code>sak_layout_fce_sensor1:\ntemplate:\ntype: layout\ndefaults: - sak_layout_sensor_name_above_state: true\n- sak_layout_sensor_history_disabled: false\n- sak_layout_sensor_circle_style: default\n- sak_layout_sensor_icon_style: default\n- sak_layout_sensor_segarc_style: colorlist\n- sak_layout_sensor_scale_max: 2\n- sak_layout_sensor_colorstops_template: colorstops_energy_2kw\n\nlayout:\naspectratio: 4/1\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nshow:\nstyle: '[[sak_layout_sensor_circle_style]]'\nentity_index: 0\ncolorstops:\ntemplate:\nname: '[[sak_layout_sensor_colorstops_template]]'\nstyles:\ncircle:\nstroke: none\nfill: var(--theme-sys-elevation-surface-neutral4)\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 25\nend_angle: 155\nwidth: 4\nradius: 58\nentity_index: 0\nscale:\nmin: 0\nmax: '[[sak_layout_sensor_scale_max]]'\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: '[[sak_layout_sensor_segarc_style]]'\nlastcolor: true\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-color-secondary)\ncolorstops:\ntemplate:\nname: '[[sak_layout_sensor_colorstops_template]]'\nvariables:\n- thegap: 2\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-color-secondary)\nopacity: 0.5\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 0\nshow:\nstyle: '[[sak_layout_sensor_icon_style]]'\ncolorlist:\ncolors:\n- var(--theme-sys-color-secondary)\ncolorstops:\ntemplate:\nname: '[[sak_layout_sensor_colorstops_template]]'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nopacity: 0.9\n\n# ================================================================\n- toolset: column-bar\nposition:\ncx: 235                     # 400-70/2 + 70=235\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: bar\nid: 1\ndisabled: '[[sak_layout_sensor_history_disabled]]'\nentity_index: 0\nposition:\norientation: vertical\ncx: 50\ncy: 50\nwidth: 330              # 400-70=330\nheight: 100\nmargin: 1\nhours: 24\nbarhours: 1\nshow:\nstyle: 'minmaxgradient'\nminmaxgradient:\nfill: true\ncolors:\nmin: var(--theme-sys-palette-secondary85)\nmax: var(--theme-sys-palette-secondary65)\nstyles:\nbar:\nstroke-linecap: square\nopacity: 0.25\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70                # Left part = 75, so 75+(300-75)/2\ncy: 50\ntools:\n# Variant 1a, name above state...\n# The YAML parser can't interpret logical operators, so we\n# have to use JavaScript to do this...\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 37\nvariables:\nname_above_state: '[[sak_layout_sensor_name_above_state]]'\ndisabled:  '[[[[ return !tool_config.variables.name_above_state; ]]]]'\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 70\nvariables:\nname_above_state: '[[sak_layout_sensor_name_above_state]]'\ndisabled:  '[[[[ return !tool_config.variables.name_above_state; ]]]]'\nentity_index: 0\nstyles:\nstate:\ntext-anchor: start\nfont-size: 26em\nfont-weight: 500\nopacity: 0.7\n\n# Variant 1b, state above name...\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 37\ndisabled: '[[sak_layout_sensor_name_above_state]]'\nentity_index: 0\nstyles:\nstate:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 70\ndisabled: '[[sak_layout_sensor_name_above_state]]'\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 26em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Sensor Card"]},{"location":"functional-cards/series1/functional-card-sensor2-card/","title":"Functional Cards: Sensor Card #2","text":"","tags":["Design","Functional Card","Sensor Card"]},{"location":"functional-cards/series1/functional-card-sensor2-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> <p>You see different variations of the same card. These are controlled by variable settings</p> Description Aspect Ratio Target Size A card that displays a sensor value. Both using a segmented arc and as state 3/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Configurable colorstop Icon Entity Icon. Configurable colorstop SegArc Minimalistic implementation of segmented arc showing the sensors state. Configurable colorstop Name / State Name and Value of Entity for setting name above state = true State / Name Value and Name of Entity for setting name above state = false State Secondary Info of entity Bar 24 hour history, if history enabled through variable","tags":["Design","Functional Card","Sensor Card"]},{"location":"functional-cards/series1/functional-card-sensor2-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Sensor Card"]},{"location":"functional-cards/series1/functional-card-sensor2-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'Sensor #2-1'\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nsecondary_info: last_changed\nformat: relative\nlayout:\ntemplate:\nname: sak_layout_fce_sensor2\nvariables:\n- sak_layout_sensor_scale_max: 2\n\n########################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'Sensor #2-2'\nlayout:\ntemplate:\nname: sak_layout_fce_sensor2\nvariables:\n- sak_layout_sensor_name_above_state: false\n- sak_layout_sensor_segarc_style: colorstops\n- sak_layout_sensor_scale_max: 2\n\n########################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'Sensor #2-3'\nlayout:\ntemplate:\nname: sak_layout_fce_sensor2\nvariables:\n- sak_layout_sensor_segarc_style: colorstops\n- sak_layout_sensor_icon_style: colorstops\n- sak_layout_sensor_scale_max: 2\n\n########################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'Sensor #2-4'\nlayout:\ntemplate:\nname: sak_layout_fce_sensor2\nvariables:\n- sak_layout_sensor_name_above_state: false\n- sak_layout_sensor_segarc_style: colorstops\n- sak_layout_sensor_icon_style: colorstops\n- sak_layout_sensor_circle_style: colorstops\n- sak_layout_sensor_scale_max: 2\n\n########################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'Sensor #2-5'\nlayout:\ntemplate:\nname: sak_layout_fce_sensor2\nvariables:\n- sak_layout_sensor_circle_style: colorstops\n- sak_layout_sensor_segarc_style: colorstops\n- sak_layout_sensor_scale_max: 2\n\n########################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'Sensor #2-6'\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nsecondary_info: last_changed\nformat: relative\nlayout:\ntemplate:\nname: sak_layout_fce_sensor2\nvariables:\n- sak_layout_sensor_name_above_state: false\n- sak_layout_sensor_history_disabled: true\n- sak_layout_sensor_circle_style: default\n- sak_layout_sensor_icon_style: default\n- sak_layout_sensor_segarc_style: colorlist\n- sak_layout_sensor_scale_max: 2\n</code></pre> Data Default Required Description entities The single entity on the card sak_layout_sensor_name_above_state true Determines order of these two: name/state or state/name. Note that both versions are defined. The setting only disables one of them and enables the other! sak_layout_sensor_history_disabled false Disable history tool sak_layout_sensor_colorstops_template colorstops_energy_2kw Specify the colorstop template if you specified <code>colorstops</code> for one of the tools sak_layout_sensor_scale_max 2 Scale max must align to given colorstop and/or sensor range! sak_layout_sensor_circle_style default Can be either <code>default</code>, or <code>colorstops</code> sak_layout_sensor_icon_style default Can be either <code>default</code>, or <code>colorstops</code> sak_layout_sensor_segarc_style colorlist Can be either <code>colorlist</code>, or <code>colorstops</code>","tags":["Design","Functional Card","Sensor Card"]},{"location":"functional-cards/series1/functional-card-sensor2-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of card (all variants) <pre><code>sak_layout_fce_sensor2:\ntemplate:\ntype: layout\ndefaults: - sak_layout_sensor_name_above_state: true\n- sak_layout_sensor_history_disabled: false\n- sak_layout_sensor_circle_style: default\n- sak_layout_sensor_icon_style: default\n- sak_layout_sensor_segarc_style: colorlist\n- sak_layout_sensor_scale_max: 2\n- sak_layout_sensor_colorstops_template: colorstops_energy_2kw\n\nlayout:\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nshow:\nstyle: '[[sak_layout_sensor_circle_style]]'\nentity_index: 0\ncolorstops:\ntemplate:\nname: '[[sak_layout_sensor_colorstops_template]]'\nstyles:\ncircle:\nstroke: none\nopacity: 0.25\nfill: var(--theme-sys-elevation-surface-neutral4)\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 25\nend_angle: 155\nwidth: 6\nradius: 59\nentity_index: 0\nscale:\nmin: 0\nmax: '[[sak_layout_sensor_scale_max]]'\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: '[[sak_layout_sensor_segarc_style]]'\nlastcolor: true\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-color-secondary)\ncolorstops:\ntemplate:\nname: '[[sak_layout_sensor_colorstops_template]]'\nvariables:\n- thegap: 2\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 0\nshow:\nstyle: '[[sak_layout_sensor_icon_style]]'\ncolorlist:\ncolors:\n- var(--theme-sys-color-secondary)\ncolorstops:\ntemplate:\nname: '[[sak_layout_sensor_colorstops_template]]'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nopacity: 0.9\n\n# ================================================================\n- toolset: column-bar\nposition:\ncx: 185                     # 300-70/2 + 70=185\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: bar\nid: 1\ndisabled: '[[sak_layout_sensor_history_disabled]]'\nentity_index: 0\nposition:\norientation: vertical\ncx: 50\ncy: 50\nwidth: 230              # 300-70=230\nheight: 100\nmargin: 1\nhours: 24\nbarhours: 1\nshow:\nstyle: 'minmaxgradient'\nminmaxgradient:\nfill: true\ncolors:\nmin: var(--theme-sys-palette-secondary85)\nmax: var(--theme-sys-palette-secondary65)\nstyles:\nbar:\nstroke-linecap: square\nopacity: 0.2\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70                # Left part = 75, so 75+(300-75)/2\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nvariables:\nname_above_state: '[[sak_layout_sensor_name_above_state]]'\ndisabled:  '[[[[ return !tool_config.variables.name_above_state; ]]]]'\nposition:\ncx: 50\ncy: 33\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\n# ------------------------------------------------------------\n- type: state\nvariables:\nname_above_state: '[[sak_layout_sensor_name_above_state]]'\ndisabled:  '[[[[ return !tool_config.variables.name_above_state; ]]]]'\nposition:\ncx: 50\ncy: 61\nentity_index: 0\nstyles:\nstate:\ntext-anchor: start\nfont-size: 22em\nfont-weight: 500\nopacity: 0.7\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 85\nentity_index: 1\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: start\nfont-size: 15em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70                # Left part = 75, so 75+(300-75)/2\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: state\ndisabled: '[[sak_layout_sensor_name_above_state]]'\nposition:\ncx: 50\ncy: 33\nentity_index: 0\nstyles:\nstate:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\n# ------------------------------------------------------------\n- type: name\ndisabled: '[[sak_layout_sensor_name_above_state]]'\nposition:\ncx: 50\ncy: 61\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 22em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Sensor Card"]},{"location":"functional-cards/series1/functional-card-server-statistics-card/","title":"Functional Cards: Server Statistics Sensor","text":"","tags":["Design","Functional Card","Server Statistics Card"]},{"location":"functional-cards/series1/functional-card-server-statistics-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that displays the main server statistics. CPU load, memory used, disk used and the 1 minute system load 6/1 Grid with 1 column SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Circle is animated, state dependent Icon Entity Icon. Name Name of Entity State Secondary Info of Entity Template x4 Uses the <code>toolset_tutorial_02_part1</code> template created in the Swiss Army Knife Tutorial 02.This template shows the segmented arc with icon and state display for cpu, memory, disk and 1minute system load","tags":["Design","Functional Card","Server Statistics Card"]},{"location":"functional-cards/series1/functional-card-server-statistics-card/#integrations","title":"Integrations","text":"<p>You need one of the integrations setup that give you system information. An example is the System Monitor integration.</p>","tags":["Design","Functional Card","Server Statistics Card"]},{"location":"functional-cards/series1/functional-card-server-statistics-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Server Statistics Card"]},{"location":"functional-cards/series1/functional-card-server-statistics-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n# CPU\n- entity: sensor.processor_use\ndecimals: 0\nname: 'Server Stats'\n# Memory\n- entity: sensor.memory_use_percent\nicon: mdi:memory\ndecimals: 0\n# Disk\n- entity: sensor.disk_use_percent\ndecimals: 0\nicon: mdi:harddisk\n# System Load\n- entity: sensor.load_1m\ndecimals: 2\nunit: '1m'\n# Last changed\n- entity: sensor.processor_use\nsecondary_info: last_changed\nformat: relative\nlayout:\ntemplate:\nname: sak_layout_fce_server_statistics\n</code></pre>","tags":["Design","Functional Card","Server Statistics Card"]},{"location":"functional-cards/series1/functional-card-server-statistics-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_server_statistics:\ntemplate:\ntype: layout\ndefaults: - var_entity_index: 0\nlayout:\naspectratio: 6/1                          # Card is 600x100 grid\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 48\nstyles:\ncircle:\nfill: none\nstroke: var(--theme-sys-color-secondary)\nstroke-width: 3em\nopacity: 0.5\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 30\nicon: mdi:server-network\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 120\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: middle\nfont-size: 25em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 80\nentity_index: 4\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 14em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: line1\nposition:\ncx: 200                           # On 1/3 of card width\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 50\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n# ================================================================\n- toolset: column-cpu\ntemplate:\nname: toolset_tutorial_02_part1\nvariables:\n- var_toolset_position_cx: 260\n\n# ================================================================\n- toolset: column-memory\ntemplate:\nname: toolset_tutorial_02_part1\nvariables:\n- var_entity_index: 1\n- var_toolset_position_cx: 355\n\n# ================================================================\n- toolset: column-disk\ntemplate:\nname: toolset_tutorial_02_part1\nvariables:\n- var_entity_index: 2\n- var_toolset_position_cx: 450\n\n# ================================================================\n- toolset: column-load\ntemplate:\nname: toolset_tutorial_02_part1\nvariables:\n- var_entity_index: 3\n- var_toolset_position_cx: 545\n- var_segarc_scale_max: 2\n</code></pre>","tags":["Design","Functional Card","Server Statistics Card"]},{"location":"functional-cards/series1/functional-card-switch1-card/","title":"Functional Cards: Switch #1","text":"","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch1-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A simple switch card with the \"switch\" on the left side of the card 3/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Circle is animated, state dependent Icon Entity Icon. Animated, state dependent. Icon spins in this case Name Name of Entity State Secondary Info of Entity Line Used as vertical separator Switch The switch. Animated, state dependent","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch1-card/#interaction","title":"Interaction","text":"Part Description Switch Used to toggle the binary sensor entity Other tools All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch1-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'Switch #1'\nicon: mdi:fan\n- entity: light.livingroom_light_duo_right_light\nsecondary_info: last_changed\nformat: relative\nlayout:\ntemplate:\nname: sak_layout_fce_switch1\nvariables:\n- sak_layout_switch_icon_spin: true\n- sak_layout_switch_service: light.toggle\n</code></pre> Data Default Required Description entities The two entities on the card sak_layout_switch_icon_spin false True to have the icon spin indefinitely sak_layout_switch_service switch.toggle You can alter the service, if that is needed...","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch1-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of card <pre><code>sak_layout_fce_switch1:\ntemplate:\ntype: layout\ndefaults: - sak_layout_switch_icon_spin: false\n- sak_layout_switch_service: switch.toggle\nlayout:\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\ncircle:\nfill: var(--theme-sys-color-primary)\n- state: 'off'\nstyles:\ncircle:\nfill: var(--theme-sys-elevation-surface-neutral4)\nstyles:\ncircle:\nstroke: none\n# transition: fill 1s ease\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 35\nicon: mdi:fan\nentity_index: 0\n# Define template variable for this icon tool, so it can be\n# processed by a piece of JavaScript ;-)\n# The template engine will replace the variable!\nvariables:\nsak_layout_switch_icon_spin : '[[sak_layout_switch_icon_spin]]'\nanimations:\n- state: 'on'\nstyles:\nicon:\n# Use template variable as the source to spin or not.\n# the config JavaScript parameter is this tools config...\nanimation: &gt;\n[[[ if (tool_config.variables.sak_layout_switch_icon_spin) return \"spin 3s linear infinite\";\nreturn \"\";\n]]]\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nstyles:\nicon:\nfill: var(--primary-background-color)\nopacity: 0.9\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 120\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: middle\nfont-size: 25em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 80\nentity_index: 1\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 14em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: line1\nposition:\ncx: 200                           # On 1/3 of card width\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 50\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n# ================================================================\n- toolset: switch\nposition:\ncx: 250                           # On 1/3 of card width\ncy: 50\nscale: 3\ntools:\n# ------------------------------------------------------------\n- type: switch\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: '[[sak_layout_switch_service]]'\n</code></pre>","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch2-card/","title":"Functional Cards: Switch #2","text":"","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch2-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A simple switch card with the \"switch\" on the left side of the card 4/1 Grid with 2 columns SAK Tool Used for Badge Background of card. Left part is animated, state dependent Icon Entity Icon. Animated, state dependent Switch To indicate that this part is the switch. Animated, state dependent Name Name of Entity State Secondary Info of Entity","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch2-card/#interaction","title":"Interaction","text":"Part Description Left part of badge The whole left part functions as a button to toggle the binary sensor entity Right part of badge All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch2-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'Switch #2a'\n- entity: light.livingroom_light_duo_right_light\nsecondary_info: last_changed\nformat: relative\nlayout:\ntemplate:\nname: sak_layout_fce_switch2\nvariables:\n- sak_layout_switch_icon_spin: false\n</code></pre> Data Default Required Description entities The two entities on the card sak_layout_switch_icon_spin false True to have the icon spin indefinitely sak_layout_switch_service switch.toggle You can alter the service, if that is needed...","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch2-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of card <pre><code>sak_layout_fce_switch2:\ntemplate:\ntype: layout\ndefaults: - sak_layout_switch_icon_spin: false\n- sak_layout_switch_service: switch.toggle\nlayout:\naspectratio: 4/1\ntoolsets:\n# ================================================================\n- toolset: badge-background\nposition:\ncx: 150\ncy: 50\ntools:\n- type: badge\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 300\nratio: 25\nradius: 5\ndivider: 30\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.toggle\nanimations:\n- state: 'on'\nstyles:\nleft:\nfill: var(--theme-sys-color-primary)\n- state: 'off'\nstyles:\nleft:                     # Use as filled tonal button (m3)\nfill: var(--theme-sys-color-secondary-container)\nstyles:\nleft:\nfill: grey\nright:\nfill: none                  # Show background\npointer-events: none        # Disable user interaction\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 37.5                           # On 12.5% f width\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 0\n# Define template variable for this icon tool, so it can be\n# processed by a piece of JavaScript ;-)\n# The template engine will replace the variable!\nvariables:\nsak_layout_switch_icon_spin : '[[sak_layout_switch_icon_spin]]'\nanimations:\n- state: 'on'\nstyles:\nicon:\n# Use template variable as the source to spin or not.\n# the config JavaScript parameter is this tools config...\nanimation: &gt;\n[[[ if (tool_config.variables.sak_layout_switch_icon_spin) return \"spin 3s linear infinite\";\nreturn \"\";\n]]]\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nstyles:\nicon:\nfill: var(--primary-background-color)\nopacity: 0.9\npointer-events: none        # Disable user interaction\n\n# ================================================================\n- toolset: switch\nposition:\ncx: 37.5                           # On 1/3 of card width\ncy: 85\nscale: 2\ntools:\n# ------------------------------------------------------------\n- type: switch\nposition:\ncx: 50\ncy: 50\norientation: 'horizontal'\ntrack:\nwidth: 15\nheight: 5\nradius: 2.5\nthumb:\nwidth: 3\nheight: 3\nradius: 2.5\noffset: 4.5\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: '[[sak_layout_switch_service]]'\nstyles:\ntrack:\n--switch-checked-track-color: var(--primary-background-color)\n--switch-unchecked-track-color: var(--theme-sys-color-secondary)\n# --switch-checked-button-color: \npointer-events: none\nthumb:\n--thumb-stroke: 'var(--primary-background-color)'\npointer-events: none\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 110\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 37\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 1\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: start\nfont-size: 26em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch3-card/","title":"Functional Cards: Switch #3","text":"","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch3-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A simple switch card with the \"switch\" on the left side of the card 3/1 Grid with 3 columns SAK Tool Used for Badge Background of card. Left part is animated, state dependent Icon Entity Icon. Animated, state dependent Switch To indicate that this part is the switch. Animated, state dependent Name Name of Entity State Secondary Info of Entity","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch3-card/#interaction","title":"Interaction","text":"Part Description Left part of badge The whole left part functions as a button to toggle the switch Right part of badge All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch3-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'Switch #3'\nicon: mdi:fan\n- entity: light.livingroom_light_duo_right_light\nsecondary_info: last_changed\nformat: relative\nlayout:\ntemplate:\nname: sak_layout_fce_switch3\nvariables:\n- sak_layout_switch_icon_spin: true\n</code></pre> Data Default Required Description entities The two entities on the card sak_layout_switch_icon_spin false True to have the icon spin indefinitely sak_layout_switch_service switch.toggle You can alter the service, if that is needed...","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-switch3-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of card <pre><code>sak_layout_fce_switch3:\ntemplate:\ntype: layout\ndefaults: - sak_layout_switch_icon_spin: false\n- sak_layout_switch_service: switch.toggle\nlayout:\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: badge-background\nposition:\ncx: 150\ncy: 50\ntools:\n- type: badge\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 300\nratio: 25\nradius: 5\ndivider: 30\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.toggle\nanimations:\n- state: 'on'\nstyles:\nleft:\nfill: var(--theme-sys-color-primary)\n- state: 'off'\nstyles:\nleft:                     # Use as filled tonal button (m3)\nfill: var(--theme-sys-color-secondary-container)\nstyles:\nleft:\nfill: grey\nright:\nfill: none                  # Show background\npointer-events: none        # Disable user interaction\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 37.5                           # On 12.5% f width\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 0\n# Define template variable for this icon tool, so it can be\n# processed by a piece of JavaScript ;-)\n# The template engine will replace the variable!\nvariables:\nsak_layout_switch_icon_spin : '[[sak_layout_switch_icon_spin]]'\nanimations:\n- state: 'on'\nstyles:\nicon:\n# Use template variable as the source to spin or not.\n# the config JavaScript parameter is this tools config...\nanimation: &gt;\n[[[ if (config.variables.sak_layout_switch_icon_spin) return \"spin 3s linear infinite\";\nreturn \"\";\n]]]\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nstyles:\nicon:\nfill: var(--primary-background-color)\nopacity: 0.9\npointer-events: none        # Disable user interaction\n# transition: fill 1s ease\n\n# ================================================================\n- toolset: switch\nposition:\ncx: 37.5                           # On 1/3 of card width\ncy: 85\nscale: 2\ntools:\n# ------------------------------------------------------------\n- type: switch\nposition:\ncx: 50\ncy: 50\norientation: 'horizontal'\ntrack:\nwidth: 15\nheight: 5\nradius: 2.5\nthumb:\nwidth: 3\nheight: 3\nradius: 2.5\noffset: 4.5\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: '[[sak_layout_switch_service]]'\nstyles:\ntrack:\n--switch-checked-track-color: var(--primary-background-color)\n--switch-unchecked-track-color: var(--theme-sys-color-secondary)\n--switch-checked-button-color: var(--primary-color)\n--switch-unchecked-button-color: var(--primary-background-color)\npointer-events: none\nthumb:\n--thumb-stroke: 'var(--primary-background-color)'\npointer-events: none\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 100                   # Left part = 75, so 75+(300-75)/2\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 80\nentity_index: 1\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: start\nfont-size: 16em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Switch Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-all-aqi-card/","title":"Functional Cards: Tomorrow Pollen All with AQI Card","text":"","tags":["Design","Functional Card","Tomorrow Pollen All AQI Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-all-aqi-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that shows the pollen status from Tomorrow and the AQI value. This value from Tomorrow doesn't work, so I used the default AQI integration. 6/2 Grid with 1 column SAK Tool Used for Ellipse The half ellipse, as the left part of the circle is cutoff by the card. Icon Entity Icon. Name Name of AQI Entity Circle Circle as background for the Svg. Animated, state dependent UserSvg Svg image for AQI. Animated, state dependent State State of AQI State State of Pollutant Line Vertical line separator Name Name of Trees Entity UserSvg Svg image for trees. Animated, state dependent State State of trees entity Name Name of Grass Entity UserSvg Svg image for grass. Animated, state dependent State State of grass entity Name Name of Weed Entity UserSvg Svg image for weed. Animated, state dependent State State of weed entity","tags":["Design","Functional Card","Tomorrow Pollen All AQI Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-all-aqi-card/#integrations","title":"Integrations","text":"<p>You need the AirVisual integration:  and the tomorrow.io integration: </p>","tags":["Design","Functional Card","Tomorrow Pollen All AQI Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-all-aqi-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Tomorrow Pollen All AQI Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-all-aqi-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>You need the tomorrow.io SVG files from Github and put those in the <code>www/images/tomorrow</code> folder</p> <p>Images and colors used for this card are adapted versions from Isabella Alstr\u00f6ms pollen images</p> <p>You need the AirVisual SVG files from Github and put those in the <code>www/images/airvisual</code> folder</p> <p>Replace tomorrow entities with your entities!. The AQI entities are generic</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.tomorrow_io_tree_pollen_index\nname: 'Trees'\n- entity: sensor.tomorrow_io_grass_pollen_index\nname: 'Grass'\n- entity: sensor.tomorrow_io_weed_pollen_index\nname: 'Weed'\n- entity: sensor.u_s_air_quality_index\nname: 'AQI'\n- entity: sensor.u_s_air_pollution_level\nlayout:\ntemplate:\nname: sak_layout_fce_tomorrow_pollen_all_aqi\nvariables:\n- sak_layout_tomorrow_pollen_image_path: tomorrow/\n</code></pre> Data Default Required Description entities The three tomorrow pollen entities; tree, grass and weed and the two AQI entities, in that order! sak_layout_tomorrow_pollen_image_path tomorrow/ Folder in /local/images/, including a trailing slash!","tags":["Design","Functional Card","Tomorrow Pollen All AQI Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-all-aqi-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_tomorrow_pollen_all_aqi:\ntemplate:\ntype: layout\ndefaults: - sak_layout_tomorrow_pollen_image_path: 'tomorrow/'\nlayout:\naspectratio: 6/2\ntoolsets:\n# ================================================================\n- toolset: line1\nposition:\ncx: 200\ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 100\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: ellipse\nposition:\ncx: 50\ncy: 50\nradiusx: 48\nradiusy: 96\nstyles:\nellipse:\nfill: none\nstroke: var(--theme-sys-color-secondary)\nstroke-width: 3em\nopacity: 0.5\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 50\nentity_index: 0\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n\n# ================================================================\n- toolset: aqi-column\nposition:\ncx: 125\ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: -25\nentity_index: 3\nstyles:\nname:\ntext-anchor: middle\nfont-size: 26em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 3\nshow:\nstyle: 'colorstops'\ncolorstops:\ntemplate:\nname: colorstops_airvisual\nvariables:\n- thegap: 2\nstyles:\ncircle:\nstroke: none\nfill: var(--theme-sys-elevation-surface-neutral4)\n# ------------------------------------------------------------\n- type: 'usersvg'\nentity_index: 3\nposition:\ncx: 50\ncy: 50\nheight: 95\nwidth: 95\nstyle: 'images'\nimages:\n- face1: /local/images/airvisual/ic-face-1.svg\n- face2: /local/images/airvisual/ic-face-2.svg\n- face3: /local/images/airvisual/ic-face-3.svg\n- face4: /local/images/airvisual/ic-face-4.svg\n- face5: /local/images/airvisual/ic-face-5.svg\n- face6: /local/images/airvisual/ic-face-6.svg\nanimations:\n- state: '50'\noperator: &lt;=\nimage: face1\n- state: '100'\noperator: &lt;=\nimage: face2\n- state: '150'\noperator: &lt;=\nimage: face3\n- state: '200'\noperator: &lt;=\nimage: face4\n- state: '300'\noperator: &lt;=\nimage: face5\n- state: '9999'\noperator: &lt;=\nimage: face6\nstyles:\nusersvg:\nstroke-width: 5em\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 43\ncy: 125\nentity_index: 3\nshow:\nellipsis: 5\nstyles:\nstate:\ntext-anchor: end\nfont-size: 20em\nfont-weight: 500\nopacity: 0.7\n\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 48\ncy: 125\nentity_index: 4\ntext:\nbefore: ' | '\nstyles:\nstate:\ntext-anchor: start\nfont-size: 20em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: pollen-column-trees\nposition:\ncx: 260\ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: -25\nentity_index: 0\nstyles:\nname:\ntext-anchor: middle\nfont-size: 26em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: 'usersvg'\nentity_index: 0\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 100\nstyle: 'images'\nvariables:\npath: '[[sak_layout_tomorrow_pollen_image_path]]'\nprefix: 'pollen_tree_'\nimages:\n- default: &gt;\n[[[\nreturn \"/local/images/\"+ config.variables.path + config.variables.prefix + state + \".svg\";\n]]]\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 125\nentity_index: 0\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 20em\nfont-weight: 500\nopacity: 0.7\n# ================================================================\n- toolset: pollen-column-grass\nposition:\ncx: 395\ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: -25\nentity_index: 1\nstyles:\nname:\ntext-anchor: middle\nfont-size: 26em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: 'usersvg'\nentity_index: 1\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 100\nstyle: 'images'\nvariables:\npath: '[[sak_layout_tomorrow_pollen_image_path]]'\nprefix: 'pollen_grass_'\nimages:\n- default: &gt;\n[[[\nreturn \"/local/images/\"+ config.variables.path + config.variables.prefix + state + \".svg\";\n]]]\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 125\nentity_index: 1\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 20em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: pollen-column-weed\nposition:\ncx: 530\ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: -25\nentity_index: 2\nstyles:\nname:\ntext-anchor: middle\nfont-size: 26em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: 'usersvg'\nentity_index: 2\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 100\nstyle: 'images'\nvariables:\npath: '[[sak_layout_tomorrow_pollen_image_path]]'\nprefix: 'pollen_weed_'\nimages:\n- default: &gt;\n[[[\nreturn \"/local/images/\"+ config.variables.path + config.variables.prefix + state + \".svg\";\n]]]\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 125\nentity_index: 2\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 20em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Tomorrow Pollen All AQI Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-all-card/","title":"Functional Cards: Tomorrow Pollen All Card","text":"","tags":["Design","Functional Card","Tomorrow Pollen All Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-all-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that shows the pollen status from Tomorrow. You need to have setup that integration of course. 6/2 Grid with 1 column SAK Tool Used for Ellipse The half ellipse, as the left part of the circle is cutoff by the card. Icon Entity Icon. Text Text \"Pollen\" Text Text \"Index\" Name Name of Trees Entity UserSvg Svg image for trees. Animated, state dependent State State of trees entity Name Name of Grass Entity UserSvg Svg image for grass. Animated, state dependent State State of grass entity Name Name of Weed Entity UserSvg Svg image for weed. Animated, state dependent State State of weed entity","tags":["Design","Functional Card","Tomorrow Pollen All Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-all-card/#integrations","title":"Integrations","text":"<p>You need the tomorrow.io integration: </p>","tags":["Design","Functional Card","Tomorrow Pollen All Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-all-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Tomorrow Pollen All Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-all-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>You need the SVG files from Github and put those in the <code>www/images/tomorrow</code> folder</p> <p>Images and colors used for this card are adapted versions from Isabella Alstr\u00f6ms pollen images</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.tomorrow_io_tree_pollen_index\nname: 'Trees'\n- entity: sensor.tomorrow_io_grass_pollen_index\nname: 'Grass'\n- entity: sensor.tomorrow_io_weed_pollen_index\nname: 'Weed'\nlayout:\ntemplate:\nname: sak_layout_fce_tomorrow_pollen_all\nvariables:\n- sak_layout_tomorrow_pollen_image_path: tomorrow/\n</code></pre> Data Default Required Description entities The three tomorrow pollen entities; tree, grass and weed, in that order! sak_layout_tomorrow_pollen_image_path tomorrow/ Folder in /local/images/, including a trailing slash!","tags":["Design","Functional Card","Tomorrow Pollen All Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-all-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_tomorrow_pollen_all:\ntemplate:\ntype: layout\ndefaults: - sak_layout_tomorrow_pollen_image_path: 'tomorrow/'\nlayout:\naspectratio: 6/2\ntoolsets:\n# ================================================================\n- toolset: line1\nposition:\ncx: 200\ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 100\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: ellipse\nposition:\ncx: 50\ncy: 50\nradiusx: 48\nradiusy: 96\nstyles:\nellipse:\nfill: none\nstroke: var(--theme-sys-color-secondary)\nstroke-width: 3em\nopacity: 0.5\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 50\nentity_index: 0\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\n\n# ================================================================\n- toolset: column-text\nposition:\ncx: 125\ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: text\nposition:\ncx: 50\ncy: 37\ntext: 'Pollen'\nstyles:\ntext:\ntext-anchor: middle\nfont-size: 30em\nfont-weight: 600\nopacity: 0.9\n# ------------------------------------------------------------\n- type: text\nposition:\ncx: 50\ncy: 70\ntext: 'Index'\nstyles:\ntext:\ntext-anchor: middle\nfont-size: 26em\nfont-weight: 600\nopacity: 0.9\n\n# ================================================================\n- toolset: pollen-column-trees\nposition:\ncx: 260\ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: -25\nentity_index: 0\nstyles:\nname:\ntext-anchor: middle\nfont-size: 26em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: 'usersvg'\nentity_index: 0\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 100\nstyle: 'images'\nvariables:\npath: '[[sak_layout_tomorrow_pollen_image_path]]'\nprefix: 'pollen_tree_'\nimages:\n- default: &gt;\n[[[\nreturn \"/local/images/\"+ config.variables.path + config.variables.prefix + state + \".svg\";\n]]]\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 125\nentity_index: 0\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 22em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: pollen-column-grass\nposition:\ncx: 395\ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: -25\nentity_index: 1\nstyles:\nname:\ntext-anchor: middle\nfont-size: 26em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: 'usersvg'\nentity_index: 1\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 100\nstyle: 'images'\nvariables:\npath: '[[sak_layout_tomorrow_pollen_image_path]]'\nprefix: 'pollen_grass_'\nimages:\n- default: &gt;\n[[[\nreturn \"/local/images/\"+ config.variables.path + config.variables.prefix + state + \".svg\";\n]]]\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 125\nentity_index: 1\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 22em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: pollen-column-weed\nposition:\ncx: 530\ncy: 100\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: -25\nentity_index: 2\nstyles:\nname:\ntext-anchor: middle\nfont-size: 26em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: 'usersvg'\nentity_index: 2\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 100\nstyle: 'images'\nvariables:\npath: '[[sak_layout_tomorrow_pollen_image_path]]'\nprefix: 'pollen_weed_'\nimages:\n- default: &gt;\n[[[\nreturn \"/local/images/\"+ config.variables.path + config.variables.prefix + state + \".svg\";\n]]]\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 125\nentity_index: 2\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 22em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Tomorrow Pollen All Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-card/","title":"Functional Cards: Tomorrow Pollen Card","text":"","tags":["Design","Functional Card","Tomorrow Pollen Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> <p>This card shows you some possibilities to apply JavaScript to the svg image section</p> Description Aspect Ratio Target Size A card that shows the pollen status from Tomorrow. You need to have setup that integration of course. 4/1 Grid with 2 columns SAK Tool Used for UserSvg Background svg image. Animated, state dependent Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent Icon Entity Icon. Name Name of Entity State State of entity","tags":["Design","Functional Card","Tomorrow Pollen Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-card/#integrations","title":"Integrations","text":"<p>You need the tomorrow.io integration: </p>","tags":["Design","Functional Card","Tomorrow Pollen Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card","Tomorrow Pollen Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>You need the SVG files from Github and put those in the <code>www/images/tomorrow</code> folder</p> <p>Images and colors used for this card are adapted versions from Isabella Alstr\u00f6ms pollen images</p> <p>Replace example entities with your entities!</p> <pre><code>- type: grid\ncolumns: 2\nsquare: false\ncards:\n#######################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.tomorrow_io_tree_pollen_index\nname: 'Tree Pollen Index'\nlayout:\ntemplate:\nname: sak_layout_fce_tomorrow_pollen\nvariables:\n- sak_layout_tomorrow_pollen_image_path: tomorrow/\n- sak_layout_tomorrow_pollen_file_prefix: pollen_tree_\n\n#######################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.tomorrow_io_grass_pollen_index\nname: 'Grass Pollen Index'\nlayout:\ntemplate:\nname: sak_layout_fce_tomorrow_pollen\nvariables:\n- sak_layout_tomorrow_pollen_image_path: tomorrow/\n- sak_layout_tomorrow_pollen_file_prefix: pollen_grass_\n\n#######################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.tomorrow_io_weed_pollen_index\nname: 'Weed Pollen Index'\nlayout:\ntemplate:\nname: sak_layout_fce_tomorrow_pollen\nvariables:\n- sak_layout_tomorrow_pollen_image_path: tomorrow/\n- sak_layout_tomorrow_pollen_file_prefix: pollen_weed_\n</code></pre> Data Default Required Description entities The tomorrow tree, grass or weed entity sak_layout_tomorrow_pollen_image_path tomorrow/ Folder in /local/images/, including a trailing slash! sak_layout_tomorrow_pollen_file_prefix Depending on the entity, pollen_tree, pollen_grass or pollen_weed","tags":["Design","Functional Card","Tomorrow Pollen Card"]},{"location":"functional-cards/series1/functional-card-tomorrow-pollen-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_tomorrow_pollen:\ntemplate:\ntype: layout\ndefaults: - sak_layout_tomorrow_pollen_image_path: 'tomorrow/'\n- sak_layout_tomorrow_pollen_file_prefix: '' layout:\naspectratio: 4/1\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 0\nanimations:\n- state: 'none'\nstyles:\ncircle:\nfill: '#848484'\n- state: 'very_low'\nstyles:\ncircle:\nfill: '#ffe99d'\n- state: 'low'\nstyles:\ncircle:\nfill: '#fcc449'\n- state: 'medium'\nstyles:\ncircle:\nfill: '#f79f23'\n- state: 'high'\nstyles:\ncircle:\nfill: '#ef7f01'\n- state: 'very_high'\nstyles:\ncircle:\nfill: '#e73f10'\nstyles:\ncircle:\nstroke: none\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 0\nanimations:\n- state: 'none'\nstyles:\nicon:\nfill: var(--primary-background-color)\n- state: 'very_low'\nstyles:\nicon:\nfill: var(--theme-ref-palette-secondary20)\n- state: 'low'\nstyles:\nicon:\nfill: var(--theme-ref-palette-secondary20)\n- state: 'medium'\nstyles:\nicon:\nfill: var(--primary-background-color)\n- state: 'high'\nstyles:\nicon:\nfill: var(--primary-background-color)\n- state: 'very_high'\nstyles:\nicon:\nfill: var(--primary-background-color)\nstyles:\nicon:\nopacity: 0.9\nfill: var(--primary-background-color)\n\n# ================================================================\n- toolset: background-svg\nposition:\ncx: 350\ncy: 50\ntools:\n- type: 'usersvg'\nentity_index: 0\nposition:\ncx: 50\ncy: 50\nheight: 100\nwidth: 100\nstyle: 'images'\nvariables:\npath: '[[sak_layout_tomorrow_pollen_image_path]]'\nprefix: '[[sak_layout_tomorrow_pollen_file_prefix]]'\nimages:\n- default: &gt;\n[[[\nreturn \"/local/images/\"+ config.variables.path + config.variables.prefix + state + \".svg\";\n]]]\nstyles:\nusersvg:\nopacity: 0.5\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 37\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: start\nfont-size: 26em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Design","Functional Card","Tomorrow Pollen Card"]},{"location":"functional-cards/series2/functional-card-binary-sensor-alert1-card/","title":"Functional Cards Series 2: Binary Sensor with Alert Card #1","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that shows the state of a binary sensor, including an icon as an alert. Nice for doors, windows and occupancy alerts. 3/1 Grid with 2 columns SAK Tool Used for Circle The half circle, as the left part of the circle is cutoff by the card. Animated, state dependent Icon Entity Icon. Animated, state dependent Icon Alert Icon. Animated, state dependent. Only visible if state is <code>on</code> Name Name of Entity State Secondary Info Line Vertical line separator Icon Battery state as icon. Animated, state dependent SegArc Simple circle as segmented arc to show the battery level State Value of battery level Icon Linkquality icon SegArc Simple circle as segmented arc to show the linkquality value State Value of linkquality","tags":["Example","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series2/functional-card-binary-sensor-alert1-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Example","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series2/functional-card-binary-sensor-alert1-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: binary_sensor.livingroom_movement_occupancy\nname: 'Bin Alert #1'\n# name: 'Movement'\n- entity: binary_sensor.livingroom_movement_occupancy\nsecondary_info: last_changed\nformat: relative\n- entity: sensor.livingroom_movement_battery\ndecimals: 0\n- entity: sensor.livingroom_movement_linkquality\ndecimals: 0\nlayout:\ntemplate:\nname: sak_layout_fce_binary_alert1\n</code></pre> Data Default Required Description entities The four required entities","tags":["Example","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series2/functional-card-binary-sensor-alert1-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_binary_alert1:\ntemplate:\ntype: layout\ndefaults: - dummy: 0\nlayout:\naspectratio: 3/1\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\ncircle:\nfill: var(--theme-sys-color-primary)\n# animation: flash 2s ease-in-out 5\n- state: 'off'\nstyles:\ncircle:\nfill: var(--theme-sys-elevation-surface-neutral4)\nstyles:\ncircle:\nstroke: none\n# transition: fill 1s ease\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 35\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\nicon:\n# animation: spin 3s linear infinite\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nopacity: 0.9\nstyles:\nicon:\nfill: var(--primary-background-color)\nopacity: 0.9\n# transition: fill 1s ease\n\n# ================================================================\n- toolset: alert-icon\nposition:\ncx: 40\ncy: 18\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 13\nentity_index: 0                 # Use state from 0\nanimations:\n- state: 'on'                 # If ON\nstyles:\ncircle:\nfill: var(--primary-background-color)\n- state: 'off'                # If OFF\nstyles:\ncircle:\ndisplay: none           # Hide icon\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 25\nentity_index: 0                 # Use state from 0\nicon: mdi:alert-circle          # Use alert circle icon\nanimations:\n- state: 'on'                 # If ON\nstyles:\nicon:\nfill: var(--brand-google-red, red) # Set icon to red color\n- state: 'off'                # If OFF\nstyles:\nicon:\ndisplay: none           # Hide icon\nstyles:\nicon:\nfill: grey                  # Default grey color\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 120\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: middle\nfont-size: 25em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 80\nentity_index: 1\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 14em\nfont-weight: 500\nopacity: 0.7\n\n# ================================================================\n- toolset: line1\nposition:\ncx: 200                           # On 1/3 of card width\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 50\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n# ================================================================\n- toolset: column-battery\nposition:\ncx: 250\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 30\ncy: 30\nalign: right\nicon_size: 25\nentity_index: 2\nstyles:\nicon:\nfill: var(--theme-sys-color-tertiary)\nopacity: 0.8\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 70\ncy: 30\nentity_index: 2\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 15em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 70\ncy: 30\nstart_angle: 0\nend_angle: 360\nwidth: 3\nradius: 18\nentity_index: 2\nscale:\nmin: 0\nmax: 100\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-palette-tertiary45)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n\n# ================================================================\n- toolset: column-linkquality\nposition:\ncx: 250\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 30\ncy: 70\nalign: right\nicon_size: 25\nentity_index: 3\nstyles:\nicon:\nfill: var(--theme-sys-color-tertiary)\nopacity: 0.8\n\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 70\ncy: 70\nentity_index: 3\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 15em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n\n# ------------------------------------------------------------ \n- type: 'segarc'\nid: 0\nposition:\ncx: 70\ncy: 70\nstart_angle: 0\nend_angle: 360\nwidth: 3\nradius: 18\nentity_index: 3\nscale:\nmin: 0\nmax: 100\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-palette-tertiary45)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n</code></pre>","tags":["Example","Functional Card","Binary Card with Alert"]},{"location":"functional-cards/series2/functional-card-person-card/","title":"Functional Cards Series 2: Person Card","text":"","tags":["Example","Functional Card","Person Card"]},{"location":"functional-cards/series2/functional-card-person-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> <p>This card shows you some possibilities to apply JavaScript to the animations section</p> <p>The card seems like a standard, simple card, but isn't due to some Home Assistant functionalities and the possibilities of using either an icon or an entity picture for the person.</p> <p>The use of JavaScript to fetch the zone's Icon, to do some state dependent color changes and taking care of the \"use entity_picture yes/no\" setting are nice examples of the possibilities that JavaScript adds to tools. It are just a few lines, but very powerful!</p> <p>It also takes care of fetching the icon of additional zones (ie not the home zone).</p> Description Aspect Ratio Target Size A card that shows in which zone a person is, or if in no known zone as away / not home. 4/1 Grid with 2 columns SAK Tool Used for Icon Background Icon (only in first screenshot)  Circle The half circle, as the left part of the circle is cutoff by the card Icon Entity Icon. Animated, state dependent and only visible if no entity_picture should be displayed UserSvg Shows the Entity Picture. Only visible if entity_picture should be displayed Icon Zone Icon, ie where is the person according to the zone configuration. Animated, state dependent Name Name of Entity State State of entity","tags":["Example","Functional Card","Person Card"]},{"location":"functional-cards/series2/functional-card-person-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Example","Functional Card","Person Card"]},{"location":"functional-cards/series2/functional-card-person-card/#usage","title":"Usage","text":"<p> 1.0.0-rc.3</p> <p>Using the default mode: an icon for the person entity: <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: person.marco\nname: 'Person'\nicon: mdi:face-man\nlayout:\ntemplate:\nname: sak_layout_fce_person\nvariables:\n- sak_layout_fce_person_zone_entities:\n- zone.the_gym\n- zone.marco_work\n- zone.marco_parents\n- zone.zoo\n</code></pre> Using an <code>entity_picture</code> for the person entity. Picture can be defined here, or (default) the <code>entity_picture</code> defined for the person is used: <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: person.tha_washer\nname: 'Tha Washer'\nicon: mdi:face-man\nentity_picture: \"/local/images/tha-washer.jpg\"\nlayout:\ntemplate:\nname: sak_layout_fce_person\nvariables:\n- sak_layout_fce_person_use_entity_picture: true\n- sak_layout_fce_person_zone_entities:\n- zone.the_gym\n- zone.marco_work\n- zone.marco_parents\n- zone.zoo\n</code></pre></p> Data Default Required Description entities The person entity sak_layout_fce_person_zone_entities The list of zone entities for this person to be displayed. There is no limit, it is really a list which is used when the person is not at home! sak_layout_fce_person_use_entity_picture false If set to true, an entity picture is displayed instead of the persons icon. Default the picture configured for the person is used, but can be overridden by specifying an entity_picture in the entity configuration in the view","tags":["Example","Functional Card","Person Card"]},{"location":"functional-cards/series2/functional-card-person-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 1.0.0-rc.3</p> Full definition of layout template <pre><code>sak_layout_fce_person:\ntemplate:\ntype: layout\ndefaults: - sak_layout_fce_person_use_entity_picture: false\nlayout:\naspectratio: 4/1\ntoolsets:\n# ================================================================\n# Extra background icon. Just for fun and filling some space\n- toolset: background-icon\nposition:\ncx: 350\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 100\nicon: mdi:map-marker-radius-outline\nstyles:\nicon:\nfill: var(--theme-sys-elevation-surface-neutral2)\n\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nstyles:\ncircle:\nstroke: var(--theme-sys-color-secondary)\nstroke-width: 3em\nopacity: 0.5\n\n# ================================================================\n- toolset: column-icon\nposition:\ncx: 25\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 45\nentity_index: 0\nvariables:\nsak_layout_fce_person_use_entity_picture: '[[sak_layout_fce_person_use_entity_picture]]'\nanimations:\n# Return current state, so always a match!\n- state: '[[[ return state; ]]]'\nstyles:\nicon:\n# Set fill depending on being at home!\nfill: &gt;\n[[[ if (['home', 'not_home'].includes(state)) return 'var(--theme-sys-color-primary)';\nreturn 'var(--theme-sys-color-tertiary)';\n]]]\n# Hide icon if using entity_picture!\ndisplay: &gt;\n[[[ if (tool_config.variables.sak_layout_fce_person_use_entity_picture) return 'none';\nreturn 'initial';\n]]]\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nopacity: 0.9\n\n# ------------------------------------------------------------\n- type: usersvg\nposition:\ncx: 50\ncy: 50\nheight: 45\nwidth: 45\nentity_index: 0\nvariables:\nsak_layout_fce_person_use_entity_picture: '[[sak_layout_fce_person_use_entity_picture]]'\nclip_path:\nposition:\ncx: 50\ncy: 50\nheight: 40            # Slightly crop image (from 45-&gt;40)\nwidth: 40\nradius:\nall: 20             # Radius 20 results in full circle\nstyle: 'images'\nimages:                   # Fetch entity_picture from config or entity itself\n- default: &gt;\n[[[\nif (tool_config.variables.sak_layout_fce_person_use_entity_picture) {\nreturn (entity_config?.entity_picture ||\nentity.attributes?.entity_picture || 'none');\n} else {\nreturn 'none';\n}\n]]]\nanimations:\n# Return current state, so always a match!\n- state: '[[[ return state; ]]]'\nimage: default\nstyles:\nicon:\n# Hide usersvg tool if using icon!\ndisplay: &gt;\n[[[ if (!tool_config.variables.sak_layout_fce_person_use_entity_picture) return 'none';\nreturn 'initial';\n]]]\n\n# ================================================================\n- toolset: zone-icon\nposition:\ncx: 40\ncy: 18\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 14\nentity_index: 0\nanimations:\n# Return current state, so always a match!\n- state: '[[[ return state; ]]]'\nstyles:\ncircle:\n# Set fill depending on being at home or some unwanted state!\nfill: &gt;\n[[[ if (state == 'home') return 'var(--theme-sys-color-primary)';\nif (state == 'not_home') return 'var(--brand-google-red)';\nif (['unavailable', 'unknown'].includes(state)) return 'black';\nreturn 'var(--theme-sys-color-tertiary)';\n]]]\nstyles:\ncircle:\nfill: var(--brand-google-red)\nstroke: var(--primary-background-color)\nstroke-width: 2em\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 18\nentity_index: 0\nvariables:\nzone_ids: '[[sak_layout_fce_person_zone_entities]]'\nanimations:\n# Return current state, so always a match!\n- state: '[[[ return state; ]]]'\n# Fetch icon of zone. If no match on zone, the state 'not_home' is given.\n# Check that state, and return the 'not home' icon in that case!\nicon: &gt;\n[[[ if (state == 'not_home') return 'mdi:home-off-outline';\nif (state == 'home') return states['zone.home'].attributes.icon;\n// For not home, we get the friendly name as input. Must find that one to retrieve\n// the zone's id...\n\nfor (var i=0; i&lt;tool_config.variables.zone_ids.length; i++) {\nvar zone = states[tool_config.variables.zone_ids[i]];\nif (zone &amp;&amp; zone.attributes.friendly_name == state) {\nreturn states[zone.entity_id].attributes.icon;\n}\n}\nreturn 'mdi:map-marker-question';\n]]]\nstyles:\nicon:\nfill: var(--primary-background-color)\nstyles:\nicon:\nfill: var(--primary-background-color)\n\n# ================================================================\n- toolset: column-name\nposition:\ncx: 70\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 37\nentity_index: 0\nstyles:\nname:\ntext-anchor: start\nfont-size: 30em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: start\nfont-size: 26em\nfont-weight: 500\nopacity: 0.7\n</code></pre>","tags":["Example","Functional Card","Person Card"]},{"location":"functional-cards/series3/functional-card-awair-card/","title":"Functional Cards Series 3: Awair Cards","text":"<p>Series 3 will be released in 2025!</p>","tags":["Example","Functional Card - Series 3","Awair Element Cards"]},{"location":"functional-cards/series3/functional-card-awair-card/#visualization","title":"Visualization","text":"<p>These cards mimic the display of an Awair Element.</p> <p>The graphs are not specifically for Awair sensor data. They can be used for other sensors too!</p> <ul> <li> <p> Awair Element Card #3a</p> <p>The card that matches the Awair display without icons which column is which sensor! </p> <p> </p> <p> Awair Card #3a</p> </li> <li> <p> Awair Element Card #3b</p> <p>The same as #3a, but now with icons for each sensor, so you don't have to memorize which column is which sensor! The background icon is ommitted.</p> <p> </p> <p> Awair Card #3b</p> </li> <li> <p> Awair Element Card #3c</p> <p>Same as example #3b, but now with rounded, rectangles for the sensor values instead of the Awair circles. </p> <p> </p> <p> Awair Card #3c</p> </li> </ul> Description Aspect Ratio Target Size A cards show Awair sensor data in different ways. 1/1 Grid with 2 columns","tags":["Example","Functional Card - Series 3","Awair Element Cards"]},{"location":"functional-cards/series3/functional-card-awair-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Example","Functional Card - Series 3","Awair Element Cards"]},{"location":"functional-cards/series3/functional-card-awair-card/#awair-element-card-3a","title":"Awair Element Card #3a","text":"<p> 4.0.1</p>","tags":["Example","Functional Card - Series 3","Awair Element Cards"]},{"location":"functional-cards/series3/functional-card-awair-card/#usage","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.awair_element_study_score\nname: 'Awair Element'\narea: 'Study'\n- entity: sensor.awair_element_study_temperature\nname: 'Temp'\narea: 'Study'\n- entity: sensor.awair_element_study_humidity\nname: 'Humidity'\narea: 'Study'\ndecimals: 0\n- entity: sensor.awair_element_study_carbon_dioxide\nname: 'CO2'\narea: 'Study'\n- entity: sensor.awair_element_study_volatile_organic_compounds\nname: 'Chemicals'\narea: 'Study'\n- entity: sensor.awair_element_study_pm2_5\nname: 'PM2.5'\narea: 'Study'\nicon: mdi:dots-hexagon\nlayout:\ntemplate:\nname: sak_layout_fce2_awair3a\n</code></pre>","tags":["Example","Functional Card - Series 3","Awair Element Cards"]},{"location":"functional-cards/series3/functional-card-awair-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 4.0.1</p> Full definition of layout template","tags":["Example","Functional Card - Series 3","Awair Element Cards"]},{"location":"functional-cards/series3/functional-card-awair-card/#awair-element-card-3b","title":"Awair Element Card #3b","text":"<p> 4.0.1</p>","tags":["Example","Functional Card - Series 3","Awair Element Cards"]},{"location":"functional-cards/series3/functional-card-awair-card/#usage_1","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.awair_element_study_score\nname: 'Awair Element'\narea: 'Study'\n- entity: sensor.awair_element_study_temperature\nname: 'Temp'\narea: 'Study'\n- entity: sensor.awair_element_study_humidity\nname: 'Humidity'\narea: 'Study'\ndecimals: 0\n- entity: sensor.awair_element_study_carbon_dioxide\nname: 'CO2'\narea: 'Study'\n- entity: sensor.awair_element_study_volatile_organic_compounds\nname: 'Chemicals'\narea: 'Study'\n- entity: sensor.awair_element_study_pm2_5\nname: 'PM2.5'\narea: 'Study'\nicon: mdi:dots-hexagon\nlayout:\ntemplate:\nname: sak_layout_fce2_awair3b\n</code></pre>","tags":["Example","Functional Card - Series 3","Awair Element Cards"]},{"location":"functional-cards/series3/functional-card-awair-card/#yaml-template-definition_1","title":"YAML Template Definition","text":"<p> 4.0.1</p> Full definition of layout template","tags":["Example","Functional Card - Series 3","Awair Element Cards"]},{"location":"functional-cards/series3/functional-card-awair-card/#awair-element-card-3c","title":"Awair Element Card #3c","text":"<p> 4.0.1</p>","tags":["Example","Functional Card - Series 3","Awair Element Cards"]},{"location":"functional-cards/series3/functional-card-awair-card/#usage_2","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.awair_element_livingroom_score\nname: 'Awair Element'\narea: 'Livingroom'\n- entity: sensor.awair_element_livingroom_temperature\nname: 'Temp'\narea: 'Livingroom'\n- entity: sensor.awair_element_livingroom_humidity\nname: 'Humidity'\narea: 'Livingroom'\ndecimals: 0\n- entity: sensor.awair_element_livingroom_carbon_dioxide\nname: 'CO2'\narea: 'Livingroom'\n- entity: sensor.awair_element_livingroom_volatile_organic_compounds\nname: 'Chemicals'\narea: 'Livingroom'\n- entity: sensor.awair_element_livingroom_pm2_5\nname: 'PM2.5'\narea: 'Livingroom'\nicon: mdi:dots-hexagon\nlayout:\ntemplate:\nname: sak_layout_fce2_awair3c\n</code></pre>","tags":["Example","Functional Card - Series 3","Awair Element Cards"]},{"location":"functional-cards/series3/functional-card-awair-card/#yaml-template-definition_2","title":"YAML Template Definition","text":"<p> 4.0.1</p> Full definition of layout template","tags":["Example","Functional Card - Series 3","Awair Element Cards"]},{"location":"functional-cards/series3/functional-card-binary-sensor-alert1-card/","title":"Functional Cards Series 3: Binary Sensor with Alert Card #1","text":"<p>Series 3 will be released in 2025!</p>","tags":["Design","Functional Card - Series 3","Binary Card with Alert"]},{"location":"functional-cards/series3/functional-card-binary-sensor-alert1-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> Description Aspect Ratio Target Size A card that shows the state of a binary sensor, including an icon as an alert. Card includes battery and link levels, the time of the last state change, and a history chart (per hour of current day) that shows when alerts where detected.Nice for doors, windows and occupancy alerts. 1/1 Grid with 2 columns","tags":["Design","Functional Card - Series 3","Binary Card with Alert"]},{"location":"functional-cards/series3/functional-card-binary-sensor-alert1-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Design","Functional Card - Series 3","Binary Card with Alert"]},{"location":"functional-cards/series3/functional-card-binary-sensor-alert1-card/#usage","title":"Usage","text":"<p> 4.0.1</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: binary_sensor.livingroom_movement_occupancy\narea: Woonkamer\nname: Beweging\n- entity: binary_sensor.livingroom_movement_occupancy\nsecondary_info: last_changed\nformat: time-24h_date-short\n- entity: sensor.livingroom_movement_battery\ndecimals: 0\n- entity: sensor.livingroom_movement_linkquality\ndecimals: 0\nlayout:\ntemplate:\nname: sak_layout_fce2_binary1\n</code></pre> Data Default Required Description entities The four required entities","tags":["Design","Functional Card - Series 3","Binary Card with Alert"]},{"location":"functional-cards/series3/functional-card-binary-sensor-alert1-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 4.0.1</p> Full definition of layout template <pre><code>sak_layout_fce2_binary1:\ntemplate:\ntype: layout\ndefaults: - sak_layout_binary_icon_color: var(--theme-sys-color-primary)\n- sak_layout_binary_icon_color_on: var(--theme-sys-color-error #var(--theme-ref-palette-error50) #var(--theme-sys-color-error-container)\n- sak_layout_binary_icon_animation: flash # none, flash, spin\n- sak_layout_binary_history_color_on: var(--theme-sys-color-error) #var(--theme-sys-color-primary)\n- sak_layout_binary_history_disabled: false\n- sak_layout_battery_colorstops_template: sak_colorstops_battery_level\n- sak_layout_sensor_icon_style: colorstops\n\nlayout:\naspectratio: 1/1\ntoolsets:\n# ==============================================================================\n- toolset: circle-with-icon\nposition:\ncx: 20\ncy: 20\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 12.5\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\ncircle:\nstroke: var(--theme-sys-color-error)\n- state: 'off'\nstyles:\ncircle:\n# stroke: var(--theme-sys-elevation-surface-neutral10)\nstroke: '[[sak_layout_binary_icon_color]]'\nstyles:\ncircle:\nstroke-width: 2em\n# stroke: var(--theme-sys-elevation-surface-neutral10)\nstroke: '[[sak_layout_binary_icon_color]]'\nfill: var(--primary-background-color)\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 15\nentity_index: 0\n# Define template variable for this icon tool, so it can be\n# processed by a piece of JavaScript ;-)\n# The template engine will replace the variable!\nvariables:\nsak_layout_binary_icon_animation : '[[sak_layout_binary_icon_animation]]'\nanimations:\n- state: 'on'\nstyles:\nicon:\n# Use template variable as the source to spin, flash or nothing\n# the config JavaScript parameter is this tools config...\nanimation: &gt;\n[[[ if (tool_config.variables.sak_layout_binary_icon_animation === \"spin\") return \"spin 3s linear infinite\";\nif (tool_config.variables.sak_layout_binary_icon_animation === \"flash\") return \"flash 2s ease-in-out 5\";\nreturn \"\";\n]]]\nfill: '[[sak_layout_binary_icon_color_on]]'\n- state: 'off'\nstyles:\nicon:\nfill: '[[sak_layout_binary_icon_color]]'\nstyles:\nicon:\nfill: '[[sak_layout_binary_icon_color]]'\n\n# ================================================================\n- toolset: colomn-battery\nposition:\ncx: 87.5\ncy: 12.5\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition: &amp;icon_pos\ncx: 50\ncy: 50\nalign: right\nicon_size: 10\nentity_index: 2\nstyles: &amp;icon_styles\nicon:\nfill: var(--primary-text-color)\nopacity: 1\nshow:\nstyle: '[[sak_layout_sensor_icon_style]]'\ncolorlist:\ncolors:\n- var(--theme-sys-color-secondary)\ncolorstops:\ntemplate:\nname: '[[sak_layout_battery_colorstops_template]]'\n\n# ================================================================\n- toolset: colomn-linkquality\nposition:\ncx: 77.5\ncy: 12.5\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition: *icon_pos\nentity_index: 3\nstyles: *icon_styles\nshow:\nstyle: '[[sak_layout_sensor_icon_style]]'\ncolorlist:\ncolors:\n- var(--theme-sys-color-secondary)\ncolorstops:\ntemplate:\nname: '[[sak_layout_battery_colorstops_template]]'\n\n# ==============================================================================\n- toolset: area-name\nposition:\ncx: 7.5\ncy: 45\ntools:\n# ------------------------------------------------------------\n- type: area\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nshow:\nellipsis: 12\nstyles: area: text-anchor: start\nfont-size: 12em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 62.5\nentity_index: 0\nshow:\nellipsis: 12\nstyles: name: text-anchor: start\nfont-size: 10em\nfont-weight: 400\nopacity: 0.6\n\n# ==============================================================================\n- toolset: alert-time-boxes\nposition:\ncx: 50\ncy: 75\ntools:\n# ------------------------------------------------------------\n- type: rectex\nposition:\ncx: 20\ncy: 50\nwidth: 25\nheight: 18\nradius:\nleft: 5\nright: 0\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\nrectex:\nfill: var(--theme-sys-color-error)\n- state: 'off'\nstyles:\nrectex:\nfill: var(--theme-sys-elevation-surface-neutral10)\nstyles:\nrectex:\nfill: var(--theme-sys-elevation-surface-neutral10)\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 20\ncy: 50\nalign: center\nicon_size: 12.5\nentity_index: 0\nanimations:\n- state: 'on'\nicon: mdi:clock-alert-outline\nstyles:\nicon:\nfill: var(--theme-sys-color-on-error)\n- state: 'off'\nicon: mdi:clock-check-outline\nstyles:\nicon:\nfill: var(--primary-background-color)\nstyles:\nicon:\nfill: '[[sak_layout_binary_icon_color]]'\n# ------------------------------------------------------------\n- type: rectex\nposition:\ncx: 64\ncy: 50\nwidth: 57\nheight: 18\nradius:\nleft: 0\nright: 5\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\nrectex:\nfill: var(--theme-sys-elevation-surface-error4)\n- state: 'off'\nstyles:\nrectex:\nfill: var(--theme-sys-elevation-surface-neutral4)\nstyles:\nrectex:\nfill: var(--theme-sys-color-on-error)\n\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 64 #92\ncy: 50\n# entity_index: 1\nentity_indexes:\n- entity_index: 1\n- entity_index: 0\nanimations:\n- state: 'on'\nentity_index: 0\nstyles:\nstate:\nfill: var(--theme-sys-color-error)\n- state: 'off'\nentity_index: 0\nstyles:\nstate:\nfill: var(--theme-sys-elevation-surface-neutral10)\nstyles: state:\n# fill: var(--theme-sys-color-error-container)\nfill: var(--theme-sys-color-error)\nfont-size: 12em\ntext-anchor: middle #end\n# alignment-baseline: middle\nfont-weight: 700\nuom:\n# fill: var(--theme-sys-color-error-container)\nfill: var(--theme-sys-color-error)\nalignment-baseline: hanging\nfont-weight: 600\n\n# ==============================================================================\n- toolset: alert-history\nposition:\ncx: 50\ncy: 92.5\ntools:\n# ------------------------------------------------------------\n- type: sparkline\n# When disabled, SAK will not use this tool\ndisabled: '[[sak_layout_binary_history_disabled]]'\nentity_index: 0\nposition:\ncx: 50\ncy: 50\nwidth: 85\nheight: 3\nmargin: 0\nperiod:\ncalendar:\nperiod: day\noffset: 0\nduration:\nhour: 24\nbins:\nper_hour: 1\nsparkline:\nshow:\nchart_type: barcode\n# chart_variant: stalagmites\nstate_map:\ntemplate:\nname: sak_statemap_binary\n# State value settings\n# - set agg to max to see the binary changes\n# - set lower_bound to -1 to offset 'off' state\n#   the barcode will start wider now, instead of at minimum width\n# - set upper_bound to 1 ('on') to fix upper scale\nstate_values:\naggregate_func: max\nlower_bound: -1\nupper_bound: 1\nbarcode:\ncolumn_spacing: 3\nline_width: 0.1\ncolorstops_transition: hard\ncolorstops:\ncolors:\n- value: 0\ncolor: var(--theme-sys-elevation-surface-neutral10)\n- value: 1\ncolor: '[[sak_layout_binary_history_color_on]]'\nstyles: tool: opacity: 1\nbarcode_graph:\nrx: 5\nry: 5\n</code></pre>","tags":["Design","Functional Card - Series 3","Binary Card with Alert"]},{"location":"functional-cards/series3/functional-card-electricity-big-card/","title":"Functional Cards Series 3: Big Electricity Cards","text":"<p>Series 3 will be released in 2025!</p>","tags":["Example","Functional Card - Series 3","Electricity Cards"]},{"location":"functional-cards/series3/functional-card-electricity-big-card/#visualization","title":"Visualization","text":"<p>These big cards show electricity sensors using sparkline graphs.</p> <p>These are really big cards, but do show lots of the possibilities of the Swiss Army Knife Card and the sparkline tool.</p> <p>These are really advanced cards (lots of YAML...)</p> <ul> <li> <p> Electricity Card \"#3\"</p> <p>I have no solar panels, so the blue part of the flower is fake!</p> <p> </p> <p>[ Electricity #3 Example][Electricity #3 Example] </p> </li> <li> <p> Electricity Card \"#4\"</p> <p>I have no solar panels, so the blue part of the flower is fake!</p> <p>The power sensor just changed when I took the screenshot (dark mode only)</p> <p>so you see the left graph having animated bars, and in the block below you see 0,137kW while the graph is still showing the previous data (red, so &gt; 2kW).</p> <p> </p> <p>[ Electricity #4 Example][Electricity #4 Example] </p> </li> <li> <p> Electricity Card \"#5\"</p> <p>I have no solar panels, so the blue part of the flower is fake!</p> <p> </p> <p>[ Electricity #5 Example][Electricity #5 Example] </p> </li> </ul> Description Aspect Ratio Target Size A cards show Awair sensor data in different ways. 1/1 Grid with 2 columns","tags":["Example","Functional Card - Series 3","Electricity Cards"]},{"location":"functional-cards/series3/functional-card-electricity-big-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Example","Functional Card - Series 3","Electricity Cards"]},{"location":"functional-cards/series3/functional-card-electricity-big-card/#electricity-card-3-example","title":"Electricity Card #3 Example","text":"<p> 4.0.1</p> <p>The card shows the following data:</p> <ul> <li>The header shows the electricity used (average/min/max) of the last 24 hours</li> <li>The next part shows the electricity used (from the grid, left graph), and the electricity returned to the grid (right graph). In the middle is a 'flower' that shows the current to/from grid, and the (relative) usage per 30 minutes. The inner circle (Blue) shows today's history of delivered to the grid and the outer circle (Green/orange/yellow/red) shows today's history of used from the grid.</li> <li>The next part shows per phase (3 phases, 25A) used/returned from the grid</li> <li>Then the totals used from the grid: current usage, today, this month, this year</li> <li>Last but not least the totals returned to the grid: current usage, today, this month, this year...</li> </ul> <p> </p>","tags":["Example","Functional Card - Series 3","Electricity Cards"]},{"location":"functional-cards/series3/functional-card-electricity-big-card/#usage","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n## Today actual power\n# 0..3\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'Total'\n- entity: sensor.dsmr_reading_phase_currently_delivered_l1\nname: 'L1'\n- entity: sensor.dsmr_reading_phase_currently_delivered_l2\nname: 'L2'\n- entity: sensor.dsmr_reading_phase_currently_delivered_l3\nname: 'L3'\n## Returned actual power\n# 4..6\n- entity: sensor.dsmr_reading_electricity_currently_returned\nname: 'Total'\n- entity: sensor.dsmr_reading_phase_currently_returned_l1\nname: 'L1'\n- entity: sensor.dsmr_reading_phase_currently_returned_l2\nname: 'L2'\n- entity: sensor.dsmr_reading_phase_currently_returned_l3\nname: 'L3'\n\n## Today actual energy\n# 7..9\n- entity: sensor.dsmr_day_consumption_electricity_merged\nname: 'Today'\ndecimals: 2\n- entity: sensor.dsmr_current_month_electricity_merged\nname: 'This Month'\ndecimals: 1\n- entity: sensor.dsmr_current_year_electricity_merged\nname: 'This Year'\ndecimals: 0\n## Returned stuff\n# 10..12\n- entity: sensor.dsmr_day_consumption_electricity_returned_merged\nname: 'Today'\ndecimals: 2\n- entity: sensor.dsmr_current_month_electricity_returned_merged\nname: 'This Month'\ndecimals: 1\n- entity: sensor.dsmr_current_year_electricity_returned_merged\nname: 'This Year'\ndecimals: 0\nlayout:\ntemplate:\nname: sak_layout_fce3_electricity3\n</code></pre>","tags":["Example","Functional Card - Series 3","Electricity Cards"]},{"location":"functional-cards/series3/functional-card-electricity-big-card/#electricity-card-4-example","title":"Electricity Card #4 Example","text":"<p> 4.0.1</p> <p>The card shows the following data:</p> <ul> <li>The header shows the electricity used (average/min/max) of the last 24 hours</li> <li>The next part shows the electricity used (from the grid, left graph), and the electricity returned to the grid (right graph). In the middle is a 'flower' that shows the current to/from grid, and the (relative) usage per 30 minutes. The inner circle (Blue) shows today's history of delivered to the grid and the outer circle (Green/orange/yellow/red) shows today's history of used from the grid.</li> <li>The next part shows per phase (3 phases, 230V/25A each) the current power used/returned from the grid</li> <li>Then the totals for today (vandaag), this month (Deze Maand) and this year (Dit Jaar) for used from the grid (left/green) and delivered to the grid (on the right/blue)</li> </ul> <p>Blue/green gradients are used for both the backgrounds and the bounding boxes.</p> <p> </p>","tags":["Example","Functional Card - Series 3","Electricity Cards"]},{"location":"functional-cards/series3/functional-card-electricity-big-card/#usage_1","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n## Today actual power\n# 0..3\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'Total'\n- entity: sensor.dsmr_reading_phase_currently_delivered_l1\nname: 'L1'\n- entity: sensor.dsmr_reading_phase_currently_delivered_l2\nname: 'L2'\n- entity: sensor.dsmr_reading_phase_currently_delivered_l3\nname: 'L3'\n## Returned actual power\n# 4..6\n- entity: sensor.dsmr_reading_electricity_currently_returned\nname: 'Total'\n- entity: sensor.dsmr_reading_phase_currently_returned_l1\nname: 'L1'\n- entity: sensor.dsmr_reading_phase_currently_returned_l2\nname: 'L2'\n- entity: sensor.dsmr_reading_phase_currently_returned_l3\nname: 'L3'\n\n## Today actual energy\n# 7..9\n- entity: sensor.dsmr_day_consumption_electricity_merged\nname: 'Vandaag' #'Today'\ndecimals: 2\n- entity: sensor.dsmr_current_month_electricity_merged\nname: 'Deze Maand' #'This Month'\ndecimals: 1\n- entity: sensor.dsmr_current_year_electricity_merged\nname: 'Dit Jaar' #'This Year'\ndecimals: 0\n## Returned stuff\n# 10..12\n- entity: sensor.dsmr_day_consumption_electricity_returned_merged\nname: 'Today'\ndecimals: 2\n- entity: sensor.dsmr_current_month_electricity_returned_merged\nname: 'This Month'\ndecimals: 1\n- entity: sensor.dsmr_current_year_electricity_returned_merged\nname: 'This Year'\ndecimals: 0\nlayout:\ntemplate:\nname: sak_layout_fce3_electricity4\n</code></pre>","tags":["Example","Functional Card - Series 3","Electricity Cards"]},{"location":"functional-cards/series3/functional-card-electricity-big-card/#electricity-card-5-example","title":"Electricity Card #5 Example","text":"<p> 4.0.1</p> <p>The card shows the following data:</p> <ul> <li>The header shows the electricity used (average/min/max) of the last 24 hours</li> <li>The next part shows the central flower (you know what that is showing), on the left (green) the electricity used this month (Deze Maand) and this year (Dit Jaar), and on the right the electricity produced this month (Deze Maand) and this year (Dit Jaar).</li> <li>The next part shows the actual total usage and the actual usage per phase (3 phases, 25A) for power used by the house (green) and produced by the house (blue)</li> </ul> <p>Blue/green gradients are used for both the backgrounds and the bounding boxes.</p> <p> </p>","tags":["Example","Functional Card - Series 3","Electricity Cards"]},{"location":"functional-cards/series3/functional-card-electricity-big-card/#usage_2","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n## Today actual power\n# 0..3\n- entity: sensor.dsmr_reading_electricity_currently_delivered\n# name: 'Total'\n- entity: sensor.dsmr_reading_phase_currently_delivered_l1\nname: 'L1'\n- entity: sensor.dsmr_reading_phase_currently_delivered_l2\nname: 'L2'\n- entity: sensor.dsmr_reading_phase_currently_delivered_l3\nname: 'L3'\n## Returned actual power\n# 4..6\n- entity: sensor.dsmr_reading_electricity_currently_returned\nname: 'Total'\n- entity: sensor.dsmr_reading_phase_currently_returned_l1\nname: 'L1'\n- entity: sensor.dsmr_reading_phase_currently_returned_l2\nname: 'L2'\n- entity: sensor.dsmr_reading_phase_currently_returned_l3\nname: 'L3'\n\n## Today actual energy\n# 7..9\n- entity: sensor.dsmr_day_consumption_electricity_merged\nname: 'Vandaag' #'Today'\ndecimals: 2\n- entity: sensor.dsmr_current_month_electricity_merged\nname: 'Deze Maand' #'This Month'\ndecimals: 1\n- entity: sensor.dsmr_current_year_electricity_merged\nname: 'Dit Jaar' #'This Year'\ndecimals: 0\n## Returned stuff\n# 10..12\n- entity: sensor.dsmr_day_consumption_electricity_returned_merged\nname: 'Vandaag' #'Today'\ndecimals: 2\n- entity: sensor.dsmr_current_month_electricity_returned_merged\nname: 'Deze Maand' #'This Month'\ndecimals: 1\n- entity: sensor.dsmr_current_year_electricity_returned_merged\nname: 'Dit Jaar' #'This Year'\ndecimals: 0\nlayout:\ntemplate:\nname: sak_layout_fce3_electricity5\n</code></pre>","tags":["Example","Functional Card - Series 3","Electricity Cards"]},{"location":"functional-cards/series3/functional-card-electricity-big-card/#sensor-card-4-yaml-template-definition","title":"Sensor Card #4 YAML Template Definition","text":"<p> 4.0.1</p> Full definition of layout template","tags":["Example","Functional Card - Series 3","Electricity Cards"]},{"location":"functional-cards/series3/functional-card-person-card/","title":"Functional Cards Series 3: Person Card","text":"<p>Series 3 will be released in 2025!</p>","tags":["Example","Functional Card - Series 3","Person Card"]},{"location":"functional-cards/series3/functional-card-person-card/#visualization","title":"Visualization","text":"<p>This card uses the Material 3 theme D06, TealBlue</p> <p>This card shows you some possibilities to apply JavaScript to the animations section</p> <p>The card seems like a standard, simple card, but isn't due to some Home Assistant functionalities and the possibilities of using either an icon or an entity picture for the person.</p> <p>The use of JavaScript to fetch the zone's Icon, to do some state dependent color changes and taking care of the \"use entity_picture yes/no\" setting are nice examples of the possibilities that JavaScript adds to tools. It are just a few lines, but very powerful!</p> <p>It also takes care of fetching the icon of additional zones (ie not the home zone).</p> Description Aspect Ratio Target Size A card that shows in which zone a person is, or if in no known zone as away / not home. 1/1 Grid with 2 columns","tags":["Example","Functional Card - Series 3","Person Card"]},{"location":"functional-cards/series3/functional-card-person-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Example","Functional Card - Series 3","Person Card"]},{"location":"functional-cards/series3/functional-card-person-card/#usage","title":"Usage","text":"<p> 4.0.1</p> <p>Using the default mode: an icon for the person entity: <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: person.marco\nname: 'Person'\nicon: mdi:face-man\n- entity: person.marco\nname: 'Person'\nsecondary_info: last_changed\nformat: time-24h_date-short\nlayout:\ntemplate:\nname: sak_layout_fce2_person\nvariables:\n- sak_layout_person_zone_entities:\n- zone.outside\n- zone.marco_work\n</code></pre> Using an <code>entity_picture</code> for the person entity. Picture can be defined here, or (default) the <code>entity_picture</code> defined for the person is used: <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: person.marco\nname: 'Tha Washer'\nicon: mdi:face-man\nentity_picture: \"/local/images/clip-test.jpg\"\n- entity: person.marco\nname: 'Tha Washer'\nsecondary_info: last_changed\nformat: time-24h_date-short\n\nlayout:\ntemplate:\nname: sak_layout_fce2_person\nvariables:\n- sak_layout_person_use_entity_picture: true\n- sak_layout_person_zone_entities:\n- zone.outside\n- zone.marco_work\n</code></pre></p> Data Default Required Description entities The person entity sak_layout_person_zone_entities The list of zone entities for this person to be displayed. There is no limit, it is really a list which is used when the person is not at home! sak_layout_person_use_entity_picture false If set to true, an entity picture is displayed instead of the persons icon. Default the picture configured for the person is used, but can be overridden by specifying an entity_picture in the entity configuration in the view","tags":["Example","Functional Card - Series 3","Person Card"]},{"location":"functional-cards/series3/functional-card-person-card/#yaml-template-definition","title":"YAML Template Definition","text":"<p> 4.0.1</p> Full definition of layout template <pre><code>sak_layout_fce2_person:\ntemplate:\ntype: layout\ndefaults: - sak_layout_person_use_entity_picture: false\n- sak_layout_person_icon_color: var(--theme-sys-color-primary)\n- sak_layout_person_icon_color_on: var(--theme-sys-color-error)\n- sak_layout_person_history_disabled: false\n- sak_layout_person_history_color_on: var(--theme-sys-color-error)\n\nlayout:\naspectratio: 1/1\ntoolsets:\n# ================================================================\n- toolset: background-icon\nposition:\ncx: 50\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: 'usersvg'\nposition:\ncx: 50\ncy: 30\nheight: 100\nwidth: 100\nclip_path:\nposition:\ncx: 50\ncy: 50\nheight: 60\nwidth: 100\nradius:\nall: 0\nstyle: 'images'\nimages:\n- default: \"/local/images/backgrounds/map-background.jpg\"\nstyles:\nusersvg:\nopacity: 0.8\nmask:\nfill: url(#sak-sparkline-area-mask-tb-0)\n# ==============================================================================\n- toolset: circle-with-icon\nposition:\ncx: 20\ncy: 20\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 12.5\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\ncircle:\nstroke: var(--theme-sys-color-error)\n- state: 'off'\nstyles:\ncircle:\n# stroke: var(--theme-sys-elevation-surface-neutral10)\nstroke: '[[sak_layout_person_icon_color]]'\nstyles:\ncircle:\nstroke-width: 2em\n# stroke: var(--theme-sys-elevation-surface-neutral10)\nstroke: '[[sak_layout_person_icon_color]]'\nfill: var(--primary-background-color)\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 20\nentity_index: 0\nvariables:\nsak_layout_person_use_entity_picture: '[[sak_layout_person_use_entity_picture]]'\nsak_layout_person_icon_color:  '[[sak_layout_person_icon_color]]'\nanimations:\n# Return current state, so always a match!\n- state: '[[[ return state; ]]]'\nstyles:\nicon:\n# Set fill depending on being at home!\nfill: &gt;\n[[[ if (['home', 'not_home'].includes(state)) return tool_config.variables.sak_layout_person_icon_color;\nreturn 'var(--theme-sys-color-secondary)';\n]]]\n# Hide icon if using entity_picture!\ndisplay: &gt;\n[[[ if (tool_config.variables.sak_layout_person_use_entity_picture) return 'none';\nreturn 'initial';\n]]]\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nopacity: 0.9\n\n# ------------------------------------------------------------\n- type: usersvg\nposition:\ncx: 50\ncy: 50\nheight: 20\nwidth: 20\nentity_index: 0\nvariables:\nsak_layout_person_use_entity_picture: '[[sak_layout_person_use_entity_picture]]'\nclip_path:\nposition:\ncx: 50\ncy: 50\nheight: 20            # Slightly crop image (from 45-&gt;40)\nwidth: 20\nradius:\nall: 10             # Radius 20 results in full circle\nstyle: 'images'\nimages:                   # Fetch entity_picture from config or entity itself\n- default: &gt;\n[[[\nif (tool_config.variables.sak_layout_person_use_entity_picture) {\nreturn (entity_config?.entity_picture ||\nentity.attributes?.entity_picture || 'none');\n} else {\nreturn 'none';\n}\n]]]\nanimations:\n# Return current state, so always a match!\n- state: '[[[ return state; ]]]'\nimage: default\nstyles:\nicon:\n# Hide usersvg tool if using icon!\ndisplay: &gt;\n[[[ if (!tool_config.variables.sak_layout_person_use_entity_picture) return 'none';\nreturn 'initial';\n]]]\n\n# - template:\n#     name: tool_valmardav_icon\n\n# ==============================================================================\n- toolset: name\nposition:\ncx: 7.5\ncy: 45\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nshow:\nellipsis: 12\nstyles: name: text-anchor: start\nfont-size: 12em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 62.5\nentity_index: 0\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: start\nfont-size: 10em\nfont-weight: 400\nopacity: 0.6\n\n# ==============================================================================\n- toolset: alert-time-boxes\nposition:\ncx: 50\ncy: 75\ntools:\n# ------------------------------------------------------------\n- type: rectex\nposition:\ncx: 20\ncy: 50\nwidth: 25\nheight: 18\nradius:\nleft: 5\nright: 0\nentity_index: 0\nanimations:\n- state: 'home'\noperator: '!='\nstyles:\nrectex:\nfill: var(--theme-sys-color-error)\n- state: 'home'\nstyles:\nrectex:\nfill: var(--theme-sys-elevation-surface-neutral10)\nstyles:\nrectex:\nfill: var(--theme-sys-elevation-surface-neutral10)\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 20\ncy: 50\nalign: center\nicon_size: 12.5\nentity_index: 0\nvariables:\nzone_ids: '[[sak_layout_person_zone_entities]]'\nanimations:\n# Return current state, so always a match!\n- state: '[[[ return state; ]]]'\n# Fetch icon of zone. If no match on zone, the state 'not_home' is given.\n# Check that state, and return the 'not home' icon in that case!\nicon: &gt;\n[[[ if (state == 'not_home') return 'mdi:home-off-outline';\nif (state == 'home') return states['zone.home'].attributes.icon;\n// For not home, we get the friendly name as input. Must find that one to retrieve\n// the zone's id...\n\nfor (var i=0; i&lt;tool_config.variables.zone_ids.length; i++) {\nvar zone = states[tool_config.variables.zone_ids[i]];\nif (zone &amp;&amp; zone.attributes.friendly_name == state) {\nreturn states[zone.entity_id].attributes.icon;\n}\n}\nreturn 'mdi:map-marker-question';\n]]]\nstyles:\nicon:\nfill: var(--primary-background-color)\nstyles:\nicon:\nfill: var(--primary-background-color)\n# ------------------------------------------------------------\n- type: rectex\nposition:\ncx: 64\ncy: 50\nwidth: 57\nheight: 18\nradius:\nleft: 0\nright: 5\nentity_index: 0\nanimations:\n- state: 'home'\nstyles:\nrectex:\nfill: var(--theme-sys-elevation-surface-neutral4)\n- state: 'home'\noperator: '!='\nstyles:\nrectex:\nfill: var(--theme-sys-elevation-surface-error4)\nstyles:\nrectex:\nfill: var(--theme-sys-color-on-error)\n\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 64 #92\ncy: 50\nentity_indexes:\n- entity_index: 1\n- entity_index: 0\nanimations:\n- state: 'home'\nentity_index: 0\nstyles:\nstate:\nfill: var(--theme-sys-elevation-surface-neutral10)\n- state: 'home'\nentity_index: 0\noperator: '!='\nstyles:\nstate:\nfill: var(--theme-sys-color-error)\nstyles: state:\n# fill: var(--theme-sys-color-error-container)\nfill: var(--theme-sys-color-error)\nfont-size: 12em\ntext-anchor: middle #end\n# alignment-baseline: middle\nfont-weight: 700\nuom:\n# fill: var(--theme-sys-color-error-container)\nfill: var(--theme-sys-color-error)\nalignment-baseline: hanging\nfont-weight: 600\n\n# ==============================================================================\n- toolset: alert-history\nposition:\ncx: 50\ncy: 92.5\ntools:\n# ------------------------------------------------------------\n- type: sparkline\n# When disabled, SAK will not use this tool\ndisabled: '[[sak_layout_person_history_disabled]]'\nentity_index: 0\nposition:\ncx: 50\ncy: 50\nwidth: 85\nheight: 3\nmargin: 0\nperiod:\ncalendar:\nperiod: day\noffset: 0\nduration:\nhour: 24\nbins:\nper_hour: 1\nsparkline:\nshow:\nchart_type: barcode\n# chart_variant: stalagmites\nstate_map:\ntemplate:\nname: sak_statemap_person\n# State value settings\n# - set agg to max to see the binary changes\n# - set lower_bound to -1 to offset 'off' state\n#   the barcode will start wider now, instead of at minimum width\n# - set upper_bound to 1 ('on') to fix upper scale\nstate_values:\naggregate_func: max\nlower_bound: -1\nupper_bound: 1\nbarcode:\ncolumn_spacing: 3\nline_width: 0.1\ncolorstops_transition: hard\ncolorstops:\ncolors:\n- value: 0\ncolor: var(--theme-sys-elevation-surface-neutral10)\n- value: 1\ncolor: '[[sak_layout_person_history_color_on]]'\nstyles: tool: opacity: 1\nbarcode_graph:\nrx: 5\nry: 5                </code></pre>","tags":["Example","Functional Card - Series 3","Person Card"]},{"location":"functional-cards/series3/functional-card-sensor4-card/","title":"Functional Cards Series 3: Sensor Cards","text":"<p>Series 3 will be released in 2025!</p>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#visualization","title":"Visualization","text":"<p>These cards show different sorts of sparkline graphs.</p> <p>They use the same SAK template and use variables to specify the type of sparkline, colorstops and more!</p> <ul> <li> <p> Sensor with Sparkline \"Line\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> <p> Line Example</p> </li> <li> <p> Sensor with Sparkline \"Line/MinMax\"</p> <p>A sensor card with a sparkline showing the history of today with Min/Max values. </p> <p> </p> <p> Line/MinMax Example</p> </li> <li> <p> Sensor with Sparkline \"Area\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> <p> Area Example</p> </li> <li> <p> Sensor with Sparkline \"Barcode\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> <p> Barcode Example</p> </li> <li> <p> Sensor with Sparkline \"Barcode/Audio\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> <p> Barcode/Audio Example</p> </li> <li> <p> Sensor with Sparkline \"Barcode/Sta...\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> <p> Barcode/Stalagmites Example</p> </li> <li> <p> Sensor with Sparkline \"Bar\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> <p> Bar Example</p> </li> <li> <p> Sensor with Sparkline \"Dots\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> <p> Dots Example</p> </li> <li> <p> Sensor with Sparkline \"Graded/Rank\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> <p> Graded/Rank Order Example</p> </li> <li> <p> Sensor with Sparkline \"Equalizer\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> <p> Equalizer Example</p> </li> </ul> Description Aspect Ratio Target Size A cards show Awair sensor data in different ways. 1/1 Grid with 2 columns","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#interaction","title":"Interaction","text":"Part Description Card All tools connected to an entity do show by default the \"more-info\" dialog once clicked","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#sensor-card-4-line-example","title":"Sensor Card #4 - Line Example","text":"<p> 4.0.1</p> <p> </p>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#usage","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.awair_element_study_pm2_5\nname: 'PM2.5'\narea: 'Study'\nicon: mdi:dots-hexagon\nlayout:\ntemplate:\nname: sak_layout_fce3_sensor4\nvariables:\n- sak_layout_awair_chart_type: line\n- sak_layout_awair_background_icon_disabled: false\n- sak_layout_awair_sensor_colorstop_v1: sak_colorstops_awair_pm25_v1\n- sak_layout_awair_sensor_colorstop_v2: sak_colorstops_awair_pm25_v2\n- sak_layout_awair_sensor_scale_max: 100\n</code></pre>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#sensor-card-4-lineminmax-example","title":"Sensor Card #4 - Line/MinMax Example","text":"<p> 4.0.1</p> <p>Draws the actual line (average values) and the min/max values on the background.</p> <p> </p>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#usage_1","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.awair_element_study_pm2_5\nname: 'PM2.5'\narea: 'Study'\nicon: mdi:dots-hexagon\nlayout:\ntemplate:\nname: sak_layout_fce3_sensor4\nvariables:\n- sak_layout_awair_chart_type: line\n- sak_layout_awair_background_icon_disabled: false\n- sak_layout_awair_sensor_colorstop_v1: sak_colorstops_awair_pm25_v1\n- sak_layout_awair_sensor_colorstop_v2: sak_colorstops_awair_pm25_v2\n- sak_layout_awair_sensor_scale_max: 100\n- sak_layout_sensor_line_show_minmax: true\n</code></pre>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#sensor-card-4-area-example","title":"Sensor Card #4 - Area Example","text":"<p> 4.0.1</p>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#usage_2","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.kitchen_group_energy_power\nname: 'Power'\narea: 'Kitchen'\nlayout:\ntemplate:\nname: sak_layout_fce3_sensor4\nvariables:\n- sak_layout_awair_chart_type: area\n- sak_layout_awair_background_icon_disabled: false\n- sak_layout_awair_sensor_colorstop_v1: sak_colorstops_energy_4000w_v1\n- sak_layout_awair_sensor_colorstop_v2: sak_colorstops_energy_4000w_v2\n- sak_layout_awair_sensor_scale_max: 250\n</code></pre>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#sensor-card-4-barcode-example","title":"Sensor Card #4 - Barcode Example","text":"<p> 4.0.1</p>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#usage_3","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.awair_element_study_carbon_dioxide\nname: 'CO2'\narea: 'Study'\nlayout:\ntemplate:\nname: sak_layout_fce3_sensor4\nvariables:\n- sak_layout_awair_chart_type: barcode\n- sak_layout_awair_background_icon_disabled: false\n- sak_layout_awair_sensor_colorstop_v1: sak_colorstops_awair_co2_v1\n- sak_layout_awair_sensor_colorstop_v2: sak_colorstops_awair_co2_v2\n- sak_layout_awair_sensor_scale_max: 3000\n</code></pre>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#sensor-card-4-barcodeaudio-example","title":"Sensor Card #4 - Barcode/Audio Example","text":"<p> 4.0.1</p>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#usage_4","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.kitchen_group_energy_voltage\nname: 'Voltage'\narea: 'Kitchen'\nlayout:\ntemplate:\nname: sak_layout_fce3_sensor4\nvariables:\n- sak_layout_awair_chart_type: barcode\n- sak_layout_awair_chart_variant: audio\n- sak_layout_awair_background_icon_disabled: false\n- sak_layout_awair_sensor_colorstop_v1: sak_colorstops_awair_voc_v1\n- sak_layout_awair_sensor_colorstop_v2: sak_colorstops_awair_voc_v2\n- sak_layout_awair_sensor_scale_max: 250\n</code></pre>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#sensor-card-4-barcodestalagmites-example","title":"Sensor Card #4 - Barcode/Stalagmites Example","text":"<p> 4.0.1</p>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#usage_5","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.awair_element_study_carbon_dioxide\nname: 'CO2'\narea: 'Study'\nlayout:\ntemplate:\nname: sak_layout_fce3_sensor4\nvariables:\n- sak_layout_awair_chart_type: barcode\n- sak_layout_awair_chart_variant: stalagmites\n- sak_layout_awair_background_icon_disabled: false\n- sak_layout_awair_sensor_colorstop_v1: sak_colorstops_awair_co2_v1\n- sak_layout_awair_sensor_colorstop_v2: sak_colorstops_awair_co2_v2\n- sak_layout_awair_sensor_scale_max: 3000\n</code></pre>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#sensor-card-4-bar-example","title":"Sensor Card #4 - Bar Example","text":"<p> 4.0.1</p>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#usage_6","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.awair_element_study_humidity\nname: 'Humidity'\narea: 'Study'\ndecimals: 0\nlayout:\ntemplate:\nname: sak_layout_fce3_sensor4\nvariables:\n- sak_layout_awair_chart_type: bar\n- sak_layout_awair_background_icon_disabled: false\n- sak_layout_awair_sensor_colorstop_v1: sak_colorstops_awair_humidity_v1\n- sak_layout_awair_sensor_colorstop_v2: sak_colorstops_awair_humidity_v2\n- sak_layout_awair_sensor_scale_max: 100\n</code></pre>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#sensor-card-4-dots-example","title":"Sensor Card #4 - Dots Example","text":"<p> 4.0.1</p>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#usage_7","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.awair_element_study_pm2_5\nname: 'PM2.5'\narea: 'Study'\nicon: mdi:dots-hexagon\nlayout:\ntemplate:\nname: sak_layout_fce3_sensor4\nvariables:\n- sak_layout_awair_chart_type: dots\n- sak_layout_awair_background_icon_disabled: false\n- sak_layout_awair_sensor_colorstop_v1: sak_colorstops_awair_pm25_v1\n- sak_layout_awair_sensor_colorstop_v2: sak_colorstops_awair_pm25_v2\n- sak_layout_awair_sensor_scale_max: 100\n</code></pre>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#sensor-card-4-gradedrank-order-example","title":"Sensor Card #4 - Graded/Rank Order Example","text":"<p> 4.0.1</p>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#usage_8","title":"Usage","text":"<p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.awair_element_study_carbon_dioxide\nname: 'CO2'\narea: 'Study'\nlayout:\ntemplate:\nname: sak_layout_fce3_sensor4\nvariables:\n- sak_layout_awair_background_icon_disabled: false\n- sak_layout_awair_sensor_colorstop_v1: sak_colorstops_awair_co2_v1\n- sak_layout_awair_sensor_colorstop_v2: sak_colorstops_awair_co2_v2\n- sak_layout_awair_sensor_scale_max: 3000\n</code></pre>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#sensor-card-4-equalizer-example","title":"Sensor Card #4 - Equalizer Example","text":"<p> 4.0.1</p>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#usage_9","title":"Usage","text":"<p><code>Fill</code> field must be set to <code>false</code></p> <p>Otherwise the equalizer does strange things with the first row.</p> <p>Replace example entities with your entities!</p> <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.awair_element_study_carbon_dioxide\nname: 'CO2'\narea: 'Study'\nlayout:\ntemplate:\nname: sak_layout_fce3_sensor4\nvariables:\n- sak_layout_awair_chart_type: equalizer\n- sak_layout_awair_background_icon_disabled: false\n- sak_layout_awair_sensor_colorstop_v1: sak_colorstops_awair_co2_v1\n- sak_layout_awair_sensor_colorstop_v2: sak_colorstops_awair_co2_v2\n- sak_layout_awair_sensor_scale_max: 3000\n</code></pre>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"functional-cards/series3/functional-card-sensor4-card/#sensor-card-4-yaml-template-definition","title":"Sensor Card #4 YAML Template Definition","text":"<p> 4.0.1</p> Full definition of layout template <pre><code>sak_layout_fce3_sensor4:\ntemplate:\ntype: layout\ndefaults: # Chart types barcode, dots, line, area, bar or graded work nicely\n# The equalizer not!\n- sak_layout_awair_chart_type: graded\n# Check documentation for chart variant per chart type\n- sak_layout_awair_chart_variant: rank_order\n- sak_layout_awair_background_icon_disabled: false\n- sak_layout_awair_sensor_colorstop_v1: sak_colorstops_awair_temperature_v1\n- sak_layout_awair_sensor_colorstop_v2: sak_colorstops_awair_temperature_v2\n- sak_layout_awair_sensor_scale_max: 100\n\nlayout:\naspectratio: 1/1\ntoolsets:\n# ==============================================================================\n- toolset: background-icon\nposition:\ncx: 100\ncy: 37.5\ntools:\n# ------------------------------------------------------------\n- type: icon\n# When disabled, SAK will not use this tool\ndisabled: '[[sak_layout_awair_background_icon_disabled]]'\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 50\nentity_index: 0\nstyles:\nicon:\nfill: var(--theme-sys-elevation-surface-neutral3)\n# ==============================================================================\n- toolset: circle-with-icon\nposition:\ncx: 20\ncy: 20\ntools:\n# ------------------------------------------------------------\n- type: 'segarc'\nentity_index: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 0\nend_angle: 360\nwidth: 2\nradius: 12.5\nscale:\nmin: 0\nmax: '[[sak_layout_awair_sensor_scale_max]]'\nshow:\nscale: false\nstyle: 'colorstops'\nlastcolor: true\nsegments:\ncolorstops:\ntemplate: name: '[[sak_layout_awair_sensor_colorstop_v1]]'\nstyles:\nforeground:\nfill: var(--theme-gradient-color-02)\nbackground:\nfill: var(--primary-background-color)\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 9\nentity_index: 0\ncolorstops:\ntemplate: name: '[[sak_layout_awair_sensor_colorstop_v1]]'\nshow:\nstyle: colorstops\nstyles:\ncircle:\ntransition: fill 2s ease\nstroke-width: 2em\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 15\nentity_index: 0\nstyles:\nicon:\nfill: var(--primary-background-color)\n# ==============================================================================\n- toolset: area-name\nposition:\ncx: 7.5\ncy: 45\ntools:\n# ------------------------------------------------------------\n- type: area\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nshow:\nellipsis: 12\nstyles: area: text-anchor: start\nfont-size: 12em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 62.5\nentity_index: 0\nshow:\nellipsis: 16\nstyles: name: text-anchor: start\nfont-size: 10em\nfont-weight: 400\nopacity: 0.6\n\n# ==============================================================================\n- toolset: score-state\nposition:\ncx: 92.8\ncy: 15\ntools:\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nshow: uom: end\nstyles:\nstate:\nfont-size: 15em\ntext-anchor: end\nfont-weight: 700\nuom:\nfont-weight: 600\n\n# ===============================================================\n- toolset: graph-sensor\nposition:\ncx: 50\ncy: &amp;sensor_cy 78\ntools:\n# ------------------------------------------------------------\n- type: sparkline\nposition: &amp;graph_pos\ncx: 50\ncy: 50\nwidth: 85\nheight: 25\nentity_index: 0\nentity_indexes:\n- entity_index: 0\nperiod:\ncalendar:\nperiod: day\noffset: 0\nduration:\nhour: 24\nbins:\nper_hour: 1\nsparkline:\nanimate: true\nshow:\nchart_type: '[[sak_layout_awair_chart_type]]'\nchart_variant: '[[sak_layout_awair_chart_variant]]'\nfill: fade\nstate_values:\naggregate_func: avg\narea:\nline_width : 1.5\nbar:\nline_width : 0.1\ncolum_spacing: 1\ndots:\nline_width: 2\nequalizer:\nvalue_buckets: 5\ngraded:\nsquare: true\nline_width : 1.5\nline:\nline_width : 1.5\nx_lines:\nlines:\n- name: x_axis\nzpos: below yshift: 15\n- name: ticks\nzpos: below yshift: 16\ncolorstops_transition: hard\ncolorstops:\ntemplate:\nname: '[[sak_layout_awair_sensor_colorstop_v2]]'\nstyles: &amp;graded_rank_order_styles\nbarcode_graph:\nrx: 50%\nry: 5%\ngraded_background:\ntransition: fill 2s ease\nrx: 50%\nry: 50%\ngraded_foreground:\ntransition: fill 2s ease\nrx: 50%\nry: 50%\nx_axis:\nstroke: var(--theme-sys-elevation-surface-neutral6)\nstroke-width: 0.2rem\nticks:\nstroke: var(--theme-sys-elevation-surface-neutral6)\nstroke-dasharray: 2, 117.5\nstroke-dashoffset: 0\nstroke-width: 0.75rem\n</code></pre>","tags":["Example","Functional Card - Series 3","Sensor Cards"]},{"location":"helpers/gradient-generator-converter/","title":"Gradient generator / converter","text":"","tags":["Helpers","Converters","Gradient","SVG"]},{"location":"helpers/gradient-generator-converter/#css-gradient-generator","title":"CSS Gradient Generator","text":"<p>If you're looking for gradients, look no further!</p> <p>This website can create gradients for you, but also has a large library of example gradients.</p> <p>URL: https://cssgradient.io/</p> <p></p>","tags":["Helpers","Converters","Gradient","SVG"]},{"location":"helpers/gradient-generator-converter/#css3-gradient-svg-image-converter","title":"CSS3 Gradient \u2192 SVG Image Converter","text":"<p>SVG has its own gradient definitions in the <code>&lt;defs&gt;</code> section of an SVG, so you need to convert the CSS gradient to SVG language.</p> <p>Preliminary: there is no support yet for user defined SVG definitions</p>","tags":["Helpers","Converters","Gradient","SVG"]},{"location":"helpers/gradient-generator-converter/#step-1-convert","title":"Step 1: Convert","text":"<p>This gradient converter does all the work for you. </p> <p>Only lineair gradients are supported for conversion</p> <p>No worries: the resulting definition is the same for linear and radial gradients: its just the type of gradient that differs</p> <p>URL: https://www.kmhcreative.com/downloads/CSS2SVG.htm</p> <p>This example uses the light color temperature gradient definition from Home Assistant. I copied that one using the Chrome Inspector </p> <p></p>","tags":["Helpers","Converters","Gradient","SVG"]},{"location":"helpers/gradient-generator-converter/#step-2-add-to-sak-template","title":"Step 2: Add to SAK template","text":"<p>We need the part between the <code>&lt;defs&gt;&lt;/defs&gt;</code>, ie de definition of the gradient itself and put this in the <code>user-svg-definitions.yaml</code> file. Make sure to give it a logical name (the \"id\" part) for use as the <code>fill: url(#gradient-id)</code> property.</p> <p>Convert all single quotes to double quotes!</p> <p>The linear gradient result we need would be: <pre><code>  - descr linair-gradient\ncontent: |\n&lt;linearGradient id=\"linair-gradient\" x1=\"1\" x2=\"0\"&gt;\n&lt;stop stop-color=\"#ffa000\"/&gt;\n&lt;stop offset=\".5\" stop-color=\"#fff\"/&gt;\n&lt;stop offset=\"1\" stop-color=\"#a6d1ff\"/&gt;\n&lt;/linearGradient&gt;\n</code></pre></p> <p> </p> <p>And the radial gradient result we need would be: <pre><code>  - descr radial-gradient\ncontent: |\n&lt;radialGradient id=\"radial-gradient\" x1=\"1\" x2=\"0\"&gt;\n&lt;stop stop-color=\"#ffa000\"/&gt;\n&lt;stop offset=\".5\" stop-color=\"#fff\"/&gt;\n&lt;stop offset=\"1\" stop-color=\"#a6d1ff\"/&gt;\n&lt;/radialGradient&gt;\n</code></pre></p> <p> </p>","tags":["Helpers","Converters","Gradient","SVG"]},{"location":"helpers/palette-generators/","title":"Color Palette generators","text":"<p>Use these color palette generators to create colors for the Swiss Army Knife custom card that match the lightness and WCAG contrast guidelines to make your card stand out!</p>"},{"location":"helpers/palette-generators/#accessible-palette-color-system-generator","title":"Accessible Palette Color System Generator","text":"<p>With the Accessible palette website, you can create Material Design color systems with consistent lightness and contrast. Nice for your custom colors to create matching pairs!</p> <p>You can use a single color with varying lightness for displaying steps in the segmented arc for instance.</p> <p>Also a great tool if you are using the Material 3 themes for Home Assistant!</p> <p>URL: https://accessiblepalette.com/</p> <p></p>"},{"location":"helpers/palette-generators/#color-designer-to-create-tints-and-shades","title":"Color Designer to Create Tints and Shades","text":"<p>Color Designer is great for creating tints and shades, among a few other color combinations.</p> <p>These tints and shades use the HSL (Hue, Saturation, Lightness) representation of the RGB color model. These are not fully accurate compared to the human perception of lightness. Use the previous one, the accessible palette generator for a better match!</p> <p>URL: https://colordesigner.io/</p> <p></p>"},{"location":"helpers/palette-generators/#paletton-color-palette-generator","title":"Paletton Color Palette Generator","text":"<p>Paletton is one of the nice color palette generators around.</p> <p>URL: https://paletton.com/</p> <p></p>"},{"location":"helpers/palette-generators/#material-design-color-palette-generator","title":"Material Design Color Palette Generator","text":"<p>Another one is the MCG generator. It is build on the Material Design color scheme, and can generate any swatch based on the central color.</p> <p>URL: http://mcg.mbitson.com/#!?mcgpalette0=%233f51b5&amp;mcgpalette1=%2326a69a</p> <p></p>"},{"location":"start/installation-0.9.0-b1/","title":"Installation v0.9.0-b1","text":"<p>The installation can be done in two ways:</p> <ul> <li>automatic install using HACS</li> <li>manual install</li> </ul> <p>On top of that you can install the examples using an extra dashboard.</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b1/#automatic-install-using-hacs","title":"Automatic install using HACS","text":"<p>By the time this card is released, it will become available in HACS.</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b1/#manual-install-for-beta-090-b1-december-2021","title":"Manual install (for Beta 0.9.0-b1, December 2021)","text":"<p>This is an OLD version!!</p> <p>The beta version expects the files to be using the following directory structure with their files. If your structure differs, put the files into YOUR location, and don't forget to adjust the <code>!include</code> statements.</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b1/#my-folder-structure","title":"My Folder Structure","text":"<p>I use separate folders for many things in Home Assistant</p> <p>Read and adapt to your own config and structure.</p> <p>Below, as reference the folder structure I use</p> Home AssistantLovelace folderwww folderThemes folder <pre><code>homeassistant-data/\n.\n\u251c\u2500 lovelace/\n\u251c\u2500 themes/\n\u251c\u2500 www/\n\u2502\n\u2514\u2500 configuration.yaml\n\u2514\u2500 ui-lovelace.yaml\n\u2514\u2500 sak-examples-dashboard.yaml\n</code></pre> <p>My Lovelace folder contains the following folders:   <pre><code>lovelace/\n.\n\u251c\u2500 decluttering_templates\n\u2502  \u2514\u2500 decluttering_templates.yaml\n\u2502  \u2514\u2500 (etc)\n\u2502\n\u251c\u2500 sak_templates/\n\u2502  \u2514\u2500 sak_templates.yaml\n\u2502  \u2514\u2500 sak-css-definitions.yaml\n\u2502  \u2514\u2500 user-css-definitions.yaml\n\u2502  \u2514\u2500 (etc)\n\u2502\n\u251c\u2500 resources\n\u2502  \u2514\u2500 resources.yaml\n\u2502\n\u251c\u2500 views/\n\u2502  \u2514\u2500 view-sake1.yaml\n\u2502  \u2514\u2500 (...)\n\u2502  \u2514\u2500 view-sake8.yaml\n</code></pre>   !!! Warning \"The location of the <code>sak_templates</code> folder in the <code>lovelace</code> folder is MANDATORY!\"       This location is hard-coded into the SAK card. SAK needs the templates to function!</p> <pre><code>www/\n.\n\u251c\u2500 community/\n\u2502  \u2514\u2500 wip-swiss-army-knife-card/\n\u2502     \u2514\u2500 dev-swiss-army-knife-card.js\n\u2502\n\u251c\u2500 images/\n   \u251c\u2500 backgrounds/\n   \u2502  \u2514\u2500 balls-background-1.svg   # Used by view-sake6.yaml\n   \u2502\n   \u251c\u2500 weather/                    # Used by all weather-type usersvg tools\n   \u2502  \u2514\u2500 *-day.svg\n   \u2502  \u2514\u2500 *-night.svg\n   \u2502\n   \u2514\u2500 ic-face-1.svg               # Used by Airvisual face display usersvg tools\n   \u2514\u2500 (...)\n   \u2514\u2500 ic-face-6.svg\n</code></pre> <pre><code>themes/\n.\n\u2514\u2500 themes.yaml\n\u2514\u2500 nm-01-gonsboro.yaml\n\u2514\u2500 nm-03-dark-steelblue.yaml\n</code></pre>","tags":["Install"]},{"location":"start/installation-0.9.0-b1/#step-1-add-swiss-army-knife-card-to-your-installation","title":"Step 1: Add Swiss Army Knife Card to your installation","text":"<p>The folder has a wip prefix and the card itself a dev prefix. These will be removed in the official release. This way they can't overwrite each other...</p> <p> Step 1a: Put the card into the community (<code>HACS</code>) folder.</p> <pre><code>www/\n.\n\u251c\u2500 community/\n\u2502  \u2514\u2500 wip-swiss-army-knife-card/\n\u2502     \u2514\u2500 dev-swiss-army-knife-card.js\n</code></pre> <p> Step 1b: Add the card to the <code>resources.yaml</code> file.</p> <p>resources.yaml<pre><code>- url: /hacsfiles/wip-swiss-army-knife-card/dev-swiss-army-knife-card.js\ntype: module\n</code></pre> The <code>resources.yaml</code> file should be included in your <code>configuration.yaml</code> config. I assume that that is already in place if you're using custom cards. configuration.yaml<pre><code>lovelace:\nmode: yaml\nresources: !include lovelace/resources/resources.yaml\n</code></pre></p> <p>I have a YAML only config. Pleas adjust to your own configuration</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b1/#step-2-add-swiss-army-knife-templates","title":"Step 2: Add Swiss Army Knife templates","text":"<p>The second step is to add the <code>sak_templates</code>. These are mandatory.</p> <p> Step 2a: Add the SAK templates to the <code>sak_templates</code> folder.</p> <p>Create the <code>sak_templates</code> folder in the <code>lovelace</code> folder and add all the files.</p> <pre><code>lovelace/\n.\n\u251c\u2500 sak_templates/\n\u2502  \u2514\u2500 sak_templates.yaml\n\u2502  \u2514\u2500 sak-css-definitions.yaml\n\u2502  \u2514\u2500 user-css-definitions.yaml\n\u2502  \u2514\u2500 (etc)\n</code></pre> <p> Step 2b: Include sak_templates to <code>ui-lovelace.yaml</code></p> ui-lovelace.yaml<pre><code># Swiss Army Knife Templates\nsak_templates:\n!include lovelace/sak_templates/sak_templates.yaml\n</code></pre> <p>The supplied <code>sak_templates.yaml</code> file contains the templates for SAK.</p> <p>You don't have to change this file!</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b1/#you-made-it","title":"You made it!","text":"<p>If this is all you want, you're ready to use the Swiss Army Knife card. If not, continue with the next paragraph for the example dashboard install.</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b1/#examples-dashboard-install","title":"Examples dashboard install","text":"<p>If you want to use the examples, you need the full install that includes the example views, decluttering templates, backgrounds and weather and Airvisual images. And last but not least: the used <code>gonsboro</code> and <code>dark steelblue</code> themes in the examples.</p> <p>Check my folder structure to understand my setup</p> <p>So you can adapt it to yours if different.</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b1/#step-1-add-decluttering-templates","title":"Step 1: Add decluttering templates","text":"<p> Step 1a:</p> <p>Install the decluttering card first, if you haven't installed it yet</p> <p>Use HACS to install the decluttering card.</p> <p>Then you should have the following in your <code>ui-lovelace.yaml</code> file: ui-lovelace.yaml<pre><code># Decluttering Templates\ndecluttering_templates:\n!include lovelace/decluttering_templates/decluttering_templates.yaml\n</code></pre>  Step 1b: Add the decluttering templates for SAK to your installation.</p> <p>The supplied <code>decluttering_templates.yaml</code> file contains the templates for SAK.</p> <p>If you already use the decluttering card, merge the files.</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b1/#step-2-add-themes","title":"Step 2: Add themes","text":"<p>Both themes are used by the examples, so include the themes into your <code>themes.yaml</code> file in the themes folder: themes.yaml<pre><code>NM - Gonsboro:\n!include nm-01-gonsboro.yaml\nNM - Dark Steelblue:\n!include nm-03-dark-steelblue.yaml\n</code></pre></p> <p>And the <code>themes.yaml</code> file should (already) be included into your Home Assistant config: configuration.yaml<pre><code># frontend\n# ========\n# Enables the frontend to define themes\n# - https://www.home-assistant.io/integrations/frontend/#defining-themes\nfrontend:\nthemes: !include themes/themes.yaml\n</code></pre></p>","tags":["Install"]},{"location":"start/installation-0.9.0-b1/#step-3-add-sak-examples-dashboard","title":"Step 3: Add SAK examples dashboard","text":"<p>The Swiss Army Knife examples have their own dashboard. This way using them doesn't interfere with you running installation. You can access the examples from the side panel.</p> <p> Step 3a: Add the external images used by the views to your configuration <pre><code>www/\n.\n\u2514\u2500 images/\n   \u251c\u2500 backgrounds/\n   \u2502  \u2514\u2500 balls-background-1.svg   # Used by view-sake6.yaml\n   \u2502\n   \u251c\u2500 weather/                    # Used by all weather-type usersvg tools\n   \u2502  \u2514\u2500 *-day.svg\n   \u2502  \u2514\u2500 *-night.svg\n   \u2502\n   \u2514\u2500 ic-face-1.svg               # Used by Airvisual face display usersvg tools\n   \u2514\u2500 (...)\n   \u2514\u2500 ic-face-6.svg\n</code></pre></p> <p> Step 3b: Add <code>sak-examples-dashboard.yaml</code> in the root folder and include it into your <code>configuration.yaml</code>:</p> configuration.yaml<pre><code>lovelace:\nmode: yaml\nresources: !include lovelace/resources/resources.yaml\n\ndashboards:\nsak-examples:\nmode: yaml\nfilename: sak-examples-dashboard.yaml\ntitle: Swiss Army Knife Examples\nicon: mdi:hospital-box\nshow_in_sidebar: true\n</code></pre> <p>The dashboard contains the 8 example views: sak-examples-dashboard.yaml<pre><code># Decluttering Templates\ndecluttering_templates:\n!include lovelace/decluttering_templates/decluttering_templates.yaml\n\n# Swiss Army Knife Templates\nsak_templates:\n!include lovelace/sak_templates/sak_templates.yaml\n\ntitle: Swiss Army Knife Examples\nviews:\n\n# Swiss Army Knife example views...\n- !include lovelace/views/view-sake1.yaml\n- !include lovelace/views/view-sake2.yaml\n- !include lovelace/views/view-sake3.yaml\n- !include lovelace/views/view-sake4.yaml\n- !include lovelace/views/view-sake5.yaml\n- !include lovelace/views/view-sake6.yaml\n- !include lovelace/views/view-sake7.yaml\n- !include lovelace/views/view-sake8.yaml\n</code></pre></p> <p>The views themselves reference the <code>gonsboro</code> and <code>dark steelblue</code> themes, you can keep your existing theme</p> <p>You don't have to switch to the <code>gonsboro</code> or <code>dark steelblue</code> theme for your installation to see the examples \"as the creator meant them to be seen\", so your existing views stay the same.</p> <p> Step 3c: Restart Home Assistant to have the dashboard installed</p> <p>Make sure to validate your config before you restart Home Assistant </p>","tags":["Install"]},{"location":"start/installation-0.9.0-b1/#you-made-it-again","title":"You made it again!","text":"<p>Now enjoy the examples and don't forget that you have to replace my entities with yours to see the cards as intended!</p> <p></p> <p>You see example 8 with its <code>gonsboro</code> theme, while the rest of the installation uses the <code>default</code> Home Assistant theme.</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b2/","title":"Installation v0.9.0-b2","text":"<p>The installation can be done in two ways:</p> <ul> <li>automatic install using HACS</li> <li>manual install</li> </ul> <p>On top of that you can install the examples using an extra dashboard.</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b2/#automatic-install-using-hacs","title":"Automatic install using HACS","text":"<p>By the time this card is released, it will become available in HACS.</p> <p>NTS: As SAK needs template files, I guess installation can't be fully automated...</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b2/#manual-install-for-beta-090-b2-january-2022","title":"Manual install (for Beta 0.9.0-b2, January 2022)","text":"<p>This is an OLD version!!</p> <p>This second beta contains some changes in the layout and <code>!includes</code> to make it more up-to-date with current Home Assistant possibilities and requires less manual work.</p> <p>The first beta was still based on an very old config of mine. This version uses the possibilities described in Splitting up the configuration.</p> <p>This beta version expects the files to be using the following directory structure with their files. If your structure differs, put the files into YOUR location, and don't forget to adjust the <code>!include</code> statements.</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b2/#my-folder-structure","title":"My Folder Structure","text":"<p>I use separate folders for many things in Home Assistant</p> <p>Read and adapt to your own config and structure.</p> <p>Below, as reference the folder structure I use</p> Home AssistantLovelace folderwww folderThemes folder <pre><code>homeassistant-data/\n.\n\u251c\u2500 lovelace/\n\u251c\u2500 themes/\n\u251c\u2500 www/\n\u2502\n\u251c\u2500 configuration.yaml\n\u251c\u2500 ui-lovelace.yaml\n\u2514\u2500 sak-examples-dashboard.yaml\n</code></pre> <p>My Lovelace folder contains the following folders:   <pre><code>lovelace/\n.\n\u251c\u2500 decluttering_templates\n\u2502  \u251c\u2500 decluttering_templates.yaml\n\u2502  \u2514\u2500 (etc)\n\u2502\n\u251c\u2500 sak_templates/\n\u2502  \u251c\u2500 sak_templates.yaml\n\u2502  \u251c\u2500 definitions/\n\u2502  \u2502  \u251c\u2500 sak-css-definitions.yaml\n\u2502  \u2502  \u251c\u2500 user-css-definitions.yaml\n\u2502  \u2502  \u2514\u2500 sak-svg-definitions.yaml\n\u2502  \u2514\u2500 templates/\n\u2502     \u2514\u2500&lt;templates&gt;.yaml\n\u2502\n\u251c\u2500 resources\n\u2502  \u2514\u2500 resources.yaml\n\u2502\n\u251c\u2500 views/\n\u2502  \u251c\u2500 view-sake1.yml\n\u2502  \u251c\u2500 (...)\n\u2502  \u2514\u2500 view-sake11.yml\n</code></pre>   The location of the <code>sak_templates</code> folder in the <code>lovelace</code> folder is MANDATORY!   This location is hard-coded into the SAK card. SAK needs the templates to function!</p> <pre><code>www/\n.\n\u251c\u2500 community/\n\u2502  \u2514\u2500 wip-swiss-army-knife-card/\n\u2502     \u2514\u2500 dev-swiss-army-knife-card.js\n\u2502\n\u251c\u2500 images/\n   \u251c\u2500 backgrounds/\n   \u2502  \u2514\u2500 balls-background-1.svg   # Used by view-sake6.yaml\n   \u2502\n   \u251c\u2500 weather/                    # Used by all weather-type usersvg tools\n   \u2502  \u251c\u2500 *-day.svg\n   \u2502  \u2514\u2500 *-night.svg\n   \u2502\n   \u251c\u2500 ic-face-1.svg               # Used by Airvisual face display usersvg tools\n   \u251c\u2500 (...)\n   \u2514\u2500 ic-face-6.svg\n</code></pre> <pre><code>themes/\n.\n\u251c\u2500 nm-01-gonsboro.yaml\n\u2514\u2500 nm-03-dark-steelblue.yaml\n</code></pre>","tags":["Install"]},{"location":"start/installation-0.9.0-b2/#step-1-add-swiss-army-knife-card-to-your-installation","title":"Step 1: Add Swiss Army Knife Card to your installation","text":"<p>The folder has a wip prefix and the card itself a dev prefix. These will be removed in the official release. This way they can't overwrite each other...</p> <p> Step 1a: Put the card into the community (<code>HACS</code>) folder.</p> <pre><code>www/\n.\n\u251c\u2500 community/\n\u2502  \u2514\u2500 wip-swiss-army-knife-card/\n\u2502     \u2514\u2500 dev-swiss-army-knife-card.js\n</code></pre> <p> Step 1b: Add the card to the <code>resources.yaml</code> file.</p> <p>resources.yaml<pre><code>- url: /hacsfiles/wip-swiss-army-knife-card/dev-swiss-army-knife-card.min.js\ntype: module\n</code></pre> The <code>resources.yaml</code> file should be included in your <code>configuration.yaml</code> config. I assume that that is already in place if you're using custom cards. configuration.yaml<pre><code>lovelace:\nmode: yaml\nresources: !include lovelace/resources/resources.yaml\n</code></pre></p> <p>I have a YAML only config. Pleas adjust to your own configuration</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b2/#step-2-add-swiss-army-knife-templates","title":"Step 2: Add Swiss Army Knife templates","text":"<p>The second step is to add the <code>sak_templates</code>. These are mandatory.</p> <p> Step 2a: Add the SAK templates to the <code>sak_templates</code> folder.</p> <p>Create the <code>sak_templates</code> folder in the <code>lovelace</code> folder and add all the folders and files.</p> <pre><code>lovelace/\n.\n\u251c\u2500 sak_templates/\n\u2502  \u251c\u2500 sak_templates.yaml\n\u2502  \u251c\u2500 definitions/\n\u2502  \u2502  \u251c\u2500 sak-css-definitions.yaml\n\u2502  \u2502  \u2514\u2500 user-css-definitions.yaml\n\u2502  \u2514\u2500 templates/\n\u2502     \u2514\u2500&lt;templates&gt;.yaml```\n</code></pre> <p> Step 2b: Include sak_templates to <code>ui-lovelace.yaml</code></p> ui-lovelace.yaml<pre><code># Swiss Army Knife Templates\nsak_templates:\n!include lovelace/sak_templates/sak_templates.yaml\n</code></pre> <p>The supplied <code>sak_templates.yaml</code> file contains a wildcard include for the <code>templates</code> folder.</p> <p>So ANY template you add in that folder will be automatically included. You don't have to change this file!</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b2/#you-made-it","title":"You made it!","text":"<p>If this is all you want, you're ready to use the Swiss Army Knife card. If not, continue with the next paragraph for the example dashboard install.</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b2/#examples-dashboard-install","title":"Examples dashboard install","text":"<p>If you want to use the examples, you need the full install that includes the example views, decluttering templates, backgrounds and weather and Airvisual images. And last but not least: the used <code>gonsboro</code> and <code>dark steelblue</code> themes in the examples.</p> <p>Check my folder structure to understand my setup</p> <p>So you can adapt it to yours if different.</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b2/#step-1-add-decluttering-templates","title":"Step 1: Add decluttering templates","text":"<p> Step 1a:</p> <p>Install the decluttering card first, if you haven't installed it yet</p> <p>Use HACS to install the decluttering card.</p> <p>Then you should have the following in your <code>ui-lovelace.yaml</code> file: ui-lovelace.yaml<pre><code># Decluttering Templates\ndecluttering_templates:\n!include lovelace/decluttering_templates/decluttering_templates.yaml\n</code></pre>  Step 1b: Add the decluttering templates for SAK to your installation.</p> <p>The supplied <code>decluttering_templates.yaml</code> file contains the templates for SAK.</p> <p>If you already use the decluttering card, merge the files.</p>","tags":["Install"]},{"location":"start/installation-0.9.0-b2/#step-2-add-themes","title":"Step 2: Add themes","text":"<p>Place the two themes into your <code>themes</code> folder. If you use a wildcard include in your <code>configuration.yaml</code>, then you don't have to do anything anymore: configuration.yaml<pre><code>frontend:\nthemes: !include_dir_merge_named themes/\n</code></pre></p> <p>If you use explicit includes, include the themes manually: <pre><code>!include nm-01-gonsboro.yaml\n!include nm-03-dark-steelblue.yaml\n</code></pre></p>","tags":["Install"]},{"location":"start/installation-0.9.0-b2/#step-3-add-sak-examples-dashboard","title":"Step 3: Add SAK examples dashboard","text":"<p>The Swiss Army Knife examples have their own dashboard. This way using them doesn't interfere with you running installation. You can access the examples from the side panel.</p> <p> Step 3a: Add the external images used by the views to your configuration <pre><code>www/\n.\n\u2514\u2500 images/\n   \u251c\u2500 backgrounds/\n   \u2502  \u2514\u2500 balls-background-1.svg   # Used by view-sake6.yaml\n   \u2502\n   \u251c\u2500 weather/                    # Used by all weather-type usersvg tools\n   \u2502  \u251c\u2500 *-day.svg\n   \u2502  \u2514\u2500 *-night.svg\n   \u2502\n   \u251c\u2500 ic-face-1.svg               # Used by Airvisual face display usersvg tools\n   \u251c\u2500 (...)\n   \u2514\u2500 ic-face-6.svg\n</code></pre></p> <p> Step 3b: Add <code>sak-examples-dashboard.yaml</code> in the root folder and include it into your <code>configuration.yaml</code>:</p> configuration.yaml<pre><code>lovelace:\nmode: yaml\nresources: !include lovelace/resources/resources.yaml\n\ndashboards:\nsak-examples:\nmode: yaml\nfilename: sak-examples-dashboard.yaml\ntitle: Swiss Army Knife Examples\nicon: mdi:hospital-box\nshow_in_sidebar: true\n</code></pre> <p>The dashboard contains the 11 example views: sak-examples-dashboard.yaml<pre><code># Decluttering Templates\ndecluttering_templates:\n!include lovelace/decluttering_templates/decluttering_templates.yaml\n\n# Swiss Army Knife Templates\nsak_templates:\n!include lovelace/sak_templates/sak_templates.yaml\n\ntitle: Swiss Army Knife Examples\nviews:\n\n# Swiss Army Knife example views...\n- !include lovelace/views/view-sake1.yml\n- !include lovelace/views/view-sake2.yml\n- !include lovelace/views/view-sake3.yml\n- !include lovelace/views/view-sake4.yml\n- !include lovelace/views/view-sake5.yml\n- !include lovelace/views/view-sake6.yml\n- !include lovelace/views/view-sake7.yml\n- !include lovelace/views/view-sake8.yml\n- !include lovelace/views/view-sake9.yml\n- !include lovelace/views/view-sake10.yml\n- !include lovelace/views/view-sake11.yml\n</code></pre></p> <p>The views themselves reference the <code>gonsboro</code> and <code>dark steelblue</code> themes, you can keep your existing theme</p> <p>You don't have to switch to the <code>gonsboro</code> or <code>dark steelblue</code> theme for your installation to see the examples \"as the creator meant them to be seen\", so your existing views stay the same.</p> <p> Step 3c: Restart Home Assistant to have the dashboard installed</p> <p>Make sure to validate your config before you restart Home Assistant </p>","tags":["Install"]},{"location":"start/installation-0.9.0-b2/#you-made-it-again","title":"You made it again!","text":"<p>Now enjoy the examples and don't forget that you have to replace my entities with yours to see the cards as intended!</p> <p></p>","tags":["Install"]},{"location":"start/installation/","title":"Installation","text":"<p>If you think the installation steps and description can be made better or simplified, please let me know!</p> <p>It may benefit other users.</p> <p> </p> <p>Welcome to the installation manual for the versatile Swiss Army Knife custom card for Home Assistant.</p> <p>The installation can be done in two ways:</p> <ul> <li>hybrid install using HACS and manual steps</li> <li>full manual install</li> </ul> <p>On top of that you can install the examples using an extra dashboard.</p> <p>I'm using a full YAML configuration, so there might be some flaws in the installation for storage based configurations</p> <p>Check Home Assistant - Multiple Dashboards (https://www.home-assistant.io/dashboards/dashboards/) for more info about mixing storage mode and YAML mode dashboards.</p> <p>This public release candidate contains some fixes from the beta's, some breaking changes (configuration), extra examples, and - for some of the examples - the introduction / integration with HAM3: The Material 3 themes for Home Assistant!</p>","tags":["Install"]},{"location":"start/installation/#hybrid-install-using-hacs-default","title":"Hybrid install using HACS Default","text":"<p> This card is merged in HACS as of June 19th, 2022. But it might not be directly available!</p> <p>According to https://hacs-repositories.web.app/, the merged repository is not yet available!</p> <p>But you can use the HACS custom install. See next paragraph.</p> <p>HACS takes care of manual step 1. So if you installed using HACS, continue with manual step 2.</p> <p>The installation of the Examples Dashboard, which requires example views and SAK templates along some decluttering templates can't be automated using HACS. It requires some manual steps.</p> <p>Follow the HACS messages to install the card and add this card to your <code>resources.yaml</code> file if not using storage but YAML mode!</p> <p>As the Swiss Army Knife custom card needs its own folders and template files, the installation can't be fully automated...</p>","tags":["Install"]},{"location":"start/installation/#hybrid-install-using-hacs-custom","title":"Hybrid install using HACS Custom","text":"<p>You can install this card using the add custom repository option in HACS while the plugin is not yet available.</p> <p>Add https://github.com/AmoebeLabs/swiss-army-knife-card as a plugin, and you should be able to install the card using HACS!</p> <p>Follow the HACS messages to install the card and add this card to your <code>resources.yaml</code> file if not using storage but YAML mode!</p> <p>As the Swiss Army Knife custom card needs its own folders and template files, the installation can't be fully automated...</p>","tags":["Install"]},{"location":"start/installation/#full-manual-install-for-v100-rc1-june-19th-2022","title":"Full Manual install (for v1.0.0-rc.1, June 19th, 2022)","text":"<p>This release candidate version expects the files to be using the following directory structure with their files. If your structure differs, put the files into YOUR location, and don't forget to adjust the <code>!include</code> statements.</p>","tags":["Install"]},{"location":"start/installation/#my-folder-structure","title":"My Folder Structure","text":"<p>I use separate folders for many things in Home Assistant</p> <p>Read and adapt to your own configuration and structure.</p> <p>Below, as reference the folder structure I use. This one shows the files for the full install, including the example dashboard and views.</p> Home AssistantLovelace folderwww folderThemes folder <pre><code>homeassistant-data/\n.\n\u251c\u2500 lovelace/\n\u251c\u2500 themes/\n\u251c\u2500 www/\n\u2502\n\u251c\u2500 configuration.yaml\n\u251c\u2500 ui-lovelace.yaml\n\u2514\u2500 sak-examples-dashboard.yaml\n</code></pre> <p>My Lovelace folder contains the following folders:   <pre><code>lovelace/\n.\n\u251c\u2500 decluttering_templates\n\u2502  \u251c\u2500 decluttering_templates.yaml\n\u2502  \u2514\u2500 (etc)\n\u2502\n\u251c\u2500 resources\n\u2502  \u2514\u2500 resources.yaml\n\u2502\n\u251c\u2500 sak_templates/\n\u2502  \u251c\u2500 definitions/\n\u2502  \u2502  \u2514\u2500 user-css-definitions.yaml\n\u2502  \u251c\u2500 sak_templates.yaml\n\u2502  \u2514\u2500 templates/\n\u2502     \u2514\u2500&lt;templates&gt;.yaml\n\u2502\n\u251c\u2500 views/\n\u2502  \u2514\u2500sak-example-views/\n\u2502    \u251c\u2500 view-sake1.yml\n\u2502    \u251c\u2500 (...)\n\u2502    \u2514\u2500 view-sake12-m3.yml\n</code></pre>   As you can see, I use separate folders for my configuration. The <code>sak_templates</code> folder is included from the <code>ui-lovelace.yaml</code> file.</p> <pre><code>www/\n.\n\u251c\u2500 community/\n\u2502  \u2514\u2500 swiss-army-knife-card/\n\u2502     \u251c\u2500 sak_templates.yaml           # System templates with..\n\u2502     \u251c\u2500 sak-css-definitions.yml      # ..SAK defined CSS definitions for each tool\n\u2502     \u251c\u2500 sak-svg-definitions.yml      # ..SAK defined SVG definitions like filters\n\u2502     \u251c\u2500 SVGInjector.min.js           # Modified SVGInjector\n\u2502     \u251c\u2500 SVGInjector.min.js.gz        # Zipped version (done by HACS)\n\u2502     \u251c\u2500 swiss-army-knife-card.js     # SAK card (minified)\n\u2502     \u2514\u2500 swiss-army-knife-card.js.gz  # Zipped version (done by HACS)\n\u2502\n\u251c\u2500 images/\n   \u251c\u2500 airvisual/                      # Used by Airvisual face display usersvg tools\n   \u2502  \u251c\u2500 ic-face-1.svg               \n   \u2502  \u251c\u2500 (...)\n   \u2502  \u2514\u2500 ic-face-6.svg\n   \u2502\n   \u251c\u2500 backgrounds/\n   \u2502  \u2514\u2500 balls-background-1.svg       # Used by view-sake6.yaml\n   \u2502\n   \u251c\u2500 weather/                        # Used by all weather-type usersvg tools\n   \u2502  \u251c\u2500 *-day.svg\n   \u2502  \u2514\u2500 *-night.svg\n   \u2502\n</code></pre> <pre><code>themes/\n.\n\u251c\u2500 &lt;Material 3 theme&gt;             # Required for example 11 and 12\n\u251c\u2500 nm-01-gonsboro.yaml            # Used theme for the Neumorphic examples\n\u2514\u2500 nm-03-dark-steelblue.yaml      # Used theme for the Neumorphic examples\n</code></pre>","tags":["Install"]},{"location":"start/installation/#step-1-add-swiss-army-knife-card-to-your-installation","title":"Step 1: Add Swiss Army Knife Card to your installation","text":"<p> Step 1a: Download the zip release file onto your computer and unzip!</p> <p> Step 1b: Create the <code>swiss-army-knife-card</code> folder in the <code>www/community</code> folder.</p> <p>Put the contents of the <code>/dist</code> folder of the card into that folder.</p> <pre><code>www/\n.\n\u251c\u2500 community/\n\u2502  \u2514\u2500 swiss-army-knife-card/\n\u2502     \u251c\u2500 sak_templates.yaml       # System templates with..\n\u2502     \u251c\u2500 sak-css-definitions.yml  # ..SAK defined CSS definitions for each tool\n\u2502     \u251c\u2500 sak-svg-definitions.yml  # ..SAK defined SVG definitions like filters\n\u2502     \u251c\u2500 SVGInjector.min.js       # Modified SVGInjector\n\u2502     \u2514\u2500 swiss-army-knife-card.js\n</code></pre> <p> Step 1c: Add the card to the <code>resources.yaml</code> file.</p> <p>resources.yaml<pre><code>- url: /hacsfiles/swiss-army-knife-card/swiss-army-knife-card.js\ntype: module\n</code></pre> The <code>resources.yaml</code> file should be included in your <code>configuration.yaml</code> file. I assume that that is already in place if you're using custom cards. configuration.yaml<pre><code>lovelace:\nmode: yaml\nresources: !include lovelace/resources/resources.yaml\n</code></pre></p> <p>I have a YAML only configuration. Pleas adjust to your own configuration</p> <p>If you use storage mode, add the resource using the UI.</p>","tags":["Install"]},{"location":"start/installation/#step-2-create-folders-for-templates-and-definitions","title":"Step 2: Create folders for templates and definitions","text":"<p> Step 2a:</p> <p>Copy the <code>sak_templates</code> folder from the <code>ha-config\\lovelace\\</code> folder into your <code>lovelace</code> folder.</p> <p>After that you should have the following folders and files (the <code>user-svg-definitions.yaml</code> might be absent, as this one is empty!):</p> <pre><code>lovelace/\n.\n\u251c\u2500 sak_templates/\n\u2502  \u251c\u2500 definitions/\n\u2502  \u2502  \u251c\u2500 user-svg-definitions.yaml\n\u2502  \u2502  \u2514\u2500 user-css-definitions.yaml\n\u2502  \u251c\u2500 sak_templates.yaml\n\u2502  \u2514\u2500 templates/\n\u2502     \u2514\u2500&lt;templates&gt;.yaml\n</code></pre> <p> Step 2b: Include sak_templates to <code>ui-lovelace.yaml</code></p> ui-lovelace.yaml<pre><code># Swiss Army Knife Templates\n#\n# The system templates come with the HACS install and can be updated\n# with a new release. That part is automatic!\nsak_sys_templates:\n!include www/community/swiss-army-knife-card/sak_templates.yaml\n\n# The user templates are created by the user, and won't be updated \n# with a new release. If changes are required, then the user has to\n# upate the template configuration files.\nsak_user_templates:\n!include lovelace/sak_templates/sak_templates.yaml\n</code></pre> <p>The supplied <code>sak_templates.yaml</code> file contains a wildcard include for the <code>templates</code> folder.</p> <p>So ANY template you add in that folder will be automatically included. You don't have to change this file!</p> <p> Step 2c: Add some files to <code>configuration.yaml</code> As long as this card is not a bundle, you have to manually add some references in the <code>cors_allowed_origins</code> defintion of the <code>configuration.yaml</code> file: configuration.yaml<pre><code>http:\ncors_allowed_origins:\n- https://unpkg.com\n- https://unpkg.com/lit-html@1/directives/style-map.js?module\n- https://unpkg.com/lit-html@1/directives/if-defined?module\n- https://unpkg.com/lit-html@%5E1.0.0?module\n- https://unpkg.com/lit-html@1/directives/style-map.js?module\n</code></pre></p>","tags":["Install"]},{"location":"start/installation/#you-made-it","title":"You made it!","text":"<p>If this is all you want, you're ready to use the Swiss Army Knife card. If not, continue with the next paragraph for the example dashboard install.</p>","tags":["Install"]},{"location":"start/installation/#examples-dashboard-install","title":"Examples dashboard install","text":"<p>If you want to use the examples, you need the full install that includes the example views, decluttering templates, backgrounds and weather, and Airvisual images. And last but not least: the used <code>gonsboro</code>, <code>dark steelblue</code> and HAM3 themes in the examples.</p> <p>Check my folder structure to understand my setup</p> <p>So you can adapt it to yours if different.</p>","tags":["Install"]},{"location":"start/installation/#step-1-add-decluttering-templates","title":"Step 1: Add decluttering templates","text":"<p> Step 1a:</p> <p>Install the decluttering card first, if you haven't installed it yet</p> <p>Use HACS to install the decluttering card.</p> <p>Then you should have the following in your <code>ui-lovelace.yaml</code> file: ui-lovelace.yaml<pre><code># Decluttering Templates\ndecluttering_templates:\n!include lovelace/decluttering_templates/decluttering_templates.yaml\n</code></pre>  Step 1b: Add the decluttering templates for SAK to your installation.</p> <p>The supplied <code>decluttering_templates.yaml</code> file contains the templates for SAK.</p> <p>If you already use the decluttering card, merge the files.</p>","tags":["Install"]},{"location":"start/installation/#step-2-add-themes","title":"Step 2: Add themes","text":"<p>Place the supplied themes (<code>ha-config/lovelace/themes</code> folder) into your <code>themes</code> folder. If you use a wildcard include in your <code>configuration.yaml</code>, then you don't have to do anything anymore: configuration.yaml<pre><code>frontend:\nthemes: !include_dir_merge_named themes/\n</code></pre></p> <p>If you use explicit includes, include the themes manually: <pre><code>!include nm-01-gonsboro.yaml\n!include nm-03-dark-steelblue.yaml\n!include ...\n</code></pre></p>","tags":["Install"]},{"location":"start/installation/#step-3-add-sak-examples-dashboard","title":"Step 3: Add SAK examples dashboard","text":"<p>The Swiss Army Knife examples have their own dashboard. This way using them doesn't interfere with you running installation. The YAML dashboard can be used both in YAML and Storage mode. You can access the examples from the side panel.</p> <p> Step 3a: Add the external images used by the views to your configuration <pre><code>www/\n.\n\u2514\u2500 images/\n   \u251c\u2500 airvisual/                  # Used by Airvisual face display usersvg tools\n   \u2502  \u251c\u2500 ic-face-1.svg               \n   \u2502  \u251c\u2500 (...)\n   \u2502  \u2514\u2500 ic-face-6.svg\n   \u2502\n   \u251c\u2500 backgrounds/\n   \u2502  \u2514\u2500 balls-background-1.svg   # Used by view-sake6.yaml\n   \u2502\n   \u251c\u2500 weather/                    # Used by all weather-type usersvg tools\n   \u2502  \u251c\u2500 *-day.svg\n   \u2502  \u2514\u2500 *-night.svg\n   \u2502\n</code></pre></p> <p> Step 3b: Add <code>sak-examples-dashboard.yaml</code> in the root folder and include it into your <code>configuration.yaml</code>:</p> YAML ModeStorage Mode configuration.yaml<pre><code>lovelace:\nmode: yaml\nresources: !include lovelace/resources/resources.yaml\n\ndashboards:\nsak-examples:\nmode: yaml\nfilename: sak-examples-dashboard.yaml\ntitle: Swiss Army Knife Examples\nicon: mdi:hospital-box\nshow_in_sidebar: true\n</code></pre> <p>If you are using storage mode, your configuration should look like this according to Home Assistant documentation about \"Multiple Dashboards\". Adding more dashboards with YAML<pre><code>lovelace:\nmode: storage\n\n# Add yaml dashboards\ndashboards:\nsak-examples:\nmode: yaml\nfilename: sak-examples-dashboard.yaml\ntitle: Swiss Army Knife Examples\nicon: mdi:hospital-box\nshow_in_sidebar: true\n</code></pre></p> <p>The <code>sak-example-dashboard</code> contains the 12 example views and one view (sake99) for showing the definition of a Material 3 theme: sak-examples-dashboard.yaml<pre><code>#################################################################\n#                                                               # \n#             Swiss Army Knife examples dashboard (RC)          #\n#                                                               #\n#             Created: 2021.12.05 (up to Beta 3)                #\n#             Created: 2022.06.05 (from RC 1 onwards)           #\n#                                                               #\n#################################################################\n\n# Decluttering Templates\ndecluttering_templates:\n!include lovelace/decluttering_templates/decluttering_templates.yaml\n\n# Swiss Army Knife Templates\n#\n# The system templates come with the HACS install and can be updated\n# with a new release. That part is automatic!\nsak_sys_templates:\n!include www/community/swiss-army-knife-card/sak_templates.yaml\n\n# The user templates are created by the user, and won't be updated \n# with a new release. If changes are required, then the user has to\n# update the template configuration files.\nsak_user_templates:\n!include lovelace/sak_templates/sak_templates.yaml\n\ntitle: Swiss Army Knife Examples\nviews:\n\n# Swiss Army Knife example views...\n#\n# Each example is manually included, so you can select just a\n# few for testing and integration...\n- !include lovelace/views/sak-example-views/view-sake1.yml\n- !include lovelace/views/sak-example-views/view-sake1-m3.yml\n- !include lovelace/views/sak-example-views/view-sake2.yml\n- !include lovelace/views/sak-example-views/view-sake3.yml\n- !include lovelace/views/sak-example-views/view-sake4.yml\n- !include lovelace/views/sak-example-views/view-sake5.yml\n- !include lovelace/views/sak-example-views/view-sake6.yml\n- !include lovelace/views/sak-example-views/view-sake6-m3.yml\n- !include lovelace/views/sak-example-views/view-sake7.yml\n- !include lovelace/views/sak-example-views/view-sake8.yml\n- !include lovelace/views/sak-example-views/view-sake9.yml\n- !include lovelace/views/sak-example-views/view-sake10.yml\n- !include lovelace/views/sak-example-views/view-sake11-m3.yml\n- !include lovelace/views/sak-example-views/view-sake12-m3.yml\n- !include lovelace/views/sak-example-views/view-sake99-m3.yml\n</code></pre></p> <p>The views themselves reference the <code>gonsboro</code> and <code>dark steelblue</code> themes, you can keep your existing theme</p> <p>You don't have to switch to the <code>gonsboro</code> or <code>dark steelblue</code> theme for your installation to see the examples \"as the creator meant them to be seen\", so your existing views stay the same.</p> <p>The views with '-m3' suffix in their name require a Material 3 Theme to be selected for Home Assistant</p> <p>All the Material 3 themes are included in the <code>ha-config</code> folder on Github!</p> <p> Step 3c: Restart Home Assistant to have the dashboard installed</p> <p>Make sure to validate your config before you restart Home Assistant </p>","tags":["Install"]},{"location":"start/installation/#you-made-it-again","title":"You made it again!","text":"<p>Now enjoy the examples and don't forget that you have to replace my entities with yours to see the cards as intended!</p> <p>Needing inspiration on how to design your own card? Read how I designed all the example cards.</p> <p>If you want to start building right away, head over to the tools and toolsets section! Check the interactions page for user interactions with the tools and toolsets, and last but not least the extensive CSS class and element styling options, CSS animations, colorstops and state operators.</p> <p></p>","tags":["Install"]},{"location":"start/preface/","title":"Getting Started Preface","text":"","tags":["Preface","Background"]},{"location":"start/preface/#preface","title":"Preface","text":"<p>Welcome to the preface of the versatile Swiss Army Knife custom card for Home Assistant!</p>","tags":["Preface","Background"]},{"location":"start/preface/#introduction","title":"Introduction","text":"<p>I am a longtime Home Assistant user. At the time, YAML was about the only way to configure Home Assistant. About every two weeks, you were confronted with the famous list of \"breaking changes\" that led you to change your configuration and explain to the wife that it was okay for the lights to come on during the day and not at night: it only takes me a few hours to fix it. No worries  </p> <p>I am visually oriented. And with the introduction of Lovelace and the creation of countless custom cards, many choices were made available to visualize the sensor data. And thanks to the vibrant community, there was a built-in or custom-card for about everything you wanted.</p>","tags":["Preface","Background"]},{"location":"start/preface/#happy-but-i-want-more","title":"Happy, but I want more!","text":"<p>Despite all those choices, I adapted these cards in many cases to get the visualization I wanted. And by doing that I learned step-by-step the inner workings of a custom card and the basis for these cards: the web-component Lit.</p> <p>During the adaption of another custom card, the question \"What if I would have the possibility to design my own visualization?\" came up more and more. In that case, I could design completely different cards than currently available. But: I'm not a real programmer, I learn by looking at how other people solve problems, and by understanding that, I can create my own code to solve my own problems. So, how feasible is it to create this kind of card?</p>","tags":["Preface","Background"]},{"location":"start/preface/#and-then-shit-happened","title":"And then shit happened...","text":"<p>The kind of shit that can't be fixed easily: my little sister got diagnosed with cancer. The first MRI scans were good though: 100% chance of survival and she got her operation. But then things turned for the worse: metastatic cancer. She died 6 months later in 2021, almost in full isolation due to the covid pandemic.</p> <p>At the time of that fatal message, I needed something positive to balance all the negative things and decided to take the challenge and start building this card: The versatile multi-tool custom card aka the Swiss Army Knife custom card was born!</p>","tags":["Preface","Background"]},{"location":"start/preface/#the-dilemma-release-or-not","title":"The dilemma: release or not?","text":"<p>I stopped working on this custom card after my sister died: I had other things to do, and its purpose had suddenly \"disappeared\" somehow.</p> <p>In November 2021 I asked myself \"What to do now?\". The card is unfinished, no one but me has used it, has no documentation, and given its size, that could be quite a big undertaking. In addition, users will find bugs that need fixing. And I have to do other things too.</p> <p>But what if I get help?</p> <p>I posted a teaser of the card on the Dutch Tweakers forum: and one of them suggested a closed beta. And so it was! About 40 Home Assistant users wanted to become beta testers. That is doable for me! It got me to start creating the documentation you are reading right now!</p> <p>Back in 2021, I had the idea to release the custom card (as RC or BETA) around March/April 2022, but handling my sister's estate appeared to be more complex than I anticipated, so the public RC release was delayed until the end of June 2022. Nearly 2 years after I started building this card!</p> <p>I used Material for MkDocs to create this documentation: a great piece of software with a good navigation system, even better formatting solutions, and on top of that customization to better suit my needs.</p> <p>The documentation uses the \"Learn by Example\" paradigm</p> <p>It's a method I really like. Instead of long, very long tables of information, concrete examples are shown that are easy to understand and use in practice. The examples also show the context and relationship between options, something most tables don't have or are difficult to describe.</p> <p>The examples are real examples used in my own Home Assistant environment. They use (of course) my entity declarations, which you have to replace with your own sensors to make the visualization work. It is because of that reason I use the AirVisual and Met.no weather integration a lot: these ones are very easy to adapt to your own installation.</p>","tags":["Preface","Background"]},{"location":"start/preface/#some-statistics","title":"Some statistics","text":"<p>Last but not least: some statistics.</p> <ul> <li>As of June 2022 about 1.500 hours of work are put into this card, the 12 examples, the Material 3 themes and both manuals. That is with a 40 hour workweek about 9 months of work!</li> <li>The size of the card itself, including comments is about 7.000 lines of JavaScript. I hope, somewhere in the future, I can convert this to TypeScript.</li> <li>I made about 50 sketches and designs in ProCreate on my iPad for visualizations. Just to try out functionality, or to create new functionality.</li> <li>In total, the created Lovelace Views, SAK templates and Decluttering templates cover about 11.000 lines of YAML. File sizes vary between 170 lines for a view with perfect re-use, templates, etc. up to so-called copy/paste views containing many cards and resulting in a size of 3.500 lines of YAML.</li> <li>About 12 example views are created to be used as an example or inspiration for other users than me. These examples are included in the documentation (See Examples) and in GitHub.</li> </ul>","tags":["Preface","Background"]},{"location":"start/what-is-this-card-and-for-whom-is-it/","title":"What is this card and for whom is it?","text":"","tags":["Introduction"]},{"location":"start/what-is-this-card-and-for-whom-is-it/#what-is-this-card-and-for-whom-is-it","title":"What is this card, and for whom is it?","text":"","tags":["Introduction"]},{"location":"start/what-is-this-card-and-for-whom-is-it/#what-is-this-custom-card","title":"What is this custom card?","text":"<p>Well, if you look at some of the examples below (more are in the examples section), you literally see what kind of card this is: it is a versatile custom card that can be used to create unique visualizations!</p> <p>To create your unique design, the Swiss Army Knife custom card has several tools for you to use which can be styled and animated in different ways.</p>","tags":["Introduction"]},{"location":"start/what-is-this-card-and-for-whom-is-it/#yaml-to-define-tools-toolsets-css-styling-and-animations","title":"YAML to define Tools, Toolsets, CSS styling and Animations","text":"<p>The designs are fully defined in YAML, and with the available 17 basic, advanced, and Home Assistant-specific SVG-based tools you can implement your visualization. </p> <p>Things like templates make re-use between designs possible. On top of that, several CSS styling and built-in animation options are available.  You can even define your own CSS classes and animations, and use them in your designs.</p>","tags":["Introduction"]},{"location":"start/what-is-this-card-and-for-whom-is-it/#user-interactions-and-haptic-feedback","title":"User interactions and haptic feedback","text":"<p>You can define user interactions per tool to call the 'more info' dialog or to control lights or switches. You can even define more than 1 action per tap action. Haptic feedback can complement the click/tap action if your mobile phone supports that.</p>","tags":["Introduction"]},{"location":"start/what-is-this-card-and-for-whom-is-it/#material-3-themes-to-have-nice-lightdark-themes","title":"Material 3 themes to have nice light/dark themes","text":"<p>If you want to make the most of this card's styling, use one of the Material 3 themes for Home Assistant. This gives you fully compatible light and dark themes!</p> <p></p> <p>Swiss Army Knife card examples 11 and 12 use these Home Assistant Material 3 themes to implement cards that adapt to theme colors and to theme modes (dark/light).</p>","tags":["Introduction"]},{"location":"start/what-is-this-card-and-for-whom-is-it/#overview-of-all-the-examples","title":"Overview of all the examples","text":"Example 1 - Airvisual and Weather forecast: Example 6 - Weather on SVG background: Example 3 - Sensors: Example 7 - Servers: Example 9 - High Contrast: Example 10 - Colorful mix: Example 11 - Boiler and Electricity: Example 12 - Wide cards:","tags":["Introduction"]},{"location":"start/what-is-this-card-and-for-whom-is-it/#and-for-whom-is-it-meant","title":"And for whom is it meant?","text":"<p>It is not a standard card. It has no fixed design, nor fixed functionality. It doesn't do anything out-of-the-box!</p> <p>This card needs YOU. It needs some time to learn this card, understand its possibilities, and create a design. If that is what you want, this is your card. Let your creativity flow and enjoy the results!</p> <p>If that is not your thing, you should look either at a different card, adapt one of the examples from my installation, or even better: use one of the examples made by me or someone else in the community!</p> <p>And don't feel intimidated by the word \"design\". Most of my designs look like this: A simple sketch on my iPad that is later implemented in a YAML view using trial-and-error!</p> <p></p> <p>You don't have to design your card if some design suits you of course!</p> <p>And if that card is put into a decluttering template for instance, you only have to define the entities for that card and some settings. In this way, a custom-designed card can be used as a fixed-layout card!</p> <p>Example 3 for instance is made that way. The view contains these definitions: From: view-sake3.yml<pre><code>  - type: horizontal-stack\ncards:\n- type: custom:decluttering-card\ntemplate: sak_sensor_history_template_nm_tpl\nvariables:\n- entity: sensor.livingroom_iaq_temperature\n- name: Woonkamer\n- icon: mdi:thermometer\n- type: custom:decluttering-card\ntemplate: sak_sensor_history_template_nm_tpl\nvariables:\n- entity: sensor.kitchen_iaq_temperature\n- name: Keuken\n- icon: mdi:thermometer\n- type: custom:decluttering-card\ntemplate: sak_sensor_history_template_nm_tpl\nvariables:\n- entity: sensor.hall_gf_iaq_temperature\n- name: Hal\n- icon: mdi:thermometer\n</code></pre></p> <p>The electricity card in example 11 and the several cards used in example 12 could also be used in this way! </p> <p>Either way, enjoy this card!</p>","tags":["Introduction"]},{"location":"start/what-is-this-card-and-for-whom-is-it/#where-to-go-from-here","title":"Where to go from here?","text":"<p>Because of the numerous possibilities of this custom card, you might wonder where to start.</p> <p>The answer is: it depends!</p> It is a bit new to me!I like decluttering templates, button-card, etc. I'll take the deep dive! <p>If this is all a bit new, take a look at the 10 Step Tutorials (I just started making them, so there aren't a lot of them yet). </p> <p>They will show you the basics, and some more advanced YAML configurations, and show you step-by-step how to make certain visualizations.</p> <p>If you understand them, take a more in-depth look at the 12 examples.</p> <p>Well, head over to the installation, and install the Examples Dashboard. Then integrate them using your own entities, and start learning from those examples!</p> <p>The examples use different strategies:</p> <ul> <li>A lot of copy/paste YAML</li> <li>Swiss Army Knife Templates</li> <li>Decluttering Templates</li> </ul>","tags":["Introduction"]},{"location":"tools/circle-tool/","title":"The Circle tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>The Circle tool is based on the SVG basic <code>&lt;circle&gt;</code>element shape.</p> <p> </p>","tags":["Tools","Tool","Circle"]},{"location":"tools/circle-tool/#basic-usage","title":"Basic usage","text":"<p>The Circle tool needs a center position and a radius.</p> StandaloneConnected <pre><code>- type: 'circle'            # tooltype is 'circle'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nradius: 25              # radius of circle. Width/height is 50\n</code></pre> <pre><code>- type: 'circle'            # tooltype is 'circle'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nradius: 25              # radius of circle. Width/height is 50\nentity_index: 0           # connect to state of entity 0\n</code></pre>","tags":["Tools","Tool","Circle"]},{"location":"tools/circle-tool/#styling","title":"Styling","text":"<p>The Circle tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Circle tool is composed of a single object: \"circle\" and this is the selector for styling: <pre><code>- type: 'circle'\nposition:\ncx: 50\ncy: 50\nradius: 25\nclasses:\ncircle:                   # Circle selector\n&lt;...&gt;\nstyles:\ncircle:                   # Circle selector\n&lt;...&gt;\n</code></pre> Populair properties:</p> Property Does what? Example <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>stroke-width</code> Stroke width <code>stroke-width: 2em</code> sets width to relative width of 2em <code>stroke</code> Stroke color <code>stroke: blue</code> sets stroke to blue <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of circle to 70% <code>fill-opacity</code> Opacity for fill <code>fill-opacity: 0.5</code> sets the fill opacity to 50% <code>stroke-opacity</code> Opacity for stroke <code>stroke-opacity: 0.5</code> sets the stroke opacity to 50% <p>Reference: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle</p>","tags":["Tools","Tool","Circle"]},{"location":"tools/circle-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Circle"]},{"location":"tools/circle-tool/#animations","title":"Animations","text":"<p>The Circle tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling <p>The use of animations require the tool to be connected to an entity</p>","tags":["Tools","Tool","Circle"]},{"location":"tools/circular-slider-tool/","title":"The circular slider tool","text":"<p> 1.0.0-rc.3 \u00b7   Experimental \u00b7   Input \u00b7</p> <p>The circular slider tool is an input tool with configurable track, active track, thumb and label position and styling. The difference with this slider and the other slider is that this one is circular and the other is either vertical or horizontal.</p> <p></p>","tags":["Tools","Tool","Circular Slider"]},{"location":"tools/circular-slider-tool/#basic-usage","title":"Basic usage","text":"<p>Example with default styling settings. </p> Connected <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit: \"%\"\nformat: brightness\n\naspectratio: 1/1                          # Card is 100x100 grid\nlayout:\ntoolsets:\n# ================================================================\n- toolset: circ-slider-test           # Just a name\nposition:\ncx: 50                            # Center on card\ncy: 50\ntools:              # ------------------------------------------------------------\n- type: circslider\nposition:\ncx: 50                        # Center on toolset\ncy: 50\nradius: 40\nstart_angle: -90\nend_angle: -180\nentity_index: 0\nuser_actions:\ndrag_action:\nupdate_interval: 200        # Update every 200msec\nhaptic: selection\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\nscale:\nmin: 1                        # From 1..100\nmax: 100\nstep: 1                       # 1 step at a time\n</code></pre>","tags":["Tools","Tool","Circular Slider"]},{"location":"tools/circular-slider-tool/#styling","title":"Styling","text":"<p>The circular slider tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inslider SVG and CSS styles <p>The circular slider tool is composed of four parts: \"track\", \"active\", \"thumb\" and \"label\" + \"uom\" can be used as the selector for styling: <pre><code>- type: 'arcslider'\nposition:\ncx: 50\ncy: 50\nradius: 40\nstart_angle: -90\nend_angle: -180\nentity_index: 0\nclasses:\ntrack:                    # Track selector\n&lt;...&gt;\nactive:                   # Active track selector\n&lt;...&gt;\nthumb:                    # Thumb selector\n&lt;...&gt;\nlabel:                    # Label selector\n&lt;...&gt;\nuom:                      # Unit of label selector\n&lt;...&gt;\nstyles:\ntrack:                    # Track selector\n&lt;...&gt;\nactive:                   # Active track selector\n&lt;...&gt;\nthumb:                    # Thumb selector\n&lt;...&gt;\nlabel:                    # Label selector\n&lt;...&gt;\nuom:                      # Unit of label selector\n&lt;...&gt;\n</code></pre></p> <p>The capture area is normally hidden, but can be styled by the user, just as the other parts: <pre><code>  styles:\ncapture:\n&lt;...&gt;\n</code></pre></p> <p>Look at the 3 examples below for more extensive styling.</p>","tags":["Tools","Tool","Circular Slider"]},{"location":"tools/circular-slider-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The circular slider supports its own haptic feedback in the user_actions part.</p> Action Haptic Description Click slider in config Feedback that slider is clicked Drag slider in config Feedback for every update to HA of the slider value","tags":["Tools","Tool","Circular Slider"]},{"location":"tools/circular-slider-tool/#animations","title":"Animations","text":"<p>The circular slider tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling","tags":["Tools","Tool","Circular Slider"]},{"location":"tools/circular-slider-tool/#examples-11-to-13","title":"Examples 1.1 to 1.3","text":"<p>Some examples with different settings for track and thumb.</p> <p>The examples show the capture area too around the thumb: that one is normally hidden, but can be styled by the user!</p> <p></p>","tags":["Tools","Tool","Circular Slider"]},{"location":"tools/circular-slider-tool/#yaml-definitions","title":"YAML Definitions","text":"<p> 1.0.0-rc.3</p> Example 1.1 YAML definition <pre><code>    # 1.1 ###################################################################\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'CircSlider Test'\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit: \"%\"\nformat: brightness\n\naspectratio: 1/1                          # Card is 100x100 grid\nlayout:\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: circ-slider-test\nposition:\ncx: 50\ncy: 50\ntools:              # ------------------------------------------------------------\n- type: circslider\nposition:\ncx: 50\ncy: 50\nradius: 40\nstart_angle: -90\nend_angle: 90\nlabel:\nplacement: 'position'\ncx: 50\ncy: 45\nthumb:\nwidth: 7\nheight: 7\nentity_index: 1\nuser_actions:\ndrag_action:\nupdate_interval: 200          # Update every 200msec\nhaptic: selection\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\nscale:\nmin: 1\nmax: 100\nstep: 5\nshow:\nuom: 'end'\nstyles:\ncircslider:\nstroke: none\nfill: none\nlabel:\ntext-anchor: middle\nfont-size: 20em\nfont-weight: 500\npointer-events: auto\nuom:\nfont-weight: 600\nactive:\nstroke: var(--theme-sys-color-primary)\nstroke-width: 12em\nstroke-linecap: round\ntrack:\nstroke: var(--theme-sys-elevation-surface-neutral4)\nfill-opacity: 1\nstroke-width: 2em\nstroke: var(--theme-sys-elevation-surface-neutral10)\nstroke-linecap: round\nthumb:\nfill: var(--theme-sys-color-primary)\nfill-opacity: 0.7\nstroke: var(--primary-background-color)\nstroke-width: 2em\n</code></pre> Example 1.2 YAML definition <pre><code>    # 1.2 ###################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'CircSlider Test'\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit: \"%\"\nformat: brightness\n\naspectratio: 1/1                          # Card is 100x100 grid\nlayout:\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: circ-slider-test\nposition:\ncx: 50\ncy: 50\ntools:              # ------------------------------------------------------------\n- type: circslider\nposition:\ncx: 50\ncy: 50\nradius: 40\nstart_angle: -130\nend_angle: 130\nthumb:\nwidth: 5\nheight: 15\nradius: 1\nlabel:\nplacement: 'position'\ncx: 50.01\ncy: 75\nentity_index: 1\nuser_actions:\ndrag_action:\nupdate_interval: 200          # Update every 200msec\nhaptic: selection\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\nscale:\nmin: 1\nmax: 100\nstep: 1\nstyles:\ncircslider:\nstroke: none\nfill: var(--theme-sys-elevation-surface-neutral4)\nactive:\nstroke: var(--theme-sys-color-primary)\nstroke: url(#sak-light-color-temperature-gradient)\nlabel:\ntext-anchor: middle\nfont-size: 20em\nfont-weight: 500\npointer-events: auto\nuom:\nfont-weight: 600\n</code></pre> Example 1.3 YAML definition <pre><code>    # 1.3 ###################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'Ceiling Light 1.3'\nicon: mdi:dome-light\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit: \"%\"\nformat: brightness\n\naspectratio: 1/1                          # Card is 100x100 grid\nlayout:\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: circ-slider-test\nposition:\ncx: 42.5\ncy: 42.5\ntools:              # ------------------------------------------------------------\n# Icon with percentage in it\n- type: icon\nposition:\ncx: 85\ncy: 50\nalign: center\nicon_size: 40\nentity_index: 0\nicon: mdi:brightness-5\nanimations:\n- state: 'on'\nstyles:\nicon:\nfill: var(--theme-sys-elevation-surface-neutral4)\n- state: 'off'\nstyles:\nicon:\nfill: none\nstyles:\nicon:\nfill: var(--theme-sys-elevation-surface-neutral4)\ntransition: fill 1s ease\n# ------------------------------------------------------------\n- type: circslider\nposition:\ncx: 50\ncy: 50\nradius: 35\nstart_angle: -230\nend_angle: 50\nlabel:\nplacement: 'position'\ncx: 85\ncy: 50\nentity_index: 1\nshow:\nuom: none\nuser_actions:\ndrag_action:\nupdate_interval: 200          # Update every 200msec\nhaptic: selection\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\nscale:\nmin: 1\nmax: 100\nstep: 1\nstyles:\ncircslider:\nstroke: none\nfill: var(--theme-sys-elevation-surface-neutral4)\nfilter: drop-shadow(1px 4px 6px black)\nactive:\nstroke:  var(--theme-sys-palette-secondary60)\nstroke-width: 4em\nstroke-linecap: square\ntrack:\nstroke:  var(--theme-sys-palette-secondary80)\nstroke-width: 3em\nstroke-linecap: square\ncard:\n-cs-theme-shadow-darker: auto\nthumb:\nfill:  var(--theme-sys-palette-secondary50)\nstroke: var(--primary-background-color)\nstroke-width: 2em\npaint-order: stroke\nlabel:\ntext-anchor: middle\nfont-size: 10em\nfont-weight: 500\npointer-events: auto\nuom:\nfont-weight: 600\n# ------------------------------------------------------------\n# Circle as button\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 22.5\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\ncircle:\nfill:  var(--theme-sys-palette-secondary40)\n- state: 'off'\nstyles:\ncircle:\nfill:  var(--theme-sys-palette-secondary80)\nuser_actions:\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.toggle\nstyles:\ncircle:\nfill: var(--theme-sys-color-secondary-container)\nstroke: var(--theme-sys-color-secondary)\nstroke-width: 0em\ntransition: fill 1s ease\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 30\nentity_index: 0\nanimations:\n- state: 'on'\nstyles:\nicon:\nfill: var(--primary-background-color)\n- state: 'off'\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\nstyles:\nicon:\nfill: var(--theme-sys-color-secondary)\npointer-events: none\ntransition: fill 1s ease\n# ================================================================\n- toolset: name\nposition:\ncx: 5\ncy: 90\ntools:              # ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 10em\ntext-anchor: start\nfont-weight: bold\n</code></pre>","tags":["Tools","Tool","Circular Slider"]},{"location":"tools/circular-slider-tool/#examples-14-to-16","title":"Examples 1.4 to 1.6","text":"<p>Some more examples with different settings for track and thumb.</p> <p>Example 1.4 shows formatting the capture area. 1.5 has capture hidden!</p> <p>If you use a 360 degree circular slider, the tool blocks max/min and min/max transitions!</p> <p>You can drag the thumb to the maximum or minimum value without having to stop exactly at the right point.</p> <p></p>","tags":["Tools","Tool","Circular Slider"]},{"location":"tools/circular-slider-tool/#yaml-definitions_1","title":"YAML Definitions","text":"<p> 1.0.0-rc.3</p> Example 1.4 YAML definition <pre><code>    # 1.4 ###################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'CircSlider Test'\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit: \"%\"\nformat: brightness\n\naspectratio: 1/1                          # Card is 100x100 grid\nlayout:\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: circ-slider-test\nposition:\ncx: 50 cy: 50\ntools:              # ------------------------------------------------------------\n- type: circslider\nposition:\ncx: 50\ncy: 50\nradius: 40\nstart_angle: 270\nend_angle: 360\nentity_index: 1\nanimations:\n- state: '[[[ return state; ]]]'\nstyles:\nthumb:\nstroke-width: '[[[ return (2 + ( state / 10)) + \"em\"; ]]]'\nuser_actions:\ndrag_action:\nupdate_interval: 200          # Update every 200msec\nhaptic: selection\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\nscale:\nmin: 1\nmax: 100\nstep: 1\nstyles:\ncircslider:\nstroke: none\nfill: var(--theme-sys-elevation-surface-neutral4)\nthumb:\nstroke: var(--theme-sys-color-primary)\nfill: white\npaint-order: stroke\ncapture:\nstroke-width: 2em\nstroke: var(--theme-sys-color-primary)\nfill: var(--theme-sys-color-secondary)\nfill: var(--theme-sys-palette-secondary80)\nfill-opacity: 1\n</code></pre> Example 1.5 YAML definition <pre><code>    # 1.5 ###################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'CircSlider Test'\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit: \"%\"\nformat: brightness\n\naspectratio: 1/1                          # Card is 100x100 grid\nlayout:\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: circ-slider-test\nposition:\ncx: 50\ncy: 50\ntools:              # ------------------------------------------------------------\n- type: circslider\nposition:\ncx: 50\ncy: 50\nradius: 40\nstart_angle: 0\nend_angle: 180\nthumb:\nradius: 0\nheight: 8\nwidth: 12\nentity_index: 1\nuser_actions:\ndrag_action:\nupdate_interval: 200          # Update every 200msec\nhaptic: selection\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\nscale:\nmin: 1\nmax: 100\nstep: 1\nstyles:\ncircslider:\nstroke: none\nfill: var(--theme-sys-elevation-surface-neutral4)\nthumb:\nstroke: var(--theme-sys-elevation-surface-neutral10)\nfill: white\nstroke-width: 1em\ntrack:\nstroke-width: 12em\nstroke-linecap: square\nactive:\nstroke: var(--primary-background-color)\nstroke: url(#sak-light-brightness-gradient)\ncapture:\nfill: none\n</code></pre> Example 1.6 YAML definition <pre><code>    # 1.6 ###################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'CircSlider Test'\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit: \"%\"\nformat: brightness\n\naspectratio: 1/1                          # Card is 100x100 grid\nlayout:\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: circ-slider-test\nposition:\ncx: 50\ncy: 50\ntools:              # ------------------------------------------------------------\n- type: circslider\nposition:\ncx: 50\ncy: 50\nradius: 40\nstart_angle: 0\nend_angle: 360\nlabel:\nplacement: 'position'\ncx: 50.01\ncy: 50.01\nentity_index: 1\nshow:\nuom: bottom\nuser_actions:\ndrag_action:\nupdate_interval: 200          # Update every 200msec\nhaptic: selection\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\nscale:\nmin: 1\nmax: 100\nstep: 1\nstyles:\ncircslider:\nstroke: none\nfill: var(--theme-sys-elevation-surface-neutral4)\ntrack:\nstroke:  var(--theme-sys-palette-secondary80)\nactive:\nstroke:  var(--theme-sys-palette-secondary60)\nthumb:\nstroke: var(--primary-background-color)\nstroke-width: 2em\nfill:  var(--theme-sys-palette-secondary50)\npaint-order: stroke\nlabel:\ntext-anchor: middle\nfont-size: 25em\nfont-weight: 500\nfill: var(--theme-sys-color-secondary)\nuom:\nfont-weight: 600\n</code></pre>","tags":["Tools","Tool","Circular Slider"]},{"location":"tools/circular-slider-tool/#examples-21-to-23","title":"Examples 2.1 to 2.3","text":"<p>Some more examples with default styling.</p> <p>These examples show the circular slider counter clock-wise (CCW)</p> <p></p>","tags":["Tools","Tool","Circular Slider"]},{"location":"tools/circular-slider-tool/#yaml-definitions_2","title":"YAML Definitions","text":"<p> 1.0.0-rc.3</p> Example 2.1 (CCW) YAML definition <pre><code>    # 2.1 ###################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'CircSlider Test'\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit: \"%\"\nformat: brightness\n\naspectratio: 1/1                          # Card is 100x100 grid\nlayout:\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: circ-slider-test\nposition:\ncx: 50\ncy: 50\ntools:              # ------------------------------------------------------------\n- type: circslider\nposition:\ncx: 50\ncy: 50\nradius: 40\nstart_angle: 90\nend_angle: -90\nthumb:\nradius: 1\nentity_index: 1\nuser_actions:\ndrag_action:\nupdate_interval: 0          # Update every 200msec\nhaptic: selection\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\nscale:\nmin: 1\nmax: 100\nstep: 1\n</code></pre> Example 2.2 (CCW) YAML definition <pre><code>    # 2.2 ###################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'CircSlider Test'\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit: \"%\"\nformat: brightness\n\naspectratio: 1/1                          # Card is 400x100 grid\nlayout:\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: circ-slider-test\nposition:\ncx: 50\ncy: 50\ntools:              # ------------------------------------------------------------\n- type: circslider\nposition:\ncx: 50\ncy: 50\nradius: 40\nstart_angle: -90\nend_angle: -180\nentity_index: 1\nuser_actions:\ndrag_action:\nupdate_interval: 200          # Update every 200msec\nhaptic: selection\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\nscale:\nmin: 1\nmax: 100\nstep: 1\n</code></pre> Example 2.3 (CCW) YAML definition <pre><code>    # 2.3 ###################################################################\n\n- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: light.livingroom_light_duo_right_light\nname: 'CircSlider Test'\n- entity: light.livingroom_light_duo_right_light\nattribute: brightness\nunit: \"%\"\nformat: brightness\n\naspectratio: 1/1                          # Card is 400x100 grid\nlayout:\nstyles:\ncard:\ntoolsets:\n# ================================================================\n- toolset: circ-slider-test\nposition:\ncx: 50\ncy: 50\ntools:              # ------------------------------------------------------------\n- type: circslider\nposition:\ncx: 50\ncy: 50\nradius: 40\nstart_angle: -180\nend_angle: -270\nentity_index: 1\nuser_actions:\ndrag_action:\nupdate_interval: 200          # Update every 200msec\nhaptic: selection\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\ntap_action:\nhaptic: light\nactions:\n- action: call-service\nservice: light.turn_on\nparameter: brightness_pct\nscale:\nmin: 1\nmax: 100\nstep: 1\n</code></pre>","tags":["Tools","Tool","Circular Slider"]},{"location":"tools/default-haptics/","title":"Default haptics","text":""},{"location":"tools/default-haptics/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing."},{"location":"tools/ellipse-tool/","title":"The Ellipse tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>The Ellipse tool is based on the SVG basic <code>&lt;ellipse&gt;</code>element shape.</p> <p> </p>","tags":["Tools","Tool","Ellipse"]},{"location":"tools/ellipse-tool/#basic-usage","title":"Basic usage","text":"<p>The Ellipse tool needs a center position and a radius for both x and y directions.</p> StandaloneConnected <pre><code>- type: 'ellipse'           # tooltype is 'ellipse'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nradiusx: 50             # Width is 100\nradiusy: 25             # Height is 50\n</code></pre> <pre><code>- type: 'ellipse'           # tooltype is 'ellipse'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nradiusx: 50             # Width is 100\nradiusy: 25             # Height is 50\nentity_index: 0           # connect to state of entity 0\n</code></pre> <p>Set the x and y radius the same to create a circle</p>","tags":["Tools","Tool","Ellipse"]},{"location":"tools/ellipse-tool/#styling","title":"Styling","text":"<p>The Ellipse tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Ellipse tool is composed of a single object: \"ellipse\" and this is the selector for styling: <pre><code>- type: 'ellipse'\nposition:\ncx: 50\ncy: 50\nradiusx: 50\nradiusy: 25\nclasses:\nellipse:                   # Ellipse selector\n&lt;...&gt;\nstyles:\nellipse:                   # Ellipse selector\n&lt;...&gt;\n</code></pre> Populair properties:</p> Property Does what? Example <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>stroke-width</code> Stroke width <code>stroke-width: 2em</code> sets width to relative width of 2em <code>stroke</code> Stroke color <code>stroke: blue</code> sets stroke to blue <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of ellipse to 70% <code>fill-opacity</code> Opacity for fill <code>fill-opacity: 0.5</code> sets the fill opacity to 50% <code>stroke-opacity</code> Opacity for stroke <code>stroke-opacity: 0.5</code> sets the stroke opacity to 50% <p>Reference: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse</p>","tags":["Tools","Tool","Ellipse"]},{"location":"tools/ellipse-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Ellipse"]},{"location":"tools/ellipse-tool/#animations","title":"Animations","text":"<p>The Ellipse tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling <p>The use of animations require the tool to be connected to an entity</p>","tags":["Tools","Tool","Ellipse"]},{"location":"tools/entity-area-tool/","title":"The Entity Area tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>The Entity Area tool displays the Home Assistant Entity Area value.</p> <p> Livingroom </p>","tags":["Tools","Tool","Entity Area"]},{"location":"tools/entity-area-tool/#basic-usage","title":"Basic usage","text":"<p>The Entity Area tool needs a center position and the entity_index from which the area text is used.</p> Connected <pre><code>- type: 'area'              # tooltype is 'area'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nentity_index: 0           # connect to state of entity 0\nstyles:\narea:\nfont-size: 12em       # set font size to 12em\n</code></pre> <p>Always use a relative font-size: it fits well with the relative sizes used by SAK</p> <p>Unless you need a fixed size in pixels...</p>","tags":["Tools","Tool","Entity Area"]},{"location":"tools/entity-area-tool/#styling","title":"Styling","text":"<p>The Entity Area tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Entity Area tool is composed of a single object: \"area\" and this is the selector for styling: <pre><code>- type: 'area'\nposition:\ncx: 50\ncy: 50\nentity_index: 0           # connect to entity 0\nclasses:\narea:                   # area selector\n&lt;...&gt;\nstyles:\narea:                   # area selector\n&lt;...&gt;\n</code></pre> Populair properties:</p> Property Does what? Example <code>font-size</code> Font size <code>font-size: 12em</code> sets RELATIVE font size <code>text-anchor</code> Anchor of text <code>text-anchor: start</code> or <code>middle</code>, or <code>end</code> <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of text to 70%","tags":["Tools","Tool","Entity Area"]},{"location":"tools/entity-area-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Entity Area"]},{"location":"tools/entity-area-tool/#animations","title":"Animations","text":"<p>The Entity Area tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling","tags":["Tools","Tool","Entity Area"]},{"location":"tools/entity-barchart-tool/","title":"The Entity History tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>The Entity History tool is a horizontal or vertical bar chart (sparkline) and displayes some history of an Home Assistant Entity. It is a basic chart, more of a sparkline with only display functionality.</p> <p> </p>","tags":["Tools","Tool","Entity History"]},{"location":"tools/entity-barchart-tool/#basic-usage","title":"Basic usage","text":"<p>The Entity History tool needs a center position, height, width, and margin to display the history graph. It also needs the number of hours, the number of bars per hour, and the orientation. Last but not least, it needs the entity_index from which the history is displayed</p> Connected <pre><code>- type: 'bar'               # tooltype is 'bar'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nwidth: 180              # width of total barchart\nheight: 55              # height\nmargin: 1               # space between bars\norientation: vertical     # vertical or horizontal\nhours: 24                 # number of hours of history\nbarhours: 1               # each bar represents 1 hour\nentity_index: 0           # connect to state of entity 0\n</code></pre>","tags":["Tools","Tool","Entity History"]},{"location":"tools/entity-barchart-tool/#styling","title":"Styling","text":"<p>The Entity History tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Entity History tool is composed of a single object: \"bar\" and this is the selector for styling: <pre><code>- type: 'bar'\nposition:\ncx: 50\ncy: 50\nwidth: 180              # width of total barchart\nheight: 55              # height\nmargin: 1               # space between bars\norientation: vertical     # vertical or horizontal\nhours: 24                 # number of hours of history\nbarhours: 1               # each bar represents 1 hour\nentity_index: 0\nclasses:\nbar:                   # bar selector\n&lt;...&gt;\nstyles:\nbar:                   # bar selector\n&lt;...&gt;\n</code></pre> Populair properties:</p> Property Does what? Example <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of bar to 70% <code>stroke-linecap</code> Format end of line <code>stroke-linecap: round</code> sets the endline to round. <code>butt</code> sets it to square","tags":["Tools","Tool","Entity History"]},{"location":"tools/entity-barchart-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Entity History"]},{"location":"tools/entity-barchart-tool/#animations","title":"Animations","text":"<p>The Entity Barchart tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color for SINGLE bar <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling","tags":["Tools","Tool","Entity History"]},{"location":"tools/entity-icon-tool/","title":"The Entity Icon tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>The Entity Icon tool displays the Home Assistant Entity Icon.</p> <p></p>","tags":["Tools","Tool","Entity Icon"]},{"location":"tools/entity-icon-tool/#basic-usage","title":"Basic usage","text":"<p>If no icon is specified in the entities configuration, the icon specified by Home Assistant is used</p> <p>The Entity Icon tool needs a center position, size and alignment.</p> StandaloneConnectedConnected - Icon overruled <pre><code>- type: 'icon'              # tooltype is 'icon'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nicon_size: 10           # Relative size of 10 (em)\nalign: center           # Align (center, end, start)\nicon: mdi:dots-vertical   # Specify icon in tool\nstyles:\nicon:\nfill: var(--primary-text-color)\n</code></pre> <p>The Entity Icon tool fetches the icon from the entity_index. <pre><code>- type: 'icon'              # tooltype is 'icon'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nicon_size: 10           # Relative size of 10 (em)\nalign: center           # Align (center, end, start)\nentity_index: 0           # connect to state of entity 0\nstyles:\nicon:\nfill: var(--primary-text-color)\n</code></pre></p> <p>The Entity Icon tool can have it's entity icon overruled by the tool.  From example view-sake2.yml<pre><code>- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nicon: mdi:dots-vertical   # Overwrite icon from entity: use menu icon\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info # display more-info popup when clicked\nstyles:\ncapture:\nopacity: 0\nicon:\nfill: var(--primary-text-color)\n</code></pre></p>","tags":["Tools","Tool","Entity Icon"]},{"location":"tools/entity-icon-tool/#styling","title":"Styling","text":"<p>The Entity Icon tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Entity Icon tool is composed of a single object: \"icon\" and this is the selector for styling: <pre><code>- type: 'icon'\nposition:\ncx: 50\ncy: 50\nicon_size: 10\nalign: center\nentity_index: 0\nclasses:\nicon:                   # icon selector\n&lt;...&gt;\nstyles:\nicon:                   # icon selector\n&lt;...&gt;\n</code></pre> Populair properties:</p> Property Does what? Example <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>color</code> Fill color <code>color: red</code> sets fill to color red <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of text to 70%","tags":["Tools","Tool","Entity Icon"]},{"location":"tools/entity-icon-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Entity Icon"]},{"location":"tools/entity-icon-tool/#animations","title":"Animations","text":"<p>The Entity Icon tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling","tags":["Tools","Tool","Entity Icon"]},{"location":"tools/entity-name-tool/","title":"The Entity Name tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>The Entity Name tool displays the Home Assistant Entity Name text.</p> <p> Outside Humidity </p>","tags":["Tools","Tool","Entity Name"]},{"location":"tools/entity-name-tool/#basic-usage","title":"Basic usage","text":"<p>The Entity Name tool needs a center position and the entity_index from which the name text is used.</p> Connected <pre><code>- type: 'name'              # tooltype is 'name'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nentity_index: 0           # connect to state of entity 0\nstyles:\nname:\nfont-size: 12em       # set font size to 12em\n</code></pre> <p>Always use a relative font-size: it fits well with the relative sizes used by SAK</p> <p>Unless you need a fixed size in pixels...</p>","tags":["Tools","Tool","Entity Name"]},{"location":"tools/entity-name-tool/#styling","title":"Styling","text":"<p>The Entity Name tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Entity Name tool is composed of a single object: \"text\" and this is the selector for styling: <pre><code>- type: 'name'\nposition:\ncx: 50\ncy: 50\nentity_index: 0           # connect to entity 0\nclasses:\nname:                   # name selector\n&lt;...&gt;\nstyles:\nname:                   # name selector\n&lt;...&gt;\n</code></pre> Populair properties:</p> Property Does what? Example <code>font-size</code> Font size <code>font-size: 12em</code> sets RELATIVE font size <code>text-anchor</code> Anchor of text <code>text-anchor: start</code> or <code>middle</code>, or <code>end</code> <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of text to 70%","tags":["Tools","Tool","Entity Name"]},{"location":"tools/entity-name-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Entity Name"]},{"location":"tools/entity-name-tool/#animations","title":"Animations","text":"<p>The Entity Name tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling","tags":["Tools","Tool","Entity Name"]},{"location":"tools/entity-state-tool/","title":"The Entity State tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>The Entity State tool displays the Home Assistant Entity State value and unit of measurement.</p> <p>          88                 %                 88                 %                 88                 %                 88                 %        </p>","tags":["Tools","Tool","Entity State"]},{"location":"tools/entity-state-tool/#basic-usage","title":"Basic usage","text":"<p>The Entity State tool needs a center position and the entity_index from which the state value is used.</p> Connected <pre><code>- type: 'state'             # tooltype is 'state'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nentity_index: 0           # connect to state of entity 0\nstyles:\nstate:\nfont-size: 6em\nuom:\nopacity: 0.8\n</code></pre>","tags":["Tools","Tool","Entity State"]},{"location":"tools/entity-state-tool/#advanced-usage","title":"Advanced usage","text":"<p>The unit of measurement can be placed at the end (default), above (top), under (bottom) or not (none) alongside the state value.</p> Connected <pre><code>- type: 'state'             # tooltype is 'state'\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nshow:\nuom: bottom             # default = end. Other top/bottom/none\nstyles:\nstate:\nfont-size: 6em\nuom:\nopacity: 0.8\n</code></pre>","tags":["Tools","Tool","Entity State"]},{"location":"tools/entity-state-tool/#state-attribute-attribute-lists-and-secondary-info","title":"State, Attribute, Attribute lists and Secondary Info","text":"<p>The state tool can do more than just display the state value of an entity. An attribute, or attribute from an attribute list and secondary info can also be used by the state tool.</p>","tags":["Tools","Tool","Entity State"]},{"location":"tools/entity-state-tool/#displaying-attributes","title":"Displaying attributes","text":"<p>Nothing special, but of course attributes can be used for displaying the state of an entity.</p> views/view-sake8.yaml<pre><code>entities:\n- entity: weather.tha_moon\nattribute: temperature\ndecimals: 1\nunit: '\u00b0C'\nicon: mdi:thermometer\narea: 'Tha Moon'\nname: 'Temperature'\n</code></pre>","tags":["Tools","Tool","Entity State"]},{"location":"tools/entity-state-tool/#displaying-attributes-from-attribute-list","title":"Displaying attributes from attribute list","text":"<p>In some cases, attributes are a list. This applies to the 5 day weather forecast for instance. By indexing the array, you can get the right attribute you want.</p> views/view-sake1.yaml<pre><code>entities:\n- entity: weather.zoefdehaas\nattribute: forecast[0].temperature\ndecimals: 1\nunit: '\u00b0C'\n</code></pre>","tags":["Tools","Tool","Entity State"]},{"location":"tools/entity-state-tool/#state-converter-options","title":"State converter options","text":"<p> 2.5.1 \u00b7  Experimental \u00b7  BREAKING CHANGE</p> <p>A state can have a predefined converter option. See The supported converter options.</p>","tags":["Tools","Tool","Entity State"]},{"location":"tools/entity-state-tool/#state-formatting-options","title":"State formatting options","text":"<p> 2.5.1 \u00b7  Experimental \u00b7  BREAKING CHANGE</p> <p>A state can have a format option. See The supported format options.</p>","tags":["Tools","Tool","Entity State"]},{"location":"tools/entity-state-tool/#displaying-secondary-info","title":"Displaying secondary info","text":"<p>Any entity can have secondary info. There is support for some of these attributes and formatting.</p> <p>Depending on the secondary_info attribute type, the format can specify:</p> <ul> <li>brightness for a brightness attribute</li> <li>duration for a duration</li> <li>relative, date, time, datetime for attribute types of last_updated/changed/triggered.</li> </ul> views/view-sake8.yaml<pre><code>entities:\n- entity: weather.tha_moon\nsecondary_info: last_updated  # last_updated, last_changed, last_triggered\nformat: relative              # relative, date, time, datetime\n</code></pre>","tags":["Tools","Tool","Entity State"]},{"location":"tools/entity-state-tool/#styling","title":"Styling","text":"<p>The Entity State tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Entity State tool is composed of a two objects: \"state\" and \"uom\" as the selectors for styling: <pre><code>- type: 'state'\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nclasses:\nstate:                   # state value selector\n&lt;...&gt;\nuom:                     # state uom selector\n&lt;...&gt;\nstyles:\nstate:                   # state value selector\n&lt;...&gt;\nuom:                     # state uom selector\n&lt;...&gt;\n</code></pre> Populair properties:</p> Property Does what? Example <code>font-size</code> Font size <code>font-size: 12em</code> sets RELATIVE font size <code>text-anchor</code> Anchor of text <code>text-anchor: start</code> or <code>middle</code>, or <code>end</code> <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of text to 70%","tags":["Tools","Tool","Entity State"]},{"location":"tools/entity-state-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Entity State"]},{"location":"tools/entity-state-tool/#animations","title":"Animations","text":"<p>The Entity State tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling","tags":["Tools","Tool","Entity State"]},{"location":"tools/horseshoe-tool/","title":"The Horse Shoe tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>TBD!</p>","tags":["Tools","Tool","Horseshoe"]},{"location":"tools/horseshoe-tool/#basic-usage","title":"Basic usage","text":"StandaloneConnected <pre><code>- type: 'horseshoe'           # tooltype is 'horseshoe'\n</code></pre> <pre><code>- type: 'horseshoe'           # tooltype is 'horseshoe'\nentity_index: 0           # connect to state of entity 0\n</code></pre>","tags":["Tools","Tool","Horseshoe"]},{"location":"tools/horseshoe-tool/#styling","title":"Styling","text":"<p>The Horse Shoe tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Horse Shoe is ... <pre><code>- type: 'horseshoe'\n</code></pre> Populair properties:</p> Property Does what? Example <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>stroke-width</code> Stroke width <code>stroke-width: 2em</code> sets width to relative width of 2em <code>stroke</code> Stroke color <code>stroke: blue</code> sets stroke to blue <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of rect to 70% <code>fill-opacity</code> Opacity for fill <code>fill-opacity: 0.5</code> sets the fill opacity to 50% <code>stroke-opacity</code> Opacity for stroke <code>stroke-opacity: 0.5</code> sets the stroke opacity to 50%","tags":["Tools","Tool","Horseshoe"]},{"location":"tools/horseshoe-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Horseshoe"]},{"location":"tools/horseshoe-tool/#animations","title":"Animations","text":"<p>The Horse Shoe tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling <p>The use of animations require the tool to be connected to an entity</p>","tags":["Tools","Tool","Horseshoe"]},{"location":"tools/horseshoe-tool/#examples","title":"Examples","text":"","tags":["Tools","Tool","Horseshoe"]},{"location":"tools/horseshoe-tool/#detailed-specification","title":"Detailed specification","text":"","tags":["Tools","Tool","Horseshoe"]},{"location":"tools/line-tool/","title":"The Line tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>The Line tool is based on the SVG basic <code>&lt;line&gt;</code> element shape</p> <p> </p>","tags":["Tools","Tool","Line"]},{"location":"tools/line-tool/#basic-usage","title":"Basic usage","text":"<p>The Line tool needs a center position and a length, or start and endpoints.</p> StandaloneConnected <p>Horizontal / Vertical config<pre><code>- type: 'line'              # tooltype is 'line'\nposition:                 # Position on (100x100) canvas\norientation: 'vertical' # Vertical, horizontal\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nlength: 25              # length of line.\nstyle:\nline:\nstroke-width: 2       # Set stroke width using CSS attribute\n</code></pre> FromTo config<pre><code>- type: 'line'              # tooltype is 'line'\nposition:                 # Position on (100x100) canvas\norientation: 'fromto'   # fromto (x1,y1,x2,y2)\nx1: 0                   # from: upperleft corner\ny1: 0\nx2: 100                 # to: lowerright corner\ny2: 100\nstyle:\nline:\nstroke-width: 2       # Set stroke width using CSS attribute\n</code></pre></p> <p>Horizontal / Vertical config<pre><code>- type: 'line'              # tooltype is 'line'\nposition:                 # Position on (100x100) canvas\norientation: 'vertical' # Vertical, horizontal or fromto\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nlength: 25              # length of line.\nentity_index: 0           # connect to state of entity 0\nstyle:\nline:\nstroke-width: 2       # Set stroke width using CSS attribute\n</code></pre> FromTo config<pre><code>- type: 'line'              # tooltype is 'line'\nposition:                 # Position on (100x100) canvas\norientation: 'fromto'   # fromto (x1,y1,x2,y2)\nx1: 0                   # from: upperleft corner\ny1: 0\nx2: 100                 # to: lowerright corner\ny2: 100\nentity_index: 0           # connect to state of entity 0\nstyle:\nline:\nstroke-width: 2       # Set stroke width using CSS attribute\n</code></pre></p>","tags":["Tools","Tool","Line"]},{"location":"tools/line-tool/#styling","title":"Styling","text":"<p>The Line tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Line tool is composed of a single object: \"line\" and this is the selector for styling: <pre><code>- type: 'line'\nposition:\norientation: 'vertical'\ncx: 50\ncy: 50\nlength: 25\nclasses:\nline:                   # Line selector\n&lt;...&gt;\nstyles:\nline:                   # Line selector\n&lt;...&gt;\n</code></pre></p> <p>Populair properties:</p> Property Does what? Example <code>stroke-width</code> Line width <code>stroke-width: 2em</code> sets width to relative width of 2em <code>stroke</code> Line color <code>stroke: red</code> <code>opacity</code> Line opacity <code>opacity: 0.7</code> sets the opacity of the stroke to 70% <p>Reference: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/line</p>","tags":["Tools","Tool","Line"]},{"location":"tools/line-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Line"]},{"location":"tools/line-tool/#animations","title":"Animations","text":"<p>The Line tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling <p>The use of animations require the tool to be connected to an entity</p>","tags":["Tools","Tool","Line"]},{"location":"tools/progpath-tool/","title":"Advanced Progress Path tool","text":"<p>Part of upcoming release in 2025!</p>","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#the-progpath-tool","title":"The ProgPath tool","text":"<p> 4.0.1 \u00b7  Output</p> <p>The progress path tool is an advanced tool that can display a sensor value on different path types like: line, spiral, rectangle and circle. Each type can have its own variants and specific functionality.</p> <p>This tool is still beta / highly experimental</p> <p>Some examples:</p> <ul> <li> <p> Sensor with ProgPath \"Spiral/Helix\"</p> <p>A sensor card with a progpath showing the actual power usage using a smooth colorstop. </p> <p> </p> <p> Spiral Usage</p> </li> <li> <p> Sensor with ProgPath \"Spiral/Spiral\"</p> <p>A sensor card with a progpath showing the actual power usage using a smooth colorstop. </p> <p> </p> <p> Spiral Usage</p> </li> <li> <p> Sensor with ProgPath \"Line\"</p> <p>A sensor card with a progpath showing the actual power usage using a stepped colorstop. </p> <p> </p> <p> Line Usage</p> </li> <li> <p> Sensor with ProgPath \"Circle\"</p> <p>A sensor card with a progpath showing the actual power usage using a stepped colorstop. </p> <p> </p> <p> Circle Usage</p> </li> <li> <p> Sensor with ProgPath \"Rectangle\"</p> <p>A sensor card with a progpath showing the actual power usage using a stepped colorstop. </p> <p> </p> <p> Rectangle Usage</p> </li> <li> <p> Sensor with ProgPath \"Rectangle\"</p> <p>A sensor card with a progpath showing the actual power usage using a single color for the active path. </p> <p> </p> <p> Rectangle Usage</p> </li> </ul>","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#basic-usage","title":"Basic Usage","text":"<p>The ProgPath tool needs at least a <code>path_type</code> and some other <code>show</code> field settings:</p> Basic show config<pre><code>- type: progpath\nprogpath:\nshow:\npath_type: spiral\nvariant: arch_helix\nviz:\nlinecap: round_start_end # butt, round_start_end, butt_start_end\nbackground: true\ntrack: none\nmarker: navigation #none #pan-vertical #navigation\nactive_track: true\nmask: true\nscale: none\n</code></pre> Field Value Description <code>path_type</code> <code>spiral</code>, <code>line</code>, <code>circle</code>, <code>rectangle</code> The type of Progress Path <code>variant</code> depends on <code>path_type</code> See specific type for possible variants <p>Main <code>show</code> fields that enable/disable/set the various components of the ProgPath tool:</p> show field Value Description <code>background</code> <code>true</code>,<code>false</code> Add background track yes/no <code>track</code> <code>none</code>, <code>colorstops</code>, <code>dashes</code> How to display the track <code>active_track</code> <code>true</code>, <code>false</code> TBD <code>marker</code> <code>none</code>, <code>pan-vertical</code>, <code>navigation</code>, etc. Type of marker @ current position <code>mask</code> <code>true</code>, <code>false</code> TBD <code>scale</code> <code>none</code>, <code>colorstops</code> Show scale as colorstops, or no scale <p>Configuration of separate components like background, track, marker, etc.</p> Basic show config<pre><code>- type: progpath\n# Background config\nbackground:\nwidth: 5\n\n# Track config\ntrack:\nwidth: 3\n\n# Active Track config\nactive_track:\nwidth: 3\ncolor:\nsmooth: true      # Marker config\nmarker:\nsize: 12\noffset: 0   # offset sets the marker on/above/below the track\n# seen from the center/inside of the tool\n# A negative value like -36, sets the marker at\n# the inside of the track\n# 0 means centered on the track!\ncolor:      # A marker can have a color depending\n# on the sensor value/colorstop\nanimate: interior # outline, interior, both, none\nsmooth: false\n</code></pre>","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#styling","title":"Styling","text":"<p>The ProgPath tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#progpath-spiral","title":"ProgPath - Spiral","text":"","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#basic-definition","title":"Basic definition","text":"path_type variant Description <code>spiral</code> <code>arch_spiral</code> A true spiral from inside to outside <code>spiral</code> <code>arch_helix</code> A helix with configurable angle and offsets","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#specific-spiral-and-arch_helix-definitions","title":"Specific <code>spiral</code> and <code>arch_helix</code> definitions","text":"Basic show config<pre><code>- type: progpath\nspiral:\npoints: 360     # Number of points used to draw the spiral/helix\n# More points give a smoother spiral/helix\ndegrees: 1800   # Number of turns in degrees: 1800 = 5 turns\nhelix:\nhw_ratio: 0\niso_angle: 90\noffset_y: 40\noffset_x: 0\nadjust_height: true\n</code></pre> Field Value Description <code>points</code> number Number of points (or segments) used to draw the spiral/helix. More points give smoother curves. Too many will hamper performance. Experiment! <code>degrees</code> degrees Total number of turns for the spiral/helix. A full turn is 360 degrees. So 1800 is 5 turns. Helix Fields Value Description <code>hw_ratio</code> number Defaults to 0. Determines the viewing angle. 0.5 gives you overlapping turns, and a view from above... <code>iso_angle</code> degrees Default to 90 for vertical helix <code>offset_y</code> number Vertical space between helix turns. <code>offset_x</code> number Horizontal adjustment bottom of helix. A positive value will move the bottom side to the right, a negative value to the left. It determines the relative position of the bottom in relation to the top.","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#examples-with-different-hw_ratio-y-and-x","title":"Examples with different hw_ratio, y and x","text":"<ul> <li> <p> Helix, hw=0.5, y=10, x=0</p> <p> </p> </li> <li> <p> Helix, hw=0.75, y=10, x=0</p> <p> </p> </li> <li> <p> Helix, hw=0.25, y=20, x=0</p> <p> </p> </li> <li> <p> Helix, hw=0, y=40, x=10</p> <p> </p> </li> </ul>","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#progpath-line","title":"ProgPath - Line","text":"","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#basic-definition_1","title":"Basic definition","text":"path_type variant Description <code>line</code> none A line is a line...","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#specific-line","title":"Specific <code>line</code>","text":"Basic show config<pre><code>- type: progpath\nprogpath:\nshow:\npath_type: line\nviz:\nlinecap: round_start_end # butt, round_start_end, butt_start_end\nbackground: true\ntrack: colorstops #dashes\nmarker: none #pan-vertical #navigation\nactive_track: false\nmask: true\nscale: colorstops\n</code></pre> <p>And then the line and scale config: Line and Scale config<pre><code>- type: progpath\nprogpath:\nscale:\nwidth: 3\noffset: -10 # Negative value means: below line graph\nline:\nmargin:\nleft: 5\nright: 5\n</code></pre></p>","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#progpath-circle","title":"ProgPath - Circle","text":"","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#basic-definition_2","title":"Basic definition","text":"path_type variant Description <code>circle</code> none A circle is a circle...","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#specific-circle","title":"Specific <code>circle</code>","text":"Basic show config<pre><code>- type: progpath\nprogpath:\nshow:\npath_type: circle\nviz:\nlinecap: round_start_end                        background: false\ntrack: none\nmarker: sak-clock-hand-ring-small # Specific hand!!\nactive_track: false\nmask: true\nscale: colorstops\n</code></pre> <p>And then the circle, scale and marker definitions: Circle, Scale and Marker config<pre><code>- type: progpath\nprogpath:\ncircle:\nstart_angle: 100\nstop_angle: 260\ndirection: ccw      # Counter clock wise\nscale:\nwidth: 24\noffset: -20\ntrack:\nwidth: 5\nmarker:\nsize: 40\noffset: 0\nattach_to: center # or circumference\ncolor:\nanimate: none\nsmooth: true      </code></pre></p>","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#progpath-rectangle","title":"ProgPath - Rectangle","text":"","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#basic-definition_3","title":"Basic definition","text":"path_type variant Description <code>rectangle</code> none A rectangle is a rectangle...","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#specific-rectangle","title":"Specific <code>rectangle</code>","text":"Basic show config<pre><code>- type: progpath\nprogpath:\nshow:\npath_type: rectangle\nviz:\nlinecap: round_start_end                         background: true\ntrack: colorstops #dashes none\nmarker: navigation\nactive_track: false\nmask: false\n</code></pre>","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#example-card-and-definition","title":"Example card and definition","text":"Full definition of example card <pre><code>- type: 'custom:swiss-army-knife-card'\nentities:\n- entity: sensor.dsmr_reading_electricity_currently_delivered\nname: 'Electricity'\narea: 'House'\ndev:\nreal: true\nlayout:\naspectratio: 2/1\ntoolsets:\n# ==============================================================================\n- toolset: circle-with-icon\nposition:\ncx: 100\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: progpath\nposition:\ncx: 50\ncy: 50\nwidth: 180\nheight: 80\nentity_index: 0\nprogpath:\nshow:\npath_type: rectangle\nviz:\nlinecap: round_start_end                         background: true\ntrack: colorstops #dashes\nmarker: navigation\nactive_track: false #true\nmask: false #true\nrectangle:\nstart:\nside: left\nposition: -30 # 30 below center of graph\nd: cw         # clock-wise draw\nstop:\nside: top\nposition: 85 # 85 right of center of graph\nradius:\ntl: 10      # Top left = 10\ntr: 0       # Top right\nbr: 0       # Bottom right\nbl: 0       # Bottom left\nbackground:\nwidth: 8      # Background is wider than track\ntrack:\nwidth: 5\nmarker:\nsize: 12      # Size of marker\noffset: -36   # Marker on inside of graph\ncolor:\nanimate: both # outline, interior, both, none\nsmooth: true  # Use gradients for colorstops\ncolorstops:\ntemplate:\nname: sak_colorstops_energy_4kw_v2\nvariables:\n- sak_colorstops_gap: 1\nstyles:\nmarker:\nfill: none\nstroke: var(--ha-card-background,var(--card-background-color,#fff))\nstroke-width: 0.4em\nstroke-linejoin: round    # Use smooth edges for\nstroke-linecap: round     # ..the navigation marker\nscale: 0.7 1              # Adjust marker size in width/height\ntransform-origin: center  # Scale from center of marker\n\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 32.5\nalign: center\nicon_size: 20\nentity_index: 0\n\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 52.5\nentity_indexes:\n- entity_index: 0\nshow:\nuom: bottom\nstyles:\ntool:\nstate:\ntext-anchor: middle\nfont-size: 16em\nfont-weight: 600\n# fill: var(--primary-background-color)\ntransition: opacity 0.5s linear\n</code></pre>","tags":["Tools","Tool","Progpath"]},{"location":"tools/progpath-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Progpath"]},{"location":"tools/rectangle-ex-tool/","title":"The Rectangle Ex(tended) tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>The RectEx tool is based on the SVG basic <code>&lt;path&gt;</code>element shape.</p> <p>The RectEx tool lets you define the radius for each corner, where the Rectangle tool lets you specify a single radius for all corners.</p> <p>The rectex might replace the rectangle tool in the future...</p> <p> </p>","tags":["Tools","Tool","RectangleEx"]},{"location":"tools/rectangle-ex-tool/#basic-usage","title":"Basic usage","text":"<p>The RectEx tool needs a center position, height, and width. You can specify a corner radius for each corner, or pair of corners.</p> StandaloneConnected <pre><code>- type: 'rectex'            # tooltype is 'rectex'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nheight: 75              # height of 75\nwidth: 100              # width of 100\nradius:\nall: 0                # corner radius: square\n# per side options:\ntop: 2\nleft: 2\nright: 2\nbottom: 2\n# per corner options:\ntop_left: 2\ntop_right: 2\nbottom_left: 2\nbottom_right: 2\nstyles:\nrectex:\nstroke-width: 2       # width of stroke. 0 = no stroke.\n</code></pre> <pre><code>- type: 'rectex'            # tooltype is 'rectex'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nheight: 75              # height of 75\nwidth: 100              # width of 100\nradius:\nall: 0                # corner radius: square\nentity_index: 0           # connect to state of entity 0\nstyles:\nrectex:\nstroke-width: 2       # width of stroke. 0 = no stroke.\n</code></pre>","tags":["Tools","Tool","RectangleEx"]},{"location":"tools/rectangle-ex-tool/#styling","title":"Styling","text":"<p>The RectEx tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The RectEx tool is composed of a single object: \"rectex\" and this is the selector for styling: <pre><code>- type: 'rectex'\nposition:\ncx: 50\ncy: 50\nheight: 75              # height of 75\nwidth: 100              # width of 100\nradius:\nall: 0                # corner radius: square\nclasses:\nrectex:                 # RectEx selector\n&lt;...&gt;\nstyles:\nrectex:                 # RectEx selector\n&lt;...&gt;\n</code></pre> Populair properties:</p> Property Does what? Example <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>stroke-width</code> Stroke width <code>stroke-width: 2em</code> sets width to relative width of 2em <code>stroke</code> Stroke color <code>stroke: blue</code> sets stroke to blue <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of rect to 70% <code>fill-opacity</code> Opacity for fill <code>fill-opacity: 0.5</code> sets the fill opacity to 50% <code>stroke-opacity</code> Opacity for stroke <code>stroke-opacity: 0.5</code> sets the stroke opacity to 50%","tags":["Tools","Tool","RectangleEx"]},{"location":"tools/rectangle-ex-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","RectangleEx"]},{"location":"tools/rectangle-ex-tool/#animations","title":"Animations","text":"<p>The RectEx tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling <p>The use of animations require the tool to be connected to an entity</p>","tags":["Tools","Tool","RectangleEx"]},{"location":"tools/rectangle-tool/","title":"The Rectangle tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>The Rectangle tool is based on the SVG basic <code>&lt;rect&gt;</code>element shape.</p> <p> </p>","tags":["Tools","Tool","Rectangle"]},{"location":"tools/rectangle-tool/#basic-usage","title":"Basic usage","text":"<p>The Rectangle tool needs a center position, height, width, and optional corner radius.</p> StandaloneConnected <pre><code>- type: 'rectangle'         # tooltype is 'rectangle'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nheight: 75              # height of 75\nwidth: 100              # width of 100\nrx: 0                   # corner radius: square\nstyles:\nrectangle:\nstroke-width: 2       # width of stroke. 0 = no stroke.\n</code></pre> <pre><code>- type: 'rectangle'         # tooltype is 'rectangle'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nheight: 75              # height of 75\nwidth: 100              # width of 100\nrx: 0                   # corner radius: square\nentity_index: 0           # connect to state of entity 0\nstyles:\nrectangle:\nstroke-width: 2       # width of stroke. 0 = no stroke.\n</code></pre>","tags":["Tools","Tool","Rectangle"]},{"location":"tools/rectangle-tool/#styling","title":"Styling","text":"<p>The Rectangle tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Rectangle tool is composed of a single object: \"rectangle\" and this is the selector for styling: <pre><code>- type: 'rectangle'\nposition:\ncx: 50\ncy: 50\nheight: 75              # height of 75\nwidth: 100              # width of 100\nrx: 0                   # corner radius: square\nclasses:\nrectangle:              # Rectangle selector\n&lt;...&gt;\nstyles:\nrectangle:              # Rectangle selector\n&lt;...&gt;\n</code></pre> Populair properties:</p> Property Does what? Example <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>stroke-width</code> Stroke width <code>stroke-width: 2em</code> sets width to relative width of 2em <code>stroke</code> Stroke color <code>stroke: blue</code> sets stroke to blue <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of rect to 70% <code>fill-opacity</code> Opacity for fill <code>fill-opacity: 0.5</code> sets the fill opacity to 50% <code>stroke-opacity</code> Opacity for stroke <code>stroke-opacity: 0.5</code> sets the stroke opacity to 50% <p>Reference: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/rect</p>","tags":["Tools","Tool","Rectangle"]},{"location":"tools/rectangle-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Rectangle"]},{"location":"tools/rectangle-tool/#animations","title":"Animations","text":"<p>The Rectangle tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling <p>The use of animations require the tool to be connected to an entity</p>","tags":["Tools","Tool","Rectangle"]},{"location":"tools/regular-poly-tool/","title":"The Regular Polygon tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>The Regular Polygon tool is a tool build on the Shl\u00e4fli symbol.</p> <p>It can build both regular convex polygons and regular star polygons. They have a mathematical background:</p> <ul> <li>p is the number of vertices. They are all distributed evenly on a circle.</li> <li>For q = 1, you connect each point to the next one on the circle (clockwise or counterclockwise, it doesn't matter).</li> <li>For q = 2, you skip the first one and connect to the 2nd.</li> <li>For q = 3, you skip the first two and connect to the 3rd. And so on... as long as q &lt; p/2.</li> </ul>","tags":["Tools","Tool","Regular Polygon"]},{"location":"tools/regular-poly-tool/#basic-usage","title":"Basic usage","text":"<p>The Regular Poly tool needs a center position, radius, number of sides, the number of sides to skip, and an optional angle offset to rotate the regular polygon to the desired state.</p> StandaloneConnected <pre><code>- type: 'regpoly'           # tooltype is 'regpoly'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nradius: 50              # Radius of the \"circle\"\nside_count: 6           # The \"p\" value in the Schl\u00e4fli symbol\nside_skip: 1            # The \"q\" value in the Schl\u00e4fli symbol\nangle_offset: 0         # Value to rotate the regpoly\nstyles:\nregpoly:\nstroke-width: 2       # width of stroke. 0 = no stroke.\n</code></pre> <pre><code>- type: 'regpoly'           # tooltype is 'regpoly'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nradius: 50              # Radius of the \"circle\"\nside_count: 6           # The \"p\" value in the Schl\u00e4fli symbol\nside_skip: 1            # The \"q\" value in the Schl\u00e4fli symbol\nangle_offset: 0         # Value to rotate the regpoly\nentity_index: 0           # connect to state of entity 0\nstyles:\nregpoly:\nstroke-width: 2       # width of stroke. 0 = no stroke.\n</code></pre>","tags":["Tools","Tool","Regular Polygon"]},{"location":"tools/regular-poly-tool/#styling","title":"Styling","text":"<p>The Regular Polygon tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Regular Polygon tool is composed of a single object: \"regpoly\" and this is the selector for styling: <pre><code>- type: 'regpoly'\nposition:\ncx: 50\ncy: 50\nradius: 50              # Radius of the \"circle\"\nside_count: 6           # The \"p\" value in the Schl\u00e4fli symbol\nside_skip: 1            # The \"q\" value in the Schl\u00e4fli symbol\nangle_offset: 0         # Value to rotate the regpoly\nclasses:\nregpoly:                # RegPoly selector\n&lt;...&gt;\nstyles:\nregpoly:                # RegPoly selector\n&lt;...&gt;\n</code></pre> Populair properties:</p> Property Does what? Example <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>stroke-width</code> Stroke width <code>stroke-width: 2em</code> sets width to relative width of 2em <code>stroke</code> Stroke color <code>stroke: blue</code> sets stroke to blue <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of rect to 70% <code>fill-opacity</code> Opacity for fill <code>fill-opacity: 0.5</code> sets the fill opacity to 50% <code>stroke-opacity</code> Opacity for stroke <code>stroke-opacity: 0.5</code> sets the stroke opacity to 50%","tags":["Tools","Tool","Regular Polygon"]},{"location":"tools/regular-poly-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Regular Polygon"]},{"location":"tools/regular-poly-tool/#animations","title":"Animations","text":"<p>The RegPoly tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling <p>The use of animations require the tool to be connected to an entity</p>","tags":["Tools","Tool","Regular Polygon"]},{"location":"tools/regular-poly-tool/#examples","title":"Examples","text":"<p>Below some examples with varying \"p\" (side count) and \"q\" (skip number of points).</p> <p>The fill rule is 'evenodd' in the examples</p> ---------------------------- ---------------------------- ---------------------------- ---------------------------- p: 3, q: 1  p: 5, q: 1  p: 5, q: 2  p: 6, q: 1  p: 6, q: 2  p: 7, q: 1  p: 7, q: 2  p: 7, q: 3  p: 8, q: 1  p: 8, q: 2  p: 8, q: 3  p: 9, q: 1  p: 9, q: 2  p: 9, q: 3  p: 9, q: 4  p: 10, q: 1  p: 10, q: 2  p: 10, q: 3  p: 10, q: 4  p: 11, q: 1  p: 11, q: 2  p: 11, q: 3  p: 11, q: 4  p: 11, q: 5  p: 12, q: 1  p: 12, q: 2  p: 12, q: 3  p: 12, q: 4  p: 12, q: 5  p: 13, q: 1 &lt; p: 13, q: 2  p: 13, q: 3  p: 13, q: 4  p: 13, q: 5   p: 13, q: 6  p: 14, q: 1  p: 14, q: 2  p: 14, q: 3  p: 14, q: 4  p: 14, q: 5  p: 14, q: 6  p: 15, q: 1  p: 15, q: 2  p: 15, q: 3  p: 15, q: 4  p: 15, q: 5  p: 15, q: 6  p: 15, q: 7  p: 16, q: 1  p: 16, q: 2  p: 16, q: 3  p: 16, q: 4  p: 16, q: 5  p: 16, q: 6  p: 16, q: 7  p: 17, q: 1  p: 17, q: 2  p: 17, q: 4  p: 17, q: 5  p: 17, q: 6  p: 17, q: 7  p: 17, q: 8  I think you know... ...the drill by now","tags":["Tools","Tool","Regular Polygon"]},{"location":"tools/segarc-tool/","title":"The Segmented Arc tool","text":"<p> 1.0.0 \u00b7  Output</p> <p>The Segmented Arc tool is a complex, multi-part tool with a custom animation. The tool consists of multiple separate segments that 'behave' like a single, segmented object.</p> <p>The Arc can be between 0 and 360 degrees with configurable start and end angle. It can have an additional scale. The Arc supports colorstops and colorlists to display the state value.</p> <p>It is by far the most complex tool. Was fun to make, and fairly unique. The 360 degrees arc takes a prominent place in many examples.</p> <p>        &lt;circle %=\"\" &lt;=\"\" circle=\"\" class=\"sak-circle__circle\" cx=\"0\" cy=\"0\" r=\"110.00000000000001\" style=\"fill: var(--md-primary-fg-color--50); stroke-width: 0;\"&gt;        23              % </p>","tags":["Tools","Tool","Segmented Arc"]},{"location":"tools/segarc-tool/#basic-usage","title":"Basic usage","text":"Connected <pre><code>- type: 'segarc'            # tooltype is 'segarc'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nstart_angle: -130       # start angle...\nend_angle: 130          # .. --&gt; Arc from left to right!\nwidth: 7                # Width of arc 'bar'\nradius: 45              # Size or arc radius\nentity_index: 0           # connect to state of entity 0\nscale:\nmin: -20                # Temperatures from -20 to +40\nmax: 40\noffset: -4.5            # Scale on inside of arc bar\nshow:\nstyle: colorlist        # use single color colorlist\nscale: true             # show scale too\nsegments:\ncolorlist:\ngap: 1                # gap between segments\ncolors:\n- 'black'\nstyles:\nbackground:\nfill: grey\n</code></pre> <p>The default style, 'fixedcolor' is broken, therefore the basic example uses a single color colorlist.</p> <p>The direction of the arc is determined by the start and end angle</p> <p>Arc from LEFT to RIGHT: end_angle &gt; start_angle <pre><code>  start_angle: -90\nend_angle: 0\n</code></pre></p> <p>Arc from RIGHT to LEFT: start_angle &gt; end_angle <pre><code>  start_angle: 90\nend_angle: 0\n</code></pre></p> <p>A circle for example has a start_angle of 0 and end_angle of 360</p> <p>The arc can become an ellipse by specifying radius_x and radius_y separately</p>","tags":["Tools","Tool","Segmented Arc"]},{"location":"tools/segarc-tool/#extended-usage","title":"Extended usage","text":"Connected <pre><code>- type: 'segarc'            # tooltype is 'segarc'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nstart_angle: -130       # start angle...\nend_angle: 130          # .. --&gt; Arc from left to right!\nwidth: 7\nradius: 45\nentity_index: 0           # connect to state of entity 0\nscale:\nmin: 15                 # Inside temperature\nmax: 25\noffset: -4.5            # Scale on inside of arc bar\nshow:\nstyle: colorstops       # Use a colorstop\nlastcolor: true         # use last color to fill segments\nsegments:\ncolorstops:\ntemplate:             # Use template colorstop (re-use!)\nname: colorstops_temperature_inside\nvariables:\n- thegap: 1\nstyles:\nbackground:\nfill: var(--primary-background-color)\nfilter: url(#is-1)    # inset shadow for background\n</code></pre> <p>The use of show.lastcolor...</p> <p>This setting determines whether a segment gets its color according to its own colorstop, or that the color of the last segment determines the colors of the previous segments.</p> <p>Example:</p> <p>Say we have a colorstop blue=0/green=25/yellow=50/red=75.</p> <ul> <li>with the default <code>lastcolor = false</code>, with a state value of 60, you have filled blue and green segments, and a small part of the yellow segment is filled.</li> <li>with <code>lastcolor = true</code> setting, all segments are yellow: they all take the 'last' color as their fill color.</li> </ul>","tags":["Tools","Tool","Segmented Arc"]},{"location":"tools/segarc-tool/#styling","title":"Styling","text":"<p>The Segmented Arc tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Segmented Arc tool is composed of two objects: \"foreground\" and \"background\" are the selector for styling:</p> <pre><code>- type: 'segarc'\nposition:\ncx: 50\ncy: 50\nstart_angle: -130       # start angle...\nend_angle: 130          # .. --&gt; Arc from left to right!\nwidth: 7\nclasses:\nbackground:             # Background selector\n&lt;...&gt;\nforeground:             # Foreground selector\n&lt;...&gt;\nstyles:\nbackground:             # Background selector\n&lt;...&gt;\nforeground:             # Foreground selector\n&lt;...&gt;\n</code></pre> <p>Populair properties for both 'foreground' and 'background' selectors:</p> Property Does what? Example <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>stroke-width</code> Stroke width <code>stroke-width: 2em</code> sets width to relative width of 2em <code>stroke</code> Stroke color <code>stroke: blue</code> sets stroke to blue <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of rect to 70% <code>fill-opacity</code> Opacity for fill <code>fill-opacity: 0.5</code> sets the fill opacity to 50% <code>stroke-opacity</code> Opacity for stroke <code>stroke-opacity: 0.5</code> sets the stroke opacity to 50%","tags":["Tools","Tool","Segmented Arc"]},{"location":"tools/segarc-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Segmented Arc"]},{"location":"tools/segarc-tool/#animations","title":"Animations","text":"<p>The Segmented Arc tool 'foreground' part has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlist</code> Using a colorlist definition, creating equally sized segments <code>animations</code> Operator state based animations with class/style styling","tags":["Tools","Tool","Segmented Arc"]},{"location":"tools/segarc-tool/#detailed-usage","title":"Detailed usage","text":"<p>The <code>segarc</code> tool has some functionalities which haven't been explained yet in the above examples.</p>","tags":["Tools","Tool","Segmented Arc"]},{"location":"tools/segarc-tool/#scale-placement","title":"Scale placement","text":"<p>The scale, if enabled through <code>show.scale: true</code> can be placed inside, on or on the outside of the arc.</p> <p>The <code>scale.offset</code> value is responsible for that functionality and works together with the <code>position.width</code> property. <pre><code>- type: 'segarc'            # tooltype is 'segarc'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nstart_angle: -130       # start angle...\nend_angle: 130          # .. --&gt; Arc from left to right!\nwidth: 7                # Width of arc 'bar'\nradius: 45              # Size or arc radius\nentity_index: 0           # connect to state of entity 0\nscale:\nmin: -20                # Temperatures from -20 to +40\nmax: 40\noffset: -4.5            # Scale on inside of arc bar\nshow:\nstyle: colorlist        # use single color colorlist\nscale: true             # show scale too\nsegments:\ncolorlist:\ngap: 1                # gap between segments\ncolors:\n- 'black'\nstyles:\nbackground:\nfill: grey\n</code></pre></p> <p>The math is as follows:</p> <ul> <li>the arc bar <code>width</code> of the arc is <code>7</code>. As the math is from the center, we take <code>7/2 = 3.5</code> as the value to do the math with</li> <li>the scale <code>offset</code> is <code>-4.5</code>. That is the offset from the center of the arc bar. A value of <code>-4.5</code> means on the inside.</li> <li>As the <code>width</code> of the arc is <code>3.5</code> from the center, there is a 'gap' between the arc and the scale of <code>1</code>.</li> </ul> <p>If you want the scale to be on the outside of the arc bar, use a positive <code>offset</code> value.</p>","tags":["Tools","Tool","Segmented Arc"]},{"location":"tools/segarc-tool/#animation-duration","title":"Animation duration","text":"<p>The arc uses a custom animation to draw the arc. The animation duration is default 5 seconds and can be configured as follows:</p> <pre><code>- type: 'segarc'            # tooltype is 'segarc'\nanimation:\nduration: 5             # Animation in seconds\n</code></pre>","tags":["Tools","Tool","Segmented Arc"]},{"location":"tools/segarc-tool/#gap-between-segments","title":"Gap between segments","text":"<p>The <code>colorlist</code> or <code>colorstop</code> <code>show.style</code> determines the number of segments the arc has.</p> <p>The <code>gap</code> between the drawn segments can be configured using the <code>gap</code> property. The default is <code>1</code>. Setting this to <code>0</code> removes the gap between the segments.</p> <pre><code>  segments:\ncolorlist:\ngap: 1                # gap between segments\ncolors:\n- 'black'\n</code></pre> <p>Don't make the gap larger than the size of a segment</p> <p>It may yield unexpected results.</p>","tags":["Tools","Tool","Segmented Arc"]},{"location":"tools/slider-tool/","title":"The slider tool","text":"<p> 1.0.0 \u00b7  Input \u00b7</p> <p>The slider tool is an input tool with configurable track, active track, thumb and label position and styling.</p> <p> 58                % </p> <p> </p> <p> </p> <p>The slider can possibly also be configured as state value output in the future...</p> <p>And used as a very compact sort of \"gauge\", if you look at the second example with in this case a (for lights) color temperature gradient fill on the track. Adding colorlist or colorstop functionality would be a nice feature too!</p>","tags":["Tools","Tool","Slider"]},{"location":"tools/slider-tool/#basic-usage","title":"Basic usage","text":"Connected <p>\u2192 TODO: find out if there is a simple, basic usage... <pre><code>- type: 'slider'              # tooltype is 'slider'\nposition:                   # Position on (100x100) canvas\ncx: 50                    # cx=50 is center position\ncy: 50                    # cy=50 is center position\nentity_index: 1\n</code></pre></p>","tags":["Tools","Tool","Slider"]},{"location":"tools/slider-tool/#advanced-usage","title":"Advanced usage","text":"<p>Below example is the configuration of the first example above.</p> Connected From: view-sake2 (1st row, 1st card)<pre><code>- type: slider\nposition:\ncx: 40\ncy: 81\ncapture:\nwidth: 80\nheight: 15\ntrack:\nwidth: 70\nheight: 2\nradius: 1\nthumb:\nwidth: 5\nheight: 10\nradius: 1\nlabel:\n# placement can be none, thumb, position (cx,cy)\nplacement: position\ncx: 95                  # Place value right from slider\ncy: 81\norientation: horizontal   # default, other is vertical\nentity_index: 1             # The brightness attribute\n#\n# Extra:\n# Convert brightness value (0..255) to 0..100%\nderived_entity:\ninput : '[[[ return state ]]]'\nstate: &gt;\n[[[\nif (typeof(entity) === 'undefined') return;\nif (typeof(state) === 'undefined') return;\n\nvar bri = Math.round(state / 2.55);\nreturn (bri ? bri : '0');\n]]]\nunit: &gt;\n[[[\nif (typeof(state) === 'undefined') return undefined;\nreturn '%';\n]]]\n#\n# The action for the slider if value has changed\nslider_action:\nupdate_interval: 200      # Update every 200 ms while dragging\nservice: light.turn_on\nparameter: brightness_pct\nscale:                      # Min/Max slider value\nmin: 1\nmax: 100\nstep: 1\nstyles:\nlabel:\ntext-anchor: end\nfont-size: 10em\nfont-weight: 600\n# track:\nthumb:\nstroke-width: 0.5em\nstroke: var(--md--primary-fg-color)\nstroke-opacity: 0.8\n</code></pre>","tags":["Tools","Tool","Slider"]},{"location":"tools/slider-tool/#update-while-dragging","title":"Update while dragging","text":"<p>The slider can update the setpoint/value while dragging. This means that the brightness of a light is adjusted while dragging.</p> <p>The interval is specified by the <code>update_interval</code> property:</p> <ul> <li>default value is <code>0</code>, ie NO update while dragging, only on release of the slider</li> <li>any other value (in milliseconds) starts a timer that checks if the slider is changed, and than calls the <code>slider_action</code> config.</li> </ul> <p>Don't specifiy a very small value, as it may overload your Zigbee/Wifi network</p> <p>A value of <code>200</code> (5x / second) or <code>250</code> (4x / second) works very well in my setup using Tradfri lights and zzh! stick.</p> <p>If you combine this with a light transition, brightness changes are nice and smooth!</p>","tags":["Tools","Tool","Slider"]},{"location":"tools/slider-tool/#display-active-track","title":"Display active track","text":"<p>The second example shows an orange gradient for the active track.</p> <p>The active track must be enabled using: <pre><code>  show:\nactive: true\n</code></pre></p> <p>And defined at the position level: <pre><code>- type: slider\nposition:\ncx: 40\ncy: 81\ncapture:\nwidth: 80\nheight: 15\ntrack:\nwidth: 70\nheight: 2\nradius: 1\nactive:\nheight: 2\nradius: 1\nthumb:\nwidth: 5\nheight: 10\nradius: 1\n</code></pre></p>","tags":["Tools","Tool","Slider"]},{"location":"tools/slider-tool/#styling","title":"Styling","text":"<p>The slider tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inslider SVG and CSS styles <p>The slider tool is composed of four parts: \"track\", \"active\", \"thumb\" and \"label\" + \"uom\" can be used as the selector for styling: <pre><code>- type: 'slider'\nposition:\ncx: 50\ncy: 50\nentity_index: 1\nclasses:\ntrack:                    # Track selector\n&lt;...&gt;\nactive:                   # Active track selector\n&lt;...&gt;\nthumb:                    # Thumb selector\n&lt;...&gt;\nlabel:                    # Label selector\n&lt;...&gt;\nuom:                      # Unit of label selector\n&lt;...&gt;\nstyles:\ntrack:                    # Track selector\n&lt;...&gt;\nactive:                   # Active track selector\n&lt;...&gt;\nthumb:                    # Thumb selector\n&lt;...&gt;\nlabel:                    # Label selector\n&lt;...&gt;\nuom:                      # Unit of label selector\n&lt;...&gt;\n</code></pre></p> <p>Populair properties:</p> Property Does what? Example","tags":["Tools","Tool","Slider"]},{"location":"tools/slider-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The slider supports its own fixed haptic feedback</p> Action Haptic Description Click slider light Feedback that slider is clicked Move slider selection Feedback for every update to HA of the slider value","tags":["Tools","Tool","Slider"]},{"location":"tools/slider-tool/#animations","title":"Animations","text":"<p>The slider tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling","tags":["Tools","Tool","Slider"]},{"location":"tools/slider-tool/#examples","title":"Examples","text":"<p>Some examples with different settings for track and thumb.</p>","tags":["Tools","Tool","Slider"]},{"location":"tools/sparkline-tool/","title":"Advanced Sparkline tool","text":"<p>Part of upcoming release in 2025!</p>","tags":["Tools","Tool","Sparkline"]},{"location":"tools/sparkline-tool/#the-sparkline-tool","title":"The Sparkline tool","text":"<p> 4.0.1 \u00b7  Output</p> <p>Some examples:</p> <ul> <li> <p> Sensor with Sparkline \"Line\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> </li> <li> <p> Sensor with Sparkline \"Area\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> </li> <li> <p> Sensor with Sparkline \"Barcode/Audio\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> </li> <li> <p> Sensor with Sparkline \"Bar\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> </li> <li> <p> Sensor with Sparkline \"Dots\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> </li> <li> <p> Sensor with Sparkline \"Graded/Rank\"</p> <p>A sensor card with a sparkline showing the history of today. </p> <p> </p> </li> </ul>","tags":["Tools","Tool","Sparkline"]},{"location":"tools/sparkline-tool/#styling","title":"Styling","text":"<p>The Sparkline tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles","tags":["Tools","Tool","Sparkline"]},{"location":"tools/sparkline-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Sparkline"]},{"location":"tools/switch-tool/","title":"The Switch tool","text":"<p> 1.0.0 \u00b7  Input</p> <p>The Switch tool is based on two SVG basic <code>&lt;rectangle&gt;</code> element shapes.  It is a composite tool with a built-in animation to move the thumb to 'off' or 'on' position and to change the color to 'off' or 'on' color.</p> <p> </p>","tags":["Tools","Tool","Switch"]},{"location":"tools/switch-tool/#basic-usage","title":"Basic usage","text":"Connected <pre><code>- type: 'switch'              # tooltype is 'switch'\nposition:                   # Position on (100x100) canvas\ncx: 50                    # cx=50 is center position\ncy: 50                    # cy=50 is center position\norientation: 'horizontal' # Vertical or horizontal\nentity_index: 0\n</code></pre> <p>The switch tool must ALWAYS be connected to an 'on' / 'off' state entity.</p> <p>Lights and Switches are the most used entities for this tool.</p>","tags":["Tools","Tool","Switch"]},{"location":"tools/switch-tool/#extended-usage","title":"Extended usage","text":"<p>The Switch tools parts can be defined/styled individually.</p> <pre><code>- type: switch\nposition:\ncx: 50\ncy: 50\ntrack:                    # Configure track part\nradius: 1               # Round corners with radius=1\nthumb:                    # Configure thumb part\nwidth: 5                # Set width\nheight: 5               # Set height\nradius: 1               # Set corner radius\noffset: 2.5             # offset = width/2 for on/off move\norientation: 'horizontal'\nentity_index: 0\nanimations:\n- state: 'on'             # Define thumb colors when 'on'\nid: 1\nstyles:\nthumb:\n--thumb-stroke: 'var(--primary-background-color)'\nfill: 'var(--switch-checked-button-color)'\nstyles:\nthumb:                    # Overwrite thumb setting\n--thumb-stroke: 'var(--primary-background-color)'\n</code></pre> <p>Style the switch to round or square</p> <p>By specifying both the track and the thumb sizes and corner radius, you can create completely different switches.</p>","tags":["Tools","Tool","Switch"]},{"location":"tools/switch-tool/#styling","title":"Styling","text":"<p>The Switch tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inswitch SVG and CSS styles <p>The Switch tool is composed of two parts: \"track\" and \"thumb\" can be used as the selector for styling: <pre><code>- type: 'switch'\nposition:\ncx: 50\ncy: 50\norientation: 'vertical'\nentity_index: 0\nclasses:\ntrack:                    # Track selector\n&lt;...&gt;\nthumb:                    # Thumb selector\n&lt;...&gt;\nstyles:\ntrack:                    # Track selector\n&lt;...&gt;\nthumb:                    # Thumb selector\n&lt;...&gt;\n</code></pre></p> <p>Populair properties:</p> Property Does what? Example","tags":["Tools","Tool","Switch"]},{"location":"tools/switch-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Switch"]},{"location":"tools/switch-tool/#animations","title":"Animations","text":"<p>The Switch tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling","tags":["Tools","Tool","Switch"]},{"location":"tools/switch-tool/#examples","title":"Examples","text":"<p>Some examples with different settings in 'off' and 'on' state.</p> <p></p> <p>From left to right, the partial configuration is as follows:</p> <pre><code>- type: switch                    # #1\nposition:\ncx: 60\ncy: 30\norientation: 'vertical'\n\n- type: switch                    # #2\nposition:\ncx: 80\ncy: 30\norientation: 'horizontal'\n\n- type: switch                    # #3\nposition:\ncx: 100\ncy: 30\ntrack:\nradius: 1\nthumb:\nwidth: 5\nheight: 5\nradius: 1\noffset: 2.5\norientation: 'horizontal'\n\n- type: switch                    # #4\nposition:\ncx: 120\ncy: 30\ntrack:\nradius: 1\nthumb:\nwidth: 5\nheight: 10\nradius: 1\noffset: 2.5\norientation: 'horizontal'\n\n- type: switch                    # #5\nposition:\ncx: 140\ncy: 30\norientation: 'horizontal'\nthumb:\nwidth: 5\nheight: 5\nradius: 2.5\noffset: 2.5\n</code></pre>","tags":["Tools","Tool","Switch"]},{"location":"tools/switch-tool/#ramblings","title":"Ramblings","text":"<p>Just thoughts, nothing more, to extend the switch with some decorators orso: you can define extra basic SVG elements to 'decorate' the track and thumb part of the switch...</p> <pre><code>- type: switch\nposition:\ncx: 50\ncy: 50\ntrack:                    # Configure track part\nradius: 1               # Round corners with radius=1\nthumb:                    # Configure thumb part\nwidth: 5                # Set width\nheight: 5               # Set height\nradius: 1               # Set corner radius\noffset: 2.5             # offset = width/2 for on/off move\norientation: 'horizontal'\nentity_index: 0\ndecorators:\nthumb:\n- type: circle          # Place a circle on top of the thumb\nname: dot             # name it 'dot' used for selections\nposition:\ncx: 50              # center it on the thumb\ncy: 50\nradius: 2           # small one, its called a 'dot'...\nanimations:\n- state: 'on'             # Define thumb colors when 'on'\nid: 1\nstyles:\nthumb:\n--thumb-stroke: 'var(--primary-background-color)'\nfill: 'var(--switch-checked-button-color)'\nthumb.dot:\nstroke: red\nstyles:\nthumb:                    # Overwrite thumb setting\n--thumb-stroke: 'var(--primary-background-color)'\n</code></pre>","tags":["Tools","Tool","Switch"]},{"location":"tools/text-tool/","title":"The Text tool","text":"<p> 1.0.0 \u00b7  Output \u00b7  WIP</p> <p>The Text tool is based on the SVG basic <code>&lt;text&gt;</code>element shape.</p> <p> This is some SVG drawn text </p>","tags":["Tools","Tool","Text"]},{"location":"tools/text-tool/#basic-usage","title":"Basic usage","text":"<p>The Text tool needs a center position, and - of course - some text to display.</p> Standalone <pre><code>- type: 'text'              # tooltype is 'text'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\ntext: 'My Text'\nstyles:\ntext:\nfont-size: 12em       # set font size to 12em\n</code></pre> Connected <pre><code>- type: 'text'              # tooltype is 'text'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nentity_index: 0           # connect to state of entity 0\ntext: 'My Text'\nstyles:\ntext:\nfont-size: 12em       # set font size to 12em\n</code></pre> <p>Always use a relative font-size: it fits well with the relative sizes used by SAK</p> <p>Unless you need a fixed size in pixels...</p>","tags":["Tools","Tool","Text"]},{"location":"tools/text-tool/#styling","title":"Styling","text":"<p>The Text tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>The Text tool is composed of a single object: \"text\" and this is the selector for styling: <pre><code>- type: 'text'\nposition:\ncx: 50\ncy: 50\ntext: 'My Text'\nclasses:\ntext:                   # Text selector\n&lt;...&gt;\nstyles:\ntext:                   # Text selector\n&lt;...&gt;\n</code></pre> Populair properties:</p> Property Does what? Example <code>font-size</code> Font size <code>font-size: 12em</code> sets RELATIVE font size <code>text-anchor</code> Anchor of text <code>text-anchor: start</code> or <code>middle</code>, or <code>end</code> <code>fill</code> Fill color <code>fill: red</code> sets fill to color red <code>stroke-width</code> Stroke width <code>stroke-width: 2em</code> sets width to relative width of 2em <code>stroke</code> Stroke color <code>stroke: blue</code> sets stroke to blue <code>opacity</code> Opacity (stroke/fill) <code>opacity: 0.7</code> sets the opacity of text to 70% <code>fill-opacity</code> Opacity for fill <code>fill-opacity: 0.5</code> sets the fill opacity to 50% <code>stroke-opacity</code> Opacity for stroke <code>stroke-opacity: 0.5</code> sets the stroke opacity to 50% <p>Reference: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/text</p>","tags":["Tools","Tool","Text"]},{"location":"tools/text-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","Text"]},{"location":"tools/text-tool/#animations","title":"Animations","text":"<p>The Text tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling <p>The use of animations require the tool to be connected to an entity</p>","tags":["Tools","Tool","Text"]},{"location":"tools/usersvg-tool/","title":"The User SVG tool","text":"<p> 1.0.0 \u00b7  Output \u00b7</p> <p>The User SVG tool makes it possible to add (external) SVGs, JPGs and PNGs ( 1.0.0-rc.3) to your card.</p> <p> 1.0.0-rc.3 It has also support for clipping and masking, so your external SVG/JPG/PNG will fit the area (from rectangle/square to round) it is displayed within.</p> Weather Weather AirVisual AirVisual <p>An example using clipping and masking: A square image of a washing machine is now fit to the round circle. Furthermore, all images and svgs have an opacity mask.</p> <p></p> <p>Inline SVG support is foreseen in the future</p>","tags":["Tools","Tool","User SVG (svg)","User Image (jpg/png)"]},{"location":"tools/usersvg-tool/#basic-usage","title":"Basic usage","text":"Static fileConnected From: view-sake6<pre><code>- type: 'usersvg'           # tooltype is 'usersvg'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nheight: 100             # Image covers full heigth and...\nwidth: 100              # ...width of card.\nstyle: 'images'\nimages:                   # A static image uses 'default':\n- default: /local/images/backgrounds/balls-background-1.svg\n</code></pre> <p>This one is taken from example 1, the display of the 'face' used for AirVisual. From: view-sake1<pre><code>- type: 'usersvg'           # tooltype is 'usersvg'\nposition:                 # Position on (100x100) canvas\ncx: 50                  # cx=50 is center position\ncy: 50                  # cy=50 is center position\nentity_index: 0           # connect to state of entity 0\nstyle: 'images'\nimages:\n- face1: /local/images/ic-face-1.svg\n- face2: /local/images/ic-face-2.svg\n- face3: /local/images/ic-face-3.svg\n- face4: /local/images/ic-face-4.svg\n- face5: /local/images/ic-face-5.svg\n- face6: /local/images/ic-face-6.svg\nanimations:               # Use animation to switch faces\n- state: '50'\noperator: &lt;=\nimage: face1\n- state: '100'\noperator: &lt;=\nimage: face2\n- state: '150'\noperator: &lt;=\nimage: face3\n- state: '200'\noperator: &lt;=\nimage: face4\n- state: '300'\noperator: &lt;=\nimage: face5\n- state: '9999'\noperator: &lt;=\nimage: face6\n</code></pre></p>","tags":["Tools","Tool","User SVG (svg)","User Image (jpg/png)"]},{"location":"tools/usersvg-tool/#advanced-usage","title":"Advanced usage","text":"<p>This example shows how to clip/mask an image or svg.</p> Connected From: view-sake1<pre><code>- type: 'usersvg'\nentity_index: 3\nposition:\ncx: 50\ncy: 50\nheight: 95\nwidth: 95\nclip_path:\nposition:\ncx: 50\ncy: 50\nheight: 90      # clip height and width to a bit\nwidth: 90       # smaller than image size (95/95)\nradius:         # Irrelevant, since mask will make\nall: 45       # a circle out of this image!\nstyle: 'images'\nimages:\n- face1: /local/images/clip-test.jpg\n- face2: /local/images/airvisual/ic-face-2.svg\n- face3: /local/images/airvisual/ic-face-3.svg\n- face4: /local/images/airvisual/ic-face-4.svg\n- face5: /local/images/airvisual/ic-face-5.svg\n- face6: /local/images/airvisual/ic-face-6.svg\nanimations:\n- state: '50'\noperator: &lt;=\nimage: face1\n- state: '100'\noperator: &lt;=\nimage: face2\n- state: '150'\noperator: &lt;=\nimage: face3\n- state: '200'\noperator: &lt;=\nimage: face4\n- state: '300'\noperator: &lt;=\nimage: face5\n- state: '9999'\noperator: &lt;=\nimage: face6\nstyles:\nusersvg:\nstroke-width: 5em\nmask:\nfill: url(#sak-mask-radial-gradient)    </code></pre>","tags":["Tools","Tool","User SVG (svg)","User Image (jpg/png)"]},{"location":"tools/usersvg-tool/#styling","title":"Styling","text":"<p>As of  2.4.2, styling of external SVG is possible (again)</p> <p>The User SVG tool has support for the following forms of styling:</p> Method Support Description <code>classes</code> Using SAK or User defined class definitions <code>styles</code> Using inline SVG and CSS styles <p>For styling to work, the external SVG must be suitable to get styled</p> <p>See: Make pollen SVGs stylable</p> <p>Things that must be removed in the SVG to allow for external styling are:</p> <ul> <li>Inline style definitions</li> <li>Inline class definitions in the  section of the SVG <p>Things that do work are:</p> <ul> <li>Usage of class definitions wich can be overridden externally</li> <li>Usage of CSS variables which can be set externally</li> </ul> <p>Safari has problems with certain styling</p> <ul> <li>CSS Filters don't work. Use SVG filters instead!</li> <li>Also, chaining filters in Safari does NOT work. Use combined SVG filters instead.</li> <li>For any other Safari problem where things work in Chrome: wait for the new SVG engine </li> </ul> <p>The User SVG tool is composed of a single object: \"usersvg\" and this is the selector for styling: <pre><code>- type: 'usersvg'\nposition:\ncx: 50\ncy: 50\nclasses:\nusersvg:                # Usersvg selector\n&lt;...&gt;\nstyles:\nusersvg:                # Usersvg selector\n&lt;...&gt;\n</code></pre> Populair properties:</p> Property Does what? Example opacity Makes image transparent opacity: 0.5 (for 50% opacity)","tags":["Tools","Tool","User SVG (svg)","User Image (jpg/png)"]},{"location":"tools/usersvg-tool/#styling-injected-vs-external-svgs","title":"Styling: Injected vs external SVGs","text":"<p>External SVGs can't be styled, so-called 'injected' SVGs can be styled.</p> <p>The default behaviour of the User SVG tool is to 'inject' the external SVGs into the tool.</p> <p>However, if the SVG contains local styling and class definitions, and the same SVG is used more than once in a card, you can run into styling problems (internal classes overwrite each other), and you have to force the SVGs to remain external images.</p> <p>This can be done as follows: <pre><code>  options:\nsvginjection: false     # true (default) for injection,\n# false for keeping the external file\n</code></pre></p>","tags":["Tools","Tool","User SVG (svg)","User Image (jpg/png)"]},{"location":"tools/usersvg-tool/#haptics","title":"Haptics","text":"<p>See: https://companion.home-assistant.io/docs/integrations/haptics/ for devices that support haptics</p> <p>The tool supports haptic feedback through <code>user_actions</code>/ <code>tap_action</code> definition</p> Action Haptic Description Click <code>haptic</code> Uses the haptic property defined in the <code>user_actions</code> definition of the tool. If not specified, a default of <code>medium</code> is used <pre><code>  tools:\n- type: icon\nposition:\ncx: 10\ncy: 10\nalign: center\nicon_size: 15\nentity_index: 0\nuser_actions:\ntap_action:\nhaptic: success\nactions:\n- action: more-info\n</code></pre> <p>Possible values for haptic feedback:</p> Haptic Description success Indicates that a task or action has completed. warning Indicates that a task or action has produced a warning of some kind. failure Indicates that a task or action has failed. light Provides a physical metaphor that complements the visual experience. medium Provides a physical metaphor that complements the visual experience. heavy Provides a physical metaphor that complements the visual experience. selection Indicates that the selection is actively changing.","tags":["Tools","Tool","User SVG (svg)","User Image (jpg/png)"]},{"location":"tools/usersvg-tool/#animations","title":"Animations","text":"<p>The User SVG tool has support for the following forms of animations:</p> Method Support Description <code>colorstops</code> List of state values to set the color <code>colorlists</code> Using a colorlist definition <code>animations</code> Operator state based animations with class/style styling <p>The use of animations require the tool to be connected to an entity</p>","tags":["Tools","Tool","User SVG (svg)","User Image (jpg/png)"]},{"location":"tools/usersvg-tool/#detailed-specification","title":"Detailed specification","text":"<p>The basic and advanced usage shows all the functionalities of the User SVG tool.</p>","tags":["Tools","Tool","User SVG (svg)","User Image (jpg/png)"]},{"location":"tutorials/10-step-tutorial-01-intro/","title":"Tutorial #1 Introduction","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-intro/#skill-level-required-knowledge","title":"Skill Level / Required Knowledge","text":"<p>First two parts:  Last two parts: </p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-intro/#contents","title":"Contents","text":"<p>In this tutorial series, you wil learn the following:</p> <ul> <li>Create a basic square card with a circle, entity icon, entity state and entity name.</li> <li>Extend this card to a double height card by duplicating the existing toolset</li> <li>Position a toolset on a card</li> <li>Create a toolset template with variables (re-use)</li> <li>Use the toolset to recreate the double height card</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-intro/#prerequisites","title":"Prerequisites","text":"<p>To follow this tutorial, the following is required:</p> <ul> <li>All tutorials are created in the \"Swiss Army Knife Tutorials\" dashboard. You already should have included that one in your Lovelace configuration.</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part1/","title":"Tutorial #1, Part 1","text":"<p>In this part, you will learn to make the following square card:![10-step-tutorial-01-part1-step-10]</p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part1/#step-1-create-the-yml-view-file","title":"Step 1: Create the yml view file","text":"<ul> <li>Create <code>view-tutorial-basic-series01-part1.yml</code> in the <code>lovelace/views/sak-tutorial-views/</code> folder.</li> <li>Add it to the <code>sak-tutorials-dashboard.yaml</code> in your root folder.</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part1/#step-2-define-the-view-basics","title":"Step 2: define the view basics","text":"<pre><code>title: TUT-01-P1\npath: tut-01-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part1/#step-3-define-a-square-card-with-1-entity","title":"Step 3: Define a square card with 1 entity","text":"<p>You should replace the <code>sensor.humidity</code> with a sensor of your own.</p> <pre><code>title: TUT-01-P1\npath: tut-01-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/1\nentities: - entity: sensor.humidity\nname: Study\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part1/#step-4-add-the-layout-and-toolsets-part","title":"Step 4: Add the layout and toolsets part","text":"<pre><code>title: TUT-01-P1\npath: tut-01-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/1\nentities: - entity: sensor.humidity\nname: Study\nlayout:\ntoolsets:\n- toolset: just-a-name\nposition:\ncx: 50\ncy: 50\ntools:\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part1/#step-5-add-a-circle-tool","title":"Step 5: Add a circle tool","text":"<p>Add a Circle tool centered on the card with a radius of 45.</p> <pre><code>title: TUT-01-P1\npath: tut-01-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/1\nentities: - entity: sensor.humidity\nname: Study\nlayout:\ntoolsets:\n- toolset: just-a-name\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part1/#step-6-make-the-circle-a-bit-reddish","title":"Step 6: Make the circle a bit reddish","text":"<pre><code>title: TUT-01-P1\npath: tut-01-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/1\nentities: - entity: sensor.humidity\nname: Study\nlayout:\ntoolsets:\n- toolset: just-a-name\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part1/#step-7-add-an-icon","title":"Step 7: Add an icon","text":"<p>Add an Entity Icon tool horizontally centered and vertically above the center and give it a size of 25 (25% of the 100x100 grid) and center it on that position.</p> <pre><code>title: TUT-01-P1\npath: tut-01-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/1\nentities: - entity: sensor.humidity\nname: Study\nlayout:\ntoolsets:\n- toolset: just-a-name\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part1/#step-8-add-the-state","title":"Step 8: Add the state","text":"<p>Add an Entity State tool horizontally centered and vertically below the center and give it a font size of 15em (15% of the 100x100 grid).</p> <p>An entity state tool MUST have a font-size!</p> <pre><code>title: TUT-01-P1\npath: tut-01-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/1\nentities: - entity: sensor.humidity\nname: Study\nlayout:\ntoolsets:\n- toolset: just-a-name\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part1/#step-9-add-the-name","title":"Step 9: Add the name","text":"<p>Add an Entity Name tool horizontally and vertically centered.</p> <pre><code>title: TUT-01-P1\npath: tut-01-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/1\nentities: - entity: sensor.humidity\nname: Study\nlayout:\ntoolsets:\n- toolset: just-a-name\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part1/#step-10-format-the-name","title":"Step 10: Format the name","text":"<pre><code>title: TUT-01-P1\npath: tut-01-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/1\nentities: - entity: sensor.humidity\nname: Study\nlayout:\ntoolsets:\n- toolset: just-a-name\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part1/#done","title":"Done!","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part2/","title":"Tutorial #1, Part 2","text":"<p>In this tutorial, you will learn to make the following tall 1 by 2 card:</p> <p>By doing this, you learn something about toolset placement: We place tools on a different position on the card without changing the position of the tools itself, but just by moving the position of the overall toolset!</p> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part2/#prerequisites","title":"Prerequisites","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part2/#step-1-create-the-yml-view-file","title":"Step 1: Create the yml view file","text":"<ul> <li>Create <code>view-tutorial-basic-series01-part2.yml</code> in the <code>lovelace/views/sak-tutorial-views/</code> folder.</li> <li>Add it to the <code>sak-tutorials-dashboard.yaml</code> in your root folder.</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part2/#step-2-define-the-view-basics","title":"Step 2: define the view basics","text":"<pre><code>title: TUT-01-P2\npath: tut-01-p2\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part2/#step-3-copy-the-previous-tutorial-result","title":"Step 3: Copy the previous tutorial result","text":"<pre><code>title: TUT-01-P2\npath: tut-01-p2\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/1\nentities: - entity: sensor.humidity\nname: Study\nlayout:\ntoolsets:\n- toolset: just-a-name\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part2/#step-4-change-card-aspect-ratio-to-12","title":"Step 4: Change card aspect ratio to \u00bd","text":"<pre><code>title: TUT-01-P2\npath: tut-01-p2\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/2\nentities: - entity: sensor.humidity\nname: Study\nlayout:\ntoolsets:\n- toolset: just-a-name\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part2/#step-5-rename-toolset-to-first","title":"Step 5: Rename toolset to first","text":"<pre><code>title: TUT-01-P2\npath: tut-01-p2\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/2\nentities: - entity: sensor.humidity\nname: Study\nlayout:\ntoolsets:\n- toolset: first\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part2/#step-6-add-second-entity-definition","title":"Step 6: Add second entity definition","text":"<pre><code>title: TUT-01-P2\npath: tut-01-p2\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/2\nentities: - entity: sensor.humidity\nname: Study\n- entity: sensor.temperature\nname: Study\nlayout:\ntoolsets:\n- toolset: first\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900                        </code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part2/#step-7-duplicate-toolset-and-name-it-second","title":"Step 7: Duplicate toolset and name it second","text":"<p>Duplicate first toolset to create the identical second one. You won't see any difference on the card, as the two toolsets are exactly positioned on top of each other and display the exact same entity data.</p> <pre><code>title: TUT-01-P2\npath: tut-01-p2\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/2\nentities: - entity: sensor.humidity\nname: Study\n- entity: sensor.temperature\nname: Study\nlayout:\ntoolsets:\n- toolset: first\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900    - toolset: second\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900    </code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part2/#step-8-connect-second-toolset-to-entity-index-1","title":"Step 8: connect second toolset to entity index 1","text":"<p>Connect second toolset to entity index 1. You will now see the two toolsets displayed over each other.</p> <pre><code>title: TUT-01-P2\npath: tut-01-p2\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/2\nentities: - entity: sensor.humidity\nname: Study\n- entity: sensor.temperature\nname: Study\nlayout:\ntoolsets:\n- toolset: first\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\n- toolset: second\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 1\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 1\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 1\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part2/#step-9-position-the-second-toolset","title":"Step 9: Position the second toolset","text":"<p>Finally, position the second toolset below the first toolset. The center position is (50,150).</p> <pre><code>title: TUT-01-P2\npath: tut-01-p2\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/2\nentities: - entity: sensor.humidity\nname: Study\n- entity: sensor.temperature\nname: Study\nlayout:\ntoolsets:\n- toolset: first\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900\n- toolset: second\nposition:\ncx: 50\ncy: 150\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 1\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 1\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 1\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part2/#done","title":"Done!","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part3/","title":"Tutorial #1, Part 3","text":"<p>In this tutorial, you will learn how to create a Swiss Army Knife toolset template from the toolset created in part 1 and to define and use template variables.</p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part3/#prerequisites","title":"Prerequisites","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part3/#step-1-create-the-yaml-template-file","title":"Step 1: Create the yaml template file","text":"<ul> <li>Create <code>toolset-tutorial-basic-01-part3-template.yaml</code> in the <code>lovelace/sak_templates/templates/toolsets/</code> folder.</li> <li>The template is automatically included once you force a refresh of Lovelace.</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part3/#step-2-define-the-template-basics","title":"Step 2: define the template basics","text":"<pre><code>toolset_tutorial_basic_03:\ntemplate:\ntype: toolset\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part3/#step-3-add-defaults-for-the-variables-we-can-pass-to-the-template","title":"Step 3: Add defaults for the variables we can pass to the template","text":"<pre><code>toolset_tutorial_basic_03:\ntemplate:\ntype: toolset\ndefaults: - var_entity_index: 0\n- var_toolset_position_cx: 50\n- var_toolset_position_cy: 50\ntoolset:\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part3/#step-4-remember-tutorial-1","title":"Step 4: Remember tutorial 1?","text":"<p>This is the <code>yml</code> file we created earlier!</p> <p>Actions:</p> <ul> <li>Select and copy the toolset part.</li> </ul> <pre><code>title: TUT-01-P1\npath: tut-01-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/1\nentities: - entity: sensor.humidity\nname: Study\nlayout:\ntoolsets:\n- toolset: just-a-name\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part3/#step-5-copy-toolset-part-to-template-and-take-care-of-indentation","title":"Step 5: Copy toolset part to template and take care of indentation","text":"<p>Actions:</p> <ul> <li>Copy the selected YAML code in Step 4 into this file.</li> <li>Remove the dash before toolset, as this is not an array anymore (single toolset, not toolsets)</li> <li>Shift all to the left to get the correct YAML indentation.</li> </ul> <pre><code>toolset_tutorial_01_part3:\ntemplate:\ntype: toolset\ndefaults: - var_entity_index: 0\n- var_toolset_position_cx: 50\n- var_toolset_position_cy: 50\ntoolset:\ntoolset: just-a-name\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part3/#step-6-rename-toolset-name","title":"Step 6: Rename toolset name","text":"<pre><code>toolset_tutorial_01_part3:\ntemplate:\ntype: toolset\ndefaults: - var_entity_index: 0\n- var_toolset_position_cx: 50\n- var_toolset_position_cy: 50\ntoolset:\ntoolset: tutorial-basic-01-part3\nposition:\ncx: 50\ncy: 50\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900                 </code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part3/#step-7-use-variables-for-the-toolset-position","title":"Step 7: Use variables for the toolset position","text":"<pre><code>toolset_tutorial_01_part3:\ntemplate:\ntype: toolset\ndefaults: - var_entity_index: 0\n- var_toolset_position_cx: 50\n- var_toolset_position_cy: 50\ntoolset:\ntoolset: tutorial-basic-01-part3\nposition:\ncx: '[[var_toolset_position_cx]]'\ncy: '[[var_toolset_position_cy]]'\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: 0\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: 0\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900   </code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part3/#step-8-use-variable-for-the-entity","title":"Step 8: use variable for the entity","text":"<pre><code>toolset_tutorial_01_part3:\ntemplate:\ntype: toolset\ndefaults: - var_entity_index: 0\n- var_toolset_position_cx: 50\n- var_toolset_position_cy: 50\ntoolset:\ntoolset: tutorial-basic-01-part3\nposition:\ncx: '[[var_toolset_position_cx]]'\ncy: '[[var_toolset_position_cy]]'\ntools:\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 45\nstyles:\ncircle:\nstroke-width: 2em\nstroke: red\nstroke-opacity: 0.5\nfill: bisque\nfill-opacity: 0.5\n- type: icon\nposition:\ncx: 50\ncy: 25\nalign: center\nicon_size: 25\nentity_index: '[[var_entity_index]]'\n- type: state\nposition:\ncx: 50\ncy: 70\nentity_index: '[[var_entity_index]]'\nstyles:\nstate:\nfont-size: 15em\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: '[[var_entity_index]]'\nstyles:\nname:\nfont-size: 15em\nfont-weight: 900\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part3/#done","title":"Done!","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part4/","title":"Tutorial #1, Part 4","text":"<p>In this tutorial, you will learn how to create a Swiss Army Knife toolset template from the toolset created in Part 3.</p> <p>By doing this, you learn something about how to use a toolset template and variables.</p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part4/#prerequisites","title":"Prerequisites","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part4/#step-1-create-the-yml-view-file","title":"Step 1: Create the yml view file","text":"<ul> <li>Create <code>view-tutorial-basic-series01-part4.yml</code> in the <code>lovelace/views/sak-tutorial-views/</code> folder.</li> <li>Add it to the <code>sak-tutorials-dashboard.yaml</code> in your root folder.</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part4/#step-2-define-the-view-basics","title":"Step 2: define the view basics","text":"<pre><code>title: TUT-01-P4\npath: tut-01-p4\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part4/#step-3-define-card-entities-and-layout-structure","title":"Step 3: Define card, entities and layout structure","text":"<pre><code>title: TUT-01-P4\npath: tut-01-p4\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/2\nentities: - entity: sensor.humidity\nname: Study\n- entity: sensor.temperature\nname: Study\nlayout:\ntoolsets:\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part4/#step-4-add-first-toolset-using-the-template","title":"Step 4: Add first toolset using the template","text":"<pre><code>title: TUT-01-P4\npath: tut-01-p4\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/2\nentities: - entity: sensor.humidity\nname: Study\n- entity: sensor.temperature\nname: Study\nlayout:\ntoolsets:\n- toolset: first\ntemplate:\nname: toolset_tutorial_01_part3\nvariables:\n- var_entity_index: 0\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part4/#step-5-add-second-toolset-using-the-template","title":"Step 5: Add second toolset using the template","text":"<p>Actions:</p> <ul> <li>Add second template</li> <li>Pass entity index 1 as a variable</li> <li>Pass the new toolset cy position as a variable</li> </ul> <pre><code>title: TUT-01-P4\npath: tut-01-p4\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\naspectratio: 1/2\nentities: - entity: sensor.humidity\nname: Study\n- entity: sensor.temperature\nname: Study\nlayout:\ntoolsets:\n- toolset: first\ntemplate:\nname: toolset_tutorial_01_part3\nvariables:\n- var_entity_index: 0\n- toolset: second\ntemplate:\nname: toolset_tutorial_01_part3\nvariables:\n- var_entity_index: 1\n- var_toolset_position_cy: 150\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-01-part4/#done","title":"Done!","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-intro/","title":"Tutorial #3, Introduction","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-intro/#skill-level-required-knowledge","title":"Skill Level / Required Knowledge","text":"<p> ... </p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-intro/#contents","title":"Contents","text":"<p>In this tutorial series, you will learn the following:</p> <ul> <li>Recreate the advanced wide server statistics card from example 12</li> <li>Create a template with variables from the segmented arc / icon / state toolset</li> <li>Use the template to visualize the server statistics</li> <li>See how much YAML it saves by using SAK toolset templates</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-intro/#prerequisites","title":"Prerequisites","text":"<p>To follow this tutorial, the following is required:</p> <ul> <li>All tutorials are created in the \"Swiss Army Knife Tutorials\" dashboard. You already should have included that one in your Lovelace configuration.</li> <li>This tutorial requires a Material 3 theme.</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/","title":"Tutorial #2, Part 1","text":"<p>In this tutorial, we are going to make the following wide card: </p> <p>Such a card is part of Example 12.</p> <p>But as opposed to the example, we will create a toolset template for the 4 segmented arcs with icon and state displayed. So the result of the tutorial is in fact better than the original! And much shorter due to the use of templates.</p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/#prerequisites","title":"Prerequisites","text":"<p>This tutorial requires:</p> <ul> <li>An active Material 3 theme</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/#step-1-create-the-yml-view-file","title":"Step 1: Create the yml view file","text":"<ul> <li>Create <code>view-tutorial-02-part1.yml</code> in the <code>lovelace/views/sak-tutorial-views/</code> folder.</li> <li>Add it to the <code>sak-tutorials-dashboard.yaml</code> in your root folder.</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/#step-2-define-the-view-basics-card-entities-and-layout","title":"Step 2: Define the view basics, card, entities and layout","text":"<p>We are going to use 5 entities from the System Monitor integration.</p> <pre><code>title: TUT-02-P1\npath: tut-02-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# CPU\n- entity: sensor.processor_use\ndecimals: 0\nname: 'Hestia'\n# Memory\n- entity: sensor.memory_use_percent\nicon: mdi:memory\ndecimals: 0\n# Disk\n- entity: sensor.disk_use_percent\ndecimals: 0\nicon: mdi:harddisk\n# System Load\n- entity: sensor.load_1m\ndecimals: 2\nunit: '1m'\n# Last changed\n- entity: sensor.processor_use\nsecondary_info: last_changed\nformat: relative\n\n# Define aspect ratio\naspectratio: 6/1\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/#step-3-header-first-column","title":"Step 3: Header, first column","text":"<p>The header is divided into three columns: the half circle with the icon, then the name and the state, and in the last header column the vertical line.</p> <p>Define the first column of the header:</p> <ul> <li>half a circle, which is in fact a full circle but clipped by the card due to our positioning the circles center at the card's edge.</li> <li>a fixed icon</li> </ul> <pre><code>title: TUT-02-P1\npath: tut-02-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Removed for brevity!\n\n# Define aspect ratio\naspectratio: 6/1\nlayout:\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nstyles:\ncircle:\nstroke: none\nfill: var(--theme-sys-palette-primary30)\n# ================================================================\n- toolset: colomn-icon\nposition:\ncx: 30\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 30\nicon: mdi:server-network\nstyles:\nicon:\nfill: var(--primary-background-color)\nopacity: 0.9\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/#step-4-header-second-column","title":"Step 4: Header, second column","text":"<pre><code>title: TUT-02-P1\npath: tut-02-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Removed for brevity!\n\n# Define aspect ratio\naspectratio: 6/1\nlayout:\ntoolsets:\n# ================================================================\n- toolset: half-circle\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-icon\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-name\nposition:\ncx: 120\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: middle\nfont-size: 25em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 80\nentity_index: 4\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 14em\nfont-weight: 500\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/#step-5-header-third-column","title":"Step 5: Header, third column","text":"<pre><code>title: TUT-02-P1\npath: tut-02-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Removed for brevity!\n\n# Define aspect ratio\naspectratio: 6/1\nlayout:\ntoolsets:\n# ================================================================\n- toolset: half-circle\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-icon\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-name\n# Removed for brevity!\n\n# ================================================================\n- toolset: line1\nposition:\ncx: 200\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 50\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/#step-6-add-segmented-arc-as-part-of-the-segarc-icon-state-toolset","title":"Step 6: Add segmented arc as part of the segarc, icon, state toolset","text":"<p>We design the toolset with a segmented arc tool, icon tool and state tool in this card before converting it to a toolset template.</p> <p>The <code>segarc</code> consists of 4 segments, each having a slightly different primary Material 3 theme color.</p> <pre><code>title: TUT-02-P1\npath: tut-02-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Removed for brevity!\n\n# Define aspect ratio\naspectratio: 6/1\nlayout:\ntoolsets:\n# ================================================================\n- toolset: half-circle\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-icon\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-name\n# Removed for brevity!\n\n# ================================================================\n- toolset: line1\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-cpu\nposition:\ncx: 260\ncy: 50\ntools:\n# -------------------------------------------------------------- \n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 0\nend_angle: 360\nwidth: 6\nradius: 40\nentity_index: 0\nscale:\nmin: 0\nmax: 100\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-palette-primary50)\n- var(--theme-sys-palette-primary45)\n- var(--theme-sys-palette-primary40)\n- var(--theme-sys-palette-primary35)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/#step-7-add-icon-as-part-of-the-segarc-icon-state-toolset","title":"Step 7: Add icon as part of the segarc, icon, state toolset","text":"<pre><code>title: TUT-02-P1\npath: tut-02-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Removed for brevity!\n\n# Define aspect ratio\naspectratio: 6/1\nlayout:\ntoolsets:\n# ================================================================\n- toolset: half-circle\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-icon\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-name\n# Removed for brevity!\n\n# ================================================================\n- toolset: line1\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-cpu\nposition:\ncx: 260\ncy: 50\ntools:\n# --------------------------------------------------------------\n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 0\nend_angle: 360\nwidth: 6\nradius: 40\nentity_index: 0\nscale:\nmin: 0\nmax: 100\nwidth: 6\noffset: 12\nshow:\nscale: false\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1\ncolors:\n- var(--theme-sys-palette-primary50)\n- var(--theme-sys-palette-primary45)\n- var(--theme-sys-palette-primary40)\n- var(--theme-sys-palette-primary35)\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n# --------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 30\nalign: center\nicon_size: 25\nentity_index: 0\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/#step-8-add-state-as-part-of-the-segarc-icon-state-toolset","title":"Step 8: Add state as part of the segarc, icon, state toolset","text":"<p>And the last part of the toolset: the <code>state</code>. The <code>uom</code> is shown below the <code>state</code> value.</p> <pre><code>title: TUT-02-P1\npath: tut-02-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Removed for brevity!\n\n# Define aspect ratio\naspectratio: 6/1\nlayout:\ntoolsets:\n# ================================================================\n- toolset: half-circle\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-icon\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-name\n# Removed for brevity!\n\n# ================================================================\n- toolset: line1\n# Removed for brevity!\n\n# ================================================================\n- toolset: colomn-cpu\nposition:\ncx: 260\ncy: 50\ntools:\n# --------------------------------------------------------------\n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 0                            # Arc clockwise from\nend_angle: 360                            # 0 to 360 degrees\nwidth: 6\nradius: 40                                # Radius on 100x100 grid\nentity_index: 0\nscale:\nmin: 0\nmax: 100\nwidth: 6\noffset: 12\nshow:\nscale: false                              # Disable scale of segarc\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1                                  # Gap between segments\ncolors:\n- var(--theme-sys-palette-primary50)  # Use 4 system palette\n- var(--theme-sys-palette-primary45)  # colors that adhere\n- var(--theme-sys-palette-primary40)  # to light and dark\n- var(--theme-sys-palette-primary35)  # theme modes!\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n# --------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 30\nalign: center\nicon_size: 25\nentity_index: 0\n# --------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 55\nentity_index: 0\nshow:\nuom: bottom\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 20em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/#step-9-create-template-for-segarciconstate-toolset","title":"Step 9: Create template for segarc/icon/state toolset","text":"<pre><code>toolset_tutorial_02_part1:\ntemplate:\ntype: toolset\ndefaults: - var_entity_index: 0\n- var_toolset_position_cx: 50\n- var_toolset_position_cy: 50\n- var_segarc_scale_min: 0\n- var_segarc_scale_max: 100\ntoolset:\ntoolset: tutorial-advanced-01\nposition:\ncx: '[[var_toolset_position_cx]]'\ncy: '[[var_toolset_position_cy]]'\ntools:\n# ------------------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 30\nalign: center\nicon_size: 25\nentity_index: '[[var_entity_index]]'\n\n# ------------------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 55\nentity_index: '[[var_entity_index]]'\nshow:\nuom: bottom                               # Show UOM below state value\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 20em\nfont-weight: 700\nfill: var(--primary-text-color)\nuom:\nfill: var(--primary-text-color)\nfont-weight: 700\n\n# ------------------------------------------------------------------------\n- type: 'segarc'\nid: 0\nposition:\ncx: 50\ncy: 50\nstart_angle: 0                            # Arc clockwise from\nend_angle: 360                            # 0 to 360 degrees\nwidth: 6\nradius: 40                                # Radius on 100x100 grid\nentity_index: '[[var_entity_index]]'\nscale:\nmin: '[[var_segarc_scale_min]]'\nmax: '[[var_segarc_scale_max]]'\nwidth: 6\noffset: 12\nshow:\nscale: false                              # Disable scale of segarc\nstyle: 'colorlist'\nsegments:\ncolorlist:\ngap: 1                                  # Gap between segments\ncolors:\n- var(--theme-sys-palette-primary50)  # Use 4 system palette\n- var(--theme-sys-palette-primary45)  # colors that adhere\n- var(--theme-sys-palette-primary40)  # to light and dark\n- var(--theme-sys-palette-primary35)  # theme modes!\nstyles:\nforeground:\nfill: darkgrey\nbackground:\nfill: var(--theme-sys-elevation-surface-neutral4)\nopacity: 1\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/#step-10-finalize-card-by-using-4-of-the-templates","title":"Step 10: Finalize card by using 4 of the templates","text":"<p>Use the in the previous step created tools template to finalize the card. Use the templates to show the CPU, Memory, Disk and load values.</p> view-tutorial-01-part1.yml<pre><code>title: TUT-02-P1\npath: tut-02-p1\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# CPU\n- entity: sensor.processor_use\ndecimals: 0\nname: 'Hestia'\n# Memory\n- entity: sensor.memory_use_percent\nicon: mdi:memory\ndecimals: 0\n# Disk\n- entity: sensor.disk_use_percent\ndecimals: 0\nicon: mdi:harddisk\n# System Load\n- entity: sensor.load_1m\ndecimals: 2\nunit: '1m'\n# Last changed\n- entity: sensor.processor_use\nsecondary_info: last_changed\nformat: relative\n\n# Define aspect ratio\naspectratio: 6/1                          # Card is 600x100 grid\n\nlayout:\ntoolsets:\n# ================================================================\n- toolset: half-circle\nposition:\ncx: 0                             # Center on cards border \ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: circle\nposition:\ncx: 50\ncy: 50\nradius: 50\nstyles:\ncircle:\nstroke: none\nfill: var(--theme-sys-palette-primary30)\n\n# ================================================================\n- toolset: colomn-icon\nposition:\ncx: 30\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: icon\nposition:\ncx: 50\ncy: 50\nalign: center\nicon_size: 30\nicon: mdi:server-network\nstyles:\nicon:\nfill: var(--primary-background-color)\nopacity: 0.9\n\n# ================================================================\n- toolset: colomn-name\nposition:\ncx: 120\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\ntext-anchor: middle\nfont-size: 25em\nfont-weight: 700\nopacity: 1\n# ------------------------------------------------------------\n- type: state\nposition:\ncx: 50\ncy: 80\nentity_index: 4\nshow:\nuom: none\nstyles:\nstate:\ntext-anchor: middle\nfont-size: 14em\nfont-weight: 500\n\n# ================================================================\n- toolset: line1\nposition:\ncx: 200                           # On 1/3 of card width\ncy: 50\ntools:\n# ------------------------------------------------------------\n- type: line\nposition:\ncx: 50\ncy: 50\norientation: vertical\nlength: 50\nstyles:\nline:\nfill: var(--primary-text-color)\nopacity: 0.5\n\n# ================================================================\n- toolset: colomn-cpu\ntemplate:\nname: toolset_tutorial_02_part1\nvariables:\n- var_toolset_position_cx: 260\n# ================================================================\n- toolset: colomn-memory\ntemplate:\nname: toolset_tutorial_02_part1\nvariables:\n- var_entity_index: 1\n- var_toolset_position_cx: 355\n# ================================================================\n- toolset: colomn-disk\ntemplate:\nname: toolset_tutorial_02_part1\nvariables:\n- var_entity_index: 2\n- var_toolset_position_cx: 450\n# ================================================================\n- toolset: colomn-load\ntemplate:\nname: toolset_tutorial_02_part1\nvariables:\n- var_entity_index: 3\n- var_toolset_position_cx: 545\n- var_segarc_scale_max: 2\n</code></pre> <p>The final result: </p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-02-part1/#done","title":"Done!","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-intro/","title":"Tutorial #3, Introduction","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-intro/#skill-level-required-knowledge","title":"Skill Level / Required Knowledge","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-intro/#contents","title":"Contents","text":"<p>In this tutorial series, you will learn the following:</p> <ul> <li>Recreate the basic entity from example 4.</li> <li>That the order in which tools are defined, they are created, so you can overlay tools on top of each other.</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-intro/#prerequisites","title":"Prerequisites","text":"<p>To follow this tutorial, the following is required:</p> <ul> <li>All tutorials are created in the \"Swiss Army Knife Tutorials\" dashboard. You already should have included that one in your Lovelace configuration.</li> <li>This tutorial requires the \"NM - Gonsboro\" theme. We use some color definitions from that theme!</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/","title":"Tutorial #3, Part 1","text":"<p>In this tutorial, we are going to make the following basic card: </p> <p>Such a card is part of Example 4, second row of cards.</p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#prerequisites","title":"Prerequisites","text":"<p>This tutorial requires:</p> <ul> <li>The \"NM - Gonsboro\" theme to be downloaded in the theme folder. It uses some color definitions from that theme.</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#step-1-create-the-yml-view-file","title":"Step 1: Create the yml view file","text":"<ul> <li>Create <code>view-tutorial-03-part1.yml</code> in the <code>lovelace/views/sak-tutorial-views/</code> folder.</li> <li>Add it to the <code>sak-tutorials-dashboard.yaml</code> in your root folder.</li> </ul>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#step-2-define-the-view-basics-card-entities-and-layout","title":"Step 2: Define the view basics, card, entities and layout","text":"<p>We are going to use a lux sensor. But you can use any other sensor, as long as it has history. So a temperature or humidity sensor is also ok.</p> <pre><code>title: TUT-03-P1\npath: tut-03-p1\ntheme: 'NM - Gonsboro'\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Lux\n- entity: sensor.illuminance\ndecimals: 0\nicon: mdi:alarm-light-outline\nname: 'Study'\naspectratio: 1/1\nlayout:\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#step-3a-define-card-background","title":"Step 3a: Define card background","text":"<p>Actions:</p> <ul> <li>Add a rectangle covering the card completely as a kind of card background.</li> </ul> <pre><code>title: TUT-03-P1\npath: tut-03-p1\ntheme: 'NM - Gonsboro'\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Lux\n- entity: sensor.illuminance\ndecimals: 0\nicon: mdi:alarm-light-outline\nname: 'Study'\naspectratio: 1/1\nlayout:\ntoolsets:\n- toolset: lux\nposition:\ncx: 50\ncy: 50\nscale: 1\ntools:\n# Card Background\n# ---------------------------------------------\n- type: rectex\nposition:\ncx: 50\ncy: 50\nwidth: 100\nheight: 100\nstyles:\nrectex:\nfill: var(--theme-gradient-color-01)\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#step-3b-define-darker-top-part","title":"Step 3b: Define darker top part","text":"<p>Actions:</p> <ul> <li>Add a second rectangle covering the top part of the card background.</li> </ul> <pre><code>title: TUT-03-P1\npath: tut-03-p1\ntheme: 'NM - Gonsboro'\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Lux\n- entity: sensor.illuminance\ndecimals: 0\nicon: mdi:alarm-light-outline\nname: 'Study'\naspectratio: 1/1\nlayout:\ntoolsets:\n- toolset: lux\nposition:\ncx: 50\ncy: 50\nscale: 1\ntools:\n# Card Background\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Top part\n# ---------------------------------------------\n- type: rectex\nposition:\ncx: 50\ncy: 20\nwidth: 100\nheight: 40\nstyles:\nrectex:\nfill: var(--theme-gradient-color-03)\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#step-4-add-extra-neck-background","title":"Step 4: Add extra 'neck' background","text":"<p>Actions:</p> <ul> <li>Add a third rectangle as a kind of neck</li> </ul> <pre><code>title: TUT-03-P1\npath: tut-03-p1\ntheme: 'NM - Gonsboro'\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Lux\n- entity: sensor.illuminance\ndecimals: 0\nicon: mdi:alarm-light-outline\nname: 'Study'\naspectratio: 1/1\nlayout:\ntoolsets:\n- toolset: lux\nposition:\ncx: 50\ncy: 50\nscale: 1\ntools:\n# Card Background\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Top part\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Neck to connect two parts\n# ---------------------------------------------\n- type: rectex\nposition:\ncx: 50\ncy: 33\nwidth: 80\nheight: 15\nstyles:\nrectex:\nfill: var(--theme-gradient-color-01)\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#step-5-add-background-for-state-and-icon","title":"Step 5: Add background for State and Icon","text":"<p>Actions:</p> <ul> <li>Add another <code>rectex</code> tool. This time with <code>top_radius: 5</code> to get round corners at the topside of the rectangle.</li> </ul> <pre><code>title: TUT-03-P1\npath: tut-03-p1\ntheme: 'NM - Gonsboro'\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Lux\n- entity: sensor.illuminance\ndecimals: 0\nicon: mdi:alarm-light-outline\nname: 'Study'\naspectratio: 1/1\nlayout:\ntoolsets:\n- toolset: lux\nposition:\ncx: 50\ncy: 50\nscale: 1\ntools:\n# Card Background\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Top part\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Background for Name and Bar\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# State and Icon background\n# ---------------------------------------------\n- type: rectex\nposition:\ncx: 50\ncy: 18\nwidth: 80\nheight: 16\nradius:\ntop: 5\nstyles:\nrectex:\nfill: var(--theme-gradient-color-02)\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#step-6-add-state","title":"Step 6: Add state","text":"<pre><code>title: TUT-03-P1\npath: tut-03-p1\ntheme: 'NM - Gonsboro'\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Lux\n- entity: sensor.illuminance\ndecimals: 0\nicon: mdi:alarm-light-outline\nname: 'Study'\naspectratio: 1/1\nlayout:\ntoolsets:\n- toolset: lux\nposition:\ncx: 50\ncy: 50\nscale: 1\ntools:\n# Card Background\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Top part\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Background for Name and Bar\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# State and Icon background\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# ---------------------------------------------\n- type: state\nposition:\ncx: 35\ncy: 18\nentity_index: 0\nstyles:\nstate:\nfont-size: 12em\nfont-weight: 700\nfill: black\nuom:\nfill: black\nfont-weight: 700\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#step-7-add-vertical-line-as-separator","title":"Step 7: Add vertical line as separator","text":"<pre><code>title: TUT-03-P1\npath: tut-03-p1\ntheme: 'NM - Gonsboro'\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Lux\n- entity: sensor.illuminance\ndecimals: 0\nicon: mdi:alarm-light-outline\nname: 'Study'\naspectratio: 1/1\nlayout:\ntoolsets:\n- toolset: lux\nposition:\ncx: 50\ncy: 50\nscale: 1\ntools:\n# Card Background\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Top part\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Background for Name and Bar\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# State and Icon background\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# ---------------------------------------------\n- type: state\n# Removed for brevity\n# ---------------------------------------------\n- type: state\n# Removed for brevity\n# ---------------------------------------------\n- type: line\nposition:\ncx: 60\ncy: 18\nlength: 10\norientation: vertical\nstyles:\nline:\nstroke: black\nstroke-opacity: 0.5\nstroke-width: 3\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#step-8-add-icon-tool","title":"Step 8: Add Icon tool","text":"<pre><code>title: TUT-03-P1\npath: tut-03-p1\ntheme: 'NM - Gonsboro'\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Lux\n- entity: sensor.illuminance\ndecimals: 0\nicon: mdi:alarm-light-outline\nname: 'Study'\naspectratio: 1/1\nlayout:\ntoolsets:\n- toolset: lux\nposition:\ncx: 50\ncy: 50\nscale: 1\ntools:\n# Card Background\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Top part\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Background for Name and Bar\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# State and Icon background\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# ---------------------------------------------\n- type: state\n# Removed for brevity\n# ---------------------------------------------\n- type: line\n# Removed for brevity\n# ---------------------------------------------\n- type: icon\nposition:\ncx: 75\ncy: 18\nalign: center\nicon_size: 12\nentity_index: 0\nstyles:\nicon:\nfill: black\n</code></pre>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#step-9-add-entity-name-tool","title":"Step 9: Add entity name tool","text":"<p>Actions:</p> <ul> <li>Add an entity name tool</li> </ul> <pre><code>title: TUT-03-P1\npath: tut-03-p1\ntheme: 'NM - Gonsboro'\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Lux\n- entity: sensor.illuminance\ndecimals: 0\nicon: mdi:alarm-light-outline\nname: 'Study'\naspectratio: 1/1\nlayout:\ntoolsets:\n- toolset: lux\nposition:\ncx: 50\ncy: 50\nscale: 1\ntools:\n# Card Background\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Top part\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# Background for Name and Bar\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# State and Icon background\n# ---------------------------------------------\n- type: rectex\n# Removed for brevity\n# ---------------------------------------------\n- type: state\n# Removed for brevity\n# ---------------------------------------------\n- type: line\n# Removed for brevity\n# ---------------------------------------------\n- type: icon\n# Removed for brevity\n# ---------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 10em\nfont-weight: 700\nfill: black\n</code></pre> <p></p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#step-10-finalize-card-by-adding-the-history-bar","title":"Step 10: Finalize card by adding the history bar","text":"<p>Actions:</p> <ul> <li>Add the bar tool to show 24 hour history (<code>hours: 24</code>) with 12 bars (<code>barhours: 2</code>, ie hours/barhours=12)</li> </ul> view-tutorial-03-part1.yml<pre><code>title: TUT-03-P1\npath: tut-03-p1\ntheme: 'NM - Gonsboro'\npanel: false\ncards:\n- type: vertical-stack\ncards:\n- type: horizontal-stack\ncards:\n- type: 'custom:swiss-army-knife-card'\nentities:\n# Lux\n- entity: sensor.illuminance\ndecimals: 0\nicon: mdi:alarm-light-outline\nname: 'Study'\naspectratio: 1/1\nlayout:\ntoolsets:\n- toolset: lux\nposition:\ncx: 50\ncy: 50\nscale: 1\ntools:\n# Card Background\n# ---------------------------------------------\n- type: rectex\nposition:\ncx: 50\ncy: 50\nwidth: 100\nheight: 100\nstyles:\nrectex:\nfill: var(--theme-gradient-color-01)\n# Top part\n# ---------------------------------------------\n- type: rectex\nposition:\ncx: 50\ncy: 20\nwidth: 100\nheight: 40\nstyles:\nrectex:\nfill: var(--theme-gradient-color-03)\n# Background for Name and Bar\n# ---------------------------------------------\n- type: rectex\nposition:\ncx: 50\ncy: 33\nwidth: 80\nheight: 15\nstyles:\nrectex:\nfill: var(--theme-gradient-color-01)\n# State and Icon background\n# ---------------------------------------------\n- type: rectex\nposition:\ncx: 50\ncy: 18\nwidth: 80\nheight: 16\nradius:\ntop: 5\nstyles:\nrectex:\nfill: var(--theme-gradient-color-02)\n# ---------------------------------------------\n- type: state\nposition:\ncx: 35\ncy: 18\nentity_index: 0\nstyles:\nstate:\nfont-size: 12em\nfont-weight: 700\nfill: black\nuom:\nfill: black\nfont-weight: 700\n# ---------------------------------------------\n- type: line\nposition:\ncx: 60\ncy: 18\nlength: 10\norientation: vertical\nstyles:\nline:\nstroke: black\nstroke-opacity: 0.5\nstroke-width: 3\n# ---------------------------------------------\n- type: icon\nposition:\ncx: 75\ncy: 18\nalign: center\nicon_size: 12\nentity_index: 0\nstyles:\nicon:\nfill: black\n# ---------------------------------------------\n- type: name\nposition:\ncx: 50\ncy: 50\nentity_index: 0\nstyles:\nname:\nfont-size: 10em\nfont-weight: 700\nfill: black\n# ---------------------------------------------\n- type: bar\nid: 2\nentity_index: 0\nposition:\norientation: vertical\ncx: 50\ncy: 80\nwidth: 70\nheight: 25\nmargin: 1.5\nhours: 24\nbarhours: 2\nstyles:\nbar:\nstroke: grey\nstroke-linecap: butt\n</code></pre> <p>The final result: </p>","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-03-part1/#done","title":"Done!","text":"","tags":["Tutorials","10 Steps or less"]},{"location":"tutorials/10-step-tutorial-introduction/","title":"10 step tutorials Introduction","text":"","tags":["Tutorials","Introduction","10 steps"]},{"location":"tutorials/10-step-tutorial-introduction/#introducing-10-step-or-less-tutorials","title":"Introducing 10 step (or less) tutorials","text":"<p>Everybody has learned to count from 1 to 10 when we were young. 10 steps are also manageable to learning something. Not all tutorials will contain the full 10 steps if we simply don't need more steps to finish the tutorial.</p> <p>I just started creating these tutorials, so I am still finding out what works and what doesn't work.</p>","tags":["Tutorials","Introduction","10 steps"]},{"location":"tutorials/10-step-tutorial-introduction/#tbd","title":"TBD","text":"","tags":["Tutorials","Introduction","10 steps"]}]}