{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Swiss Army Knife custom card for Home Assistant documenation \u00b6 This card is not yet released. Documentation is for testing purposes!","title":"Home"},{"location":"#welcome-to-the-swiss-army-knife-custom-card-for-home-assistant-documenation","text":"This card is not yet released. Documentation is for testing purposes!","title":"Welcome to the Swiss Army Knife custom card for Home Assistant documenation"},{"location":"a-page/","text":"Testing my first chapter! \u00b6 Look if this is gonna work for me. Who knows? It seems to rebuild indeed on save. Almost instant! Still have to learn a bit of MD, but that will come as I copy stuff from other sites. Does this do it?","title":"A page"},{"location":"a-page/#testing-my-first-chapter","text":"Look if this is gonna work for me. Who knows? It seems to rebuild indeed on save. Almost instant! Still have to learn a bit of MD, but that will come as I copy stuff from other sites. Does this do it?","title":"Testing my first chapter!"},{"location":"second-page/","text":"Testing my first chapter! \u00b6 Look if this is gonna work for me. Who knows? It seems to rebuild indeed on save. Almost instant! Still have to learn a bit of MD, but that will come as I copy stuff from other sites. Does this do it?","title":"Second page"},{"location":"second-page/#testing-my-first-chapter","text":"Look if this is gonna work for me. Who knows? It seems to rebuild indeed on save. Almost instant! Still have to learn a bit of MD, but that will come as I copy stuff from other sites. Does this do it?","title":"Testing my first chapter!"},{"location":"animations/colorstops/","text":"Using colorstops do change the color of a tool \u00b6 One way to style the color of a tool is using colorstops where the state of the entity is used to choose a color to fill the tool. - type : 'custom:swiss-army-knife-card' entities : - entity : sensor.u_s_air_quality_index name : 'Air quality' area : 'Tha Moon' - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 entity_index : 0 # First entity is index 0 show : style : 'colorstops' # Format using colorstops colorstops : fill : true # Use the fill property (stroke is also possible) colors : 0 : '#A8E05F' # Good (0..50) - Green 51 : '#FDD74B' # Moderate (51..100) - Yellow 101 : '#FE9B57' # Unhealthy for sensitive groups - Orange 151 : '#FE6A69' # Unhealthy (101..150) - Red 201 : '#A97ABC' # Very Unhealthy (201..300) - Purple 301 : '#A87383' # Hazardous (300 and up) - Brown styles : circle : transition : fill 0.5s # Take 0.5s to change color Animate a circle using an animation operators \u00b6 yaml - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 entity_index : 0 animations : - state : '50' # Good (0..50) - Green operator : <= styles : circle : fill : '#A8E05F' - state : '100' # Moderate (51..100) - Yellow operator : <= styles : circle : fill : '#FDD74B' - state : '150' # Unhealthy for sensitive groups - Orange operator : <= styles : circle : fill : '#FE9B57' - state : '200' # Unhealthy (101..150) - Red operator : <= styles : circle : fill : '#FE6A69' - state : '300' # Very Unhealthy (201..300) - Purple operator : <= styles : circle : fill : '#A97ABC' - state : '9999' # Hazardous (300 and up) - Brown operator : <= styles : circle : fill : '#A87383'","title":"Colorstops"},{"location":"animations/colorstops/#using-colorstops-do-change-the-color-of-a-tool","text":"One way to style the color of a tool is using colorstops where the state of the entity is used to choose a color to fill the tool. - type : 'custom:swiss-army-knife-card' entities : - entity : sensor.u_s_air_quality_index name : 'Air quality' area : 'Tha Moon' - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 entity_index : 0 # First entity is index 0 show : style : 'colorstops' # Format using colorstops colorstops : fill : true # Use the fill property (stroke is also possible) colors : 0 : '#A8E05F' # Good (0..50) - Green 51 : '#FDD74B' # Moderate (51..100) - Yellow 101 : '#FE9B57' # Unhealthy for sensitive groups - Orange 151 : '#FE6A69' # Unhealthy (101..150) - Red 201 : '#A97ABC' # Very Unhealthy (201..300) - Purple 301 : '#A87383' # Hazardous (300 and up) - Brown styles : circle : transition : fill 0.5s # Take 0.5s to change color","title":"Using colorstops do change the color of a tool"},{"location":"animations/colorstops/#animate-a-circle-using-an-animation-operators","text":"yaml - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 entity_index : 0 animations : - state : '50' # Good (0..50) - Green operator : <= styles : circle : fill : '#A8E05F' - state : '100' # Moderate (51..100) - Yellow operator : <= styles : circle : fill : '#FDD74B' - state : '150' # Unhealthy for sensitive groups - Orange operator : <= styles : circle : fill : '#FE9B57' - state : '200' # Unhealthy (101..150) - Red operator : <= styles : circle : fill : '#FE6A69' - state : '300' # Very Unhealthy (201..300) - Purple operator : <= styles : circle : fill : '#A97ABC' - state : '9999' # Hazardous (300 and up) - Brown operator : <= styles : circle : fill : '#A87383'","title":"Animate a circle using an animation operators"},{"location":"examples/example-1/","text":"A single card displaying data from Airvisual, the current weather and a 5 day weather forecast. View: \u00b6 Local file: \\lovelace\\views\\view-sake1.yaml Data sources: \u00b6 Met.no Weather integration Airvisual integration In total approx 50 entities are used to build this visualization. Assets \u00b6 The weather type icons are external animated SVG's located in the <xyz> folder Templates \u00b6 None Visualization \u00b6 If you LOVE YAML Then this is your go-to card: absolutely NO re-use, so no templates are used to define this card. It's a whopping 1.500 lines of YAML. If you DON'T love YAML Then skip this example and look at the other examples first! Interactions \u00b6 All tools support by default the \"more-info\" dialog once clicked. Remarks \u00b6 This view shows the dutch translation for \"Partly Cloudy \u2192 Gedeeltelijk bewolkt\" and the wind direction \"WSW \u2192 WZW\". Support for translations is possible using a YAML definition.","title":"1. Airvisual & Weather forecast"},{"location":"examples/example-1/#view","text":"Local file: \\lovelace\\views\\view-sake1.yaml","title":"View:"},{"location":"examples/example-1/#data-sources","text":"Met.no Weather integration Airvisual integration In total approx 50 entities are used to build this visualization.","title":"Data sources:"},{"location":"examples/example-1/#assets","text":"The weather type icons are external animated SVG's located in the <xyz> folder","title":"Assets"},{"location":"examples/example-1/#templates","text":"None","title":"Templates"},{"location":"examples/example-1/#visualization","text":"If you LOVE YAML Then this is your go-to card: absolutely NO re-use, so no templates are used to define this card. It's a whopping 1.500 lines of YAML. If you DON'T love YAML Then skip this example and look at the other examples first!","title":"Visualization"},{"location":"examples/example-1/#interactions","text":"All tools support by default the \"more-info\" dialog once clicked.","title":"Interactions"},{"location":"examples/example-1/#remarks","text":"This view shows the dutch translation for \"Partly Cloudy \u2192 Gedeeltelijk bewolkt\" and the wind direction \"WSW \u2192 WZW\". Support for translations is possible using a YAML definition.","title":"Remarks"},{"location":"examples/example-2/","text":"","title":"2. Lightning"},{"location":"examples/example-3/","text":"","title":"3. Sensors"},{"location":"examples/example-4/","text":"","title":"4. Sensors"},{"location":"examples/example-5/","text":"","title":"5. Car dashboard alike"},{"location":"examples/example-6/","text":"","title":"6. Weather on SVG background"},{"location":"examples/example-7/","text":"","title":"7. Servers"},{"location":"examples/example-8/","text":"","title":"8. Homekit alike"},{"location":"tools/circle-tool/","text":"The Circle tool \u00b6 Basic definition \u00b6 - type : 'circle' # tooltype is 'circle' position : # Position on (100,100) canvas cx : 50 # cx=50 is center position cy : 50 # cy=50 is center position radius : 17.5 # radius of circle Styling \u00b6 Styling using CSS classes \u00b6 yaml - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 classes : circle : # Class definitions for circle my-red-circle : true # User defined CSS class css definition in user-css-definitions.yaml - descr : My red circle definition content : > .my-red-circle { stroke: red; fill: red; } Styling using CSS inline Styles \u00b6 yaml - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 styles : circle : stroke : red fill : red Styling using CSS classes and overriding inline Styles \u00b6 The next definition results in a circle with red stroke and blue fill. yaml - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 classes : circle : my-red-circle : true styles : circle : fill : blue","title":"Circle tool"},{"location":"tools/circle-tool/#the-circle-tool","text":"","title":"The Circle tool"},{"location":"tools/circle-tool/#basic-definition","text":"- type : 'circle' # tooltype is 'circle' position : # Position on (100,100) canvas cx : 50 # cx=50 is center position cy : 50 # cy=50 is center position radius : 17.5 # radius of circle","title":"Basic definition"},{"location":"tools/circle-tool/#styling","text":"","title":"Styling"},{"location":"tools/circle-tool/#styling-using-css-classes","text":"yaml - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 classes : circle : # Class definitions for circle my-red-circle : true # User defined CSS class css definition in user-css-definitions.yaml - descr : My red circle definition content : > .my-red-circle { stroke: red; fill: red; }","title":"Styling using CSS classes"},{"location":"tools/circle-tool/#styling-using-css-inline-styles","text":"yaml - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 styles : circle : stroke : red fill : red","title":"Styling using CSS inline Styles"},{"location":"tools/circle-tool/#styling-using-css-classes-and-overriding-inline-styles","text":"The next definition results in a circle with red stroke and blue fill. yaml - type : 'circle' position : cx : 50 cy : 50 radius : 17.5 classes : circle : my-red-circle : true styles : circle : fill : blue","title":"Styling using CSS classes and overriding inline Styles"}]}